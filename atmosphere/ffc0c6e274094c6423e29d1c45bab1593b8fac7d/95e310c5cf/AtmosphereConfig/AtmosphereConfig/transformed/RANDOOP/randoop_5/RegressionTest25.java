import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest25 {

    public static boolean debug = false;

    @Test
    public void test12501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12501");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.shutdownHook(shutdownHook11);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext13 = atmosphereConfig12.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
    }

    @Test
    public void test12502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12502");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("");
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig4.setframework(atmosphereFramework11);
        boolean boolean13 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test12503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12503");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        boolean boolean7 = atmosphereConfig6.throwExceptionOnCloned;
        int int10 = atmosphereConfig6.getInitParameter("hi!", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig11.getframework();
        boolean boolean15 = atmosphereConfig11.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig11.atmosphereHandlerConfig;
        org.slf4j.Logger logger17 = atmosphereConfig11.getlogger();
        boolean boolean18 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig11.properties;
        atmosphereConfig6.setproperties(strMap19);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster21 = atmosphereConfig6.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test12504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12504");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("");
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        boolean boolean14 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig4.startupHook(startupHook15);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test12505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12505");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig0.framework();
        boolean boolean33 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookList34);
    }

    @Test
    public void test12506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12506");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean15 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework18);
        boolean boolean20 = atmosphereConfig19.isThrowExceptionOnCloned();
        atmosphereConfig19.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.destroy();
        atmosphereConfig23.initComplete();
        java.lang.String str30 = atmosphereConfig23.getInitParameter("hi!", "");
        boolean boolean31 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        boolean boolean34 = atmosphereConfig23.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig46.setframework(atmosphereFramework47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig46.getproperties();
        atmosphereConfig35.setproperties(strMap49);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig35.framework;
        boolean boolean52 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig35.startupHook(startupHook53);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.atmosphereHandlerConfig;
        atmosphereConfig23.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        atmosphereConfig19.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig19.properties;
        atmosphereConfig0.properties = strMap58;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test12507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12507");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        boolean boolean67 = atmosphereConfig65.throwExceptionOnCloned;
        atmosphereConfig65.destroy();
        atmosphereConfig65.initComplete();
        java.lang.String str72 = atmosphereConfig65.getInitParameter("hi!", "");
        boolean boolean73 = atmosphereConfig65.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig74.getshutdownHooks();
        atmosphereConfig74.setThrowExceptionOnCloned(false);
        java.lang.String str80 = atmosphereConfig74.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig74.properties;
        atmosphereConfig65.setproperties(strMap81);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig65.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList83;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList85 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig0.properties;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider87 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNotNull(shutdownHookList76);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList85);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test12508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12508");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.destroy();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig0.getproperties();
        boolean boolean19 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean20 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test12509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12509");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.initComplete();
        java.lang.String str18 = atmosphereConfig11.getInitParameter("hi!", "");
        boolean boolean19 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        atmosphereConfig31.setframework(atmosphereFramework32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.getproperties();
        atmosphereConfig20.setproperties(strMap34);
        atmosphereConfig11.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.populate(atmosphereConfig11);
        java.lang.String str39 = atmosphereConfig37.getInitParameter("");
        boolean boolean42 = atmosphereConfig37.getInitParameter("", false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test12510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12510");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig0.properties = strMap11;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig0.setframework(atmosphereFramework17);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig21.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig21.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        atmosphereConfig29.setproperties(strMap43);
        atmosphereConfig21.setproperties(strMap43);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig21.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig47.startUpHook;
        atmosphereConfig21.startUpHook = startupHookList49;
        boolean boolean51 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        int int56 = atmosphereConfig52.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig52.supportSession = false;
        atmosphereConfig52.setSupportSession(false);
        boolean boolean61 = atmosphereConfig52.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig63.getshutdownHooks();
        boolean boolean68 = atmosphereConfig63.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig69.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = atmosphereConfig69.getshutdownHooks();
        atmosphereConfig69.setThrowExceptionOnCloned(false);
        java.lang.String str75 = atmosphereConfig69.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig69.properties;
        atmosphereConfig63.setproperties(strMap76);
        atmosphereConfig62.properties = strMap76;
        atmosphereConfig52.setproperties(strMap76);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList80;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList80;
        int int85 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertNotNull(shutdownHookList71);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test12511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12511");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.supportSession = false;
        int int16 = atmosphereConfig0.getInitParameter("hi!", 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test12512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12512");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig18.populate(atmosphereConfig25);
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(false);
        boolean boolean32 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        boolean boolean33 = atmosphereConfig25.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test12513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12513");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        boolean boolean11 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test12514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12514");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig0.shutdownHook(shutdownHook38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig39.properties();
        boolean boolean41 = atmosphereConfig39.isThrowExceptionOnCloned();
        boolean boolean42 = atmosphereConfig39.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig43.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig47.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList54, startupHookArray53);
        atmosphereConfig47.startUpHook = startupHookList54;
        atmosphereConfig43.startUpHook = startupHookList54;
        boolean boolean58 = atmosphereConfig43.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        atmosphereConfig43.framework = atmosphereFramework59;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig43.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig43.getshutdownHooks();
        atmosphereConfig39.shutdownHooks = shutdownHookList62;
        int int66 = atmosphereConfig39.getInitParameter("", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig39.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig39.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig69.getAtmosphereHandlerConfig();
        boolean boolean71 = atmosphereConfig69.throwExceptionOnCloned;
        atmosphereConfig69.destroy();
        atmosphereConfig69.initComplete();
        java.lang.String str76 = atmosphereConfig69.getInitParameter("hi!", "");
        boolean boolean77 = atmosphereConfig69.isSessionTimeoutRemovalAllowed();
        java.lang.String str79 = atmosphereConfig69.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray80 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList81, shutdownHookArray80);
        atmosphereConfig69.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList81);
        boolean boolean84 = atmosphereConfig69.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList85 = atmosphereConfig69.getAtmosphereHandlerConfig();
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList85;
        atmosphereConfig39.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertNotNull(startupHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(shutdownHookList62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(shutdownHookArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList85);
    }

    @Test
    public void test12515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12515");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.shutdownHook(shutdownHook13);
        boolean boolean15 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap18 = atmosphereConfig17.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test12516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12516");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig10.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.getproperties();
        atmosphereConfig0.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.shutdownHook(shutdownHook25);
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        atmosphereConfig24.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.shutdownHook(shutdownHook35);
        org.slf4j.Logger logger37 = atmosphereConfig36.getlogger();
        boolean boolean38 = atmosphereConfig36.isSupportSession();
        boolean boolean39 = atmosphereConfig36.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45, startupHookArray44);
        atmosphereConfig40.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45);
        atmosphereConfig36.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45);
        atmosphereConfig24.startUpHook = startupHookList45;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig50.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList55, startupHookArray54);
        atmosphereConfig50.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        atmosphereConfig50.framework = atmosphereFramework58;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig50.getstartUpHook();
        atmosphereConfig24.startUpHook = startupHookList60;
        atmosphereConfig0.setstartUpHook(startupHookList60);
        org.slf4j.Logger logger63 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(logger37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(startupHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(logger63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
    }

    @Test
    public void test12517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12517");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig18.setframework(atmosphereFramework19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig18.shutdownHooks;
        boolean boolean23 = atmosphereConfig18.isSupportSession();
        java.lang.String str25 = atmosphereConfig18.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        int int30 = atmosphereConfig26.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig26.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig32.framework = atmosphereFramework40;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig32.getstartUpHook();
        atmosphereConfig26.setstartUpHook(startupHookList42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig48.shutdownHook(shutdownHook49);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig48.atmosphereHandlerConfig;
        boolean boolean52 = atmosphereConfig48.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig48.getshutdownHooks();
        atmosphereConfig26.shutdownHooks = shutdownHookList53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig26.properties();
        atmosphereConfig18.properties = strMap55;
        atmosphereConfig0.properties = strMap55;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        atmosphereConfig0.setframework(atmosphereFramework58);
        boolean boolean60 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test12518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12518");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean7 = atmosphereConfig5.throwExceptionOnCloned;
        atmosphereConfig5.destroy();
        atmosphereConfig5.initComplete();
        java.lang.String str12 = atmosphereConfig5.getInitParameter("hi!", "");
        boolean boolean13 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean14 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig0.setframework(atmosphereFramework17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
    }

    @Test
    public void test12519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12519");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.destroy();
        atmosphereConfig13.initComplete();
        java.lang.String str20 = atmosphereConfig13.getInitParameter("hi!", "");
        boolean boolean21 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        atmosphereConfig13.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.populate(atmosphereConfig13);
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(false);
        boolean boolean29 = atmosphereConfig13.isSupportSession();
        boolean boolean30 = atmosphereConfig13.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test12520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12520");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        java.lang.Class<?> wildcardClass11 = startupHookList10.getClass();
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test12521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12521");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig32.startupHook(startupHook65);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig32.shutdownHook(shutdownHook67);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig68.properties();
        boolean boolean70 = atmosphereConfig68.isSessionTimeoutRemovalAllowed();
        boolean boolean71 = atmosphereConfig68.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig68.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
    }

    @Test
    public void test12522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12522");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.shutdownHook(shutdownHook16);
        atmosphereConfig15.setThrowExceptionOnCloned(false);
        atmosphereConfig15.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.isSupportSession();
        boolean boolean30 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig31.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig27.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig15.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig15.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig45.setshutdownHooks(shutdownHookList52);
        atmosphereConfig15.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        int int59 = atmosphereConfig55.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig55.supportSession = false;
        boolean boolean62 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig55.setshutdownHooks(shutdownHookList65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.properties();
        atmosphereConfig55.properties = strMap70;
        atmosphereConfig15.setproperties(strMap70);
        atmosphereConfig8.properties = strMap70;
        boolean boolean76 = atmosphereConfig8.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig4.populate(atmosphereConfig8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean80 = atmosphereConfig4.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test12523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12523");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        boolean boolean14 = atmosphereConfig11.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.getAtmosphereHandlerConfig();
        int int19 = atmosphereConfig15.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig15.supportSession = false;
        boolean boolean22 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        atmosphereConfig15.destroy();
        boolean boolean24 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig15.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        boolean boolean28 = atmosphereConfig26.throwExceptionOnCloned;
        atmosphereConfig26.destroy();
        atmosphereConfig26.initComplete();
        java.lang.String str33 = atmosphereConfig26.getInitParameter("hi!", "");
        boolean boolean34 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        boolean boolean37 = atmosphereConfig26.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig38.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig38.getproperties();
        atmosphereConfig26.setproperties(strMap41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig26.atmosphereHandlerConfig;
        atmosphereConfig26.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig46.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList51, startupHookArray50);
        atmosphereConfig46.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList51);
        atmosphereConfig46.initComplete();
        atmosphereConfig46.sessionTimeoutRemovalAllowed = true;
        boolean boolean57 = atmosphereConfig46.isSessionTimeoutRemovalAllowed();
        boolean boolean58 = atmosphereConfig46.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig46.startupHook(startupHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig65.shutdownHook(shutdownHook66);
        atmosphereConfig67.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig67.startupHook(startupHook69);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig70.properties;
        atmosphereConfig46.properties = strMap71;
        atmosphereConfig26.properties = strMap71;
        atmosphereConfig15.properties = strMap71;
        atmosphereConfig11.properties = strMap71;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig11.shutdownHook(shutdownHook76);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(startupHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
    }

    @Test
    public void test12524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12524");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.getshutdownHooks();
        int int9 = atmosphereConfig0.getInitParameter("", (int) (byte) 0);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        boolean boolean18 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        atmosphereConfig14.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        int int25 = atmosphereConfig14.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig14.startupHook(startupHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig13.populate(atmosphereConfig27);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig31 = atmosphereConfig30.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
    }

    @Test
    public void test12525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12525");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig10.throwExceptionOnCloned = true;
        boolean boolean14 = atmosphereConfig10.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        boolean boolean19 = atmosphereConfig0.getInitParameter("hi!", false);
        boolean boolean20 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig21.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        boolean boolean29 = atmosphereConfig27.throwExceptionOnCloned;
        atmosphereConfig27.destroy();
        atmosphereConfig27.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig27.shutdownHook(shutdownHook33);
        atmosphereConfig27.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        boolean boolean39 = atmosphereConfig37.throwExceptionOnCloned;
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        boolean boolean42 = atmosphereConfig37.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig37.getproperties();
        atmosphereConfig27.setproperties(strMap43);
        boolean boolean45 = atmosphereConfig27.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig26.populate(atmosphereConfig27);
        int int49 = atmosphereConfig46.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig46.startupHook(startupHook50);
        boolean boolean52 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.populate(atmosphereConfig51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig53.setframework(atmosphereFramework54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
    }

    @Test
    public void test12526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12526");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        boolean boolean17 = atmosphereConfig12.getInitParameter("", true);
        boolean boolean18 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig12.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList19;
        org.slf4j.Logger logger21 = atmosphereConfig0.getlogger();
        boolean boolean22 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        boolean boolean27 = atmosphereConfig25.throwExceptionOnCloned;
        atmosphereConfig25.destroy();
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig25.framework = atmosphereFramework30;
        int int34 = atmosphereConfig25.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig25.getstartUpHook();
        atmosphereConfig25.setSupportSession(false);
        boolean boolean40 = atmosphereConfig25.getInitParameter("hi!", false);
        atmosphereConfig25.sessionTimeoutRemovalAllowed = false;
        boolean boolean43 = atmosphereConfig25.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig25.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean46 = atmosphereConfig45.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = null;
        atmosphereConfig45.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        boolean boolean51 = atmosphereConfig45.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig25.populate(atmosphereConfig45);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig45.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig45.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig0.populate(atmosphereConfig45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig55.setframework(atmosphereFramework56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(logger21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 35 + "'", int34 == 35);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
    }

    @Test
    public void test12527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12527");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        java.lang.String str11 = atmosphereConfig9.getInitParameter("");
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig9.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig9.getframework();
        boolean boolean16 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        org.slf4j.Logger logger24 = atmosphereConfig23.getlogger();
        boolean boolean25 = atmosphereConfig23.isSupportSession();
        atmosphereConfig23.throwExceptionOnCloned = false;
        atmosphereConfig23.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig23.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig23.setframework(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig9.populate(atmosphereConfig23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig33.framework();
        boolean boolean35 = atmosphereConfig33.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig33.getframework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(atmosphereFramework36);
    }

    @Test
    public void test12528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12528");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig6.framework();
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        boolean boolean12 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test12529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12529");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        atmosphereConfig0.initComplete();
        int int13 = atmosphereConfig0.getInitParameter("hi!", 10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig14.shutdownHook(shutdownHook20);
        atmosphereConfig14.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig14.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig14.shutdownHooks;
        boolean boolean25 = atmosphereConfig14.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig14.properties;
        atmosphereConfig0.properties = strMap26;
        java.lang.Class<?> wildcardClass28 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test12530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12530");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.framework;
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
    }

    @Test
    public void test12531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12531");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.shutdownHook(shutdownHook20);
        atmosphereConfig21.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.startupHook(startupHook23);
        atmosphereConfig24.initComplete();
        java.lang.String str27 = atmosphereConfig24.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        int int32 = atmosphereConfig28.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig28.supportSession = false;
        boolean boolean35 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        boolean boolean36 = atmosphereConfig28.throwExceptionOnCloned;
        java.lang.String str38 = atmosphereConfig28.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        atmosphereConfig39.throwExceptionOnCloned = true;
        boolean boolean43 = atmosphereConfig39.isSupportSession();
        boolean boolean44 = atmosphereConfig39.isSessionTimeoutRemovalAllowed();
        boolean boolean45 = atmosphereConfig39.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.shutdownHook(shutdownHook51);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig50.atmosphereHandlerConfig;
        boolean boolean54 = atmosphereConfig50.supportSession;
        boolean boolean55 = atmosphereConfig50.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig50.properties;
        atmosphereConfig39.setproperties(strMap56);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig39.startUpHook;
        atmosphereConfig28.setstartUpHook(startupHookList58);
        atmosphereConfig24.startUpHook = startupHookList58;
        atmosphereConfig14.startUpHook = startupHookList58;
        atmosphereConfig14.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = null;
        atmosphereConfig14.shutdownHooks = shutdownHookList64;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(startupHookList58);
    }

    @Test
    public void test12532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12532");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig12.framework = atmosphereFramework17;
        int int21 = atmosphereConfig12.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig12.framework;
        boolean boolean23 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        atmosphereConfig12.destroy();
        atmosphereConfig12.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig12.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig12.getproperties();
        atmosphereConfig11.setproperties(strMap28);
        atmosphereConfig11.throwExceptionOnCloned = true;
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig11.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 35 + "'", int21 == 35);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test12533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12533");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        boolean boolean9 = atmosphereConfig6.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = atmosphereConfig6.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test12534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12534");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        atmosphereConfig14.destroy();
        atmosphereConfig14.supportSession = true;
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig14.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.shutdownHook(shutdownHook30);
        org.slf4j.Logger logger32 = atmosphereConfig31.getlogger();
        boolean boolean33 = atmosphereConfig31.isSupportSession();
        atmosphereConfig31.throwExceptionOnCloned = false;
        atmosphereConfig31.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig31.startUpHook;
        atmosphereConfig14.startUpHook = startupHookList38;
        atmosphereConfig0.startUpHook = startupHookList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        int int45 = atmosphereConfig41.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig41.supportSession = false;
        atmosphereConfig41.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig41.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig41.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig41.shutdownHook(shutdownHook52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig54.throwExceptionOnCloned = true;
        boolean boolean58 = atmosphereConfig54.isSupportSession();
        boolean boolean59 = atmosphereConfig54.isSessionTimeoutRemovalAllowed();
        boolean boolean60 = atmosphereConfig54.sessionTimeoutRemovalAllowed;
        boolean boolean61 = atmosphereConfig54.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig54.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig54.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig64.getAtmosphereHandlerConfig();
        int int68 = atmosphereConfig64.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig64.supportSession = false;
        atmosphereConfig64.setSupportSession(false);
        java.lang.String str74 = atmosphereConfig64.getInitParameter("hi!");
        boolean boolean77 = atmosphereConfig64.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig64.getshutdownHooks();
        atmosphereConfig54.setshutdownHooks(shutdownHookList78);
        atmosphereConfig53.setshutdownHooks(shutdownHookList78);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = atmosphereConfig53.framework();
        atmosphereConfig53.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = atmosphereConfig53.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList84;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(shutdownHookList62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNull(atmosphereFramework81);
        org.junit.Assert.assertNotNull(shutdownHookList84);
    }

    @Test
    public void test12535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12535");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.slf4j.Logger logger65 = atmosphereConfig64.getlogger();
        atmosphereConfig64.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig67.shutdownHook(shutdownHook70);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig71.shutdownHook(shutdownHook72);
        int int76 = atmosphereConfig73.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig77.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig77.shutdownHook(shutdownHook80);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig81.shutdownHook(shutdownHook82);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig81.atmosphereHandlerConfig;
        atmosphereConfig73.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList86 = atmosphereConfig73.atmosphereHandlerConfig;
        atmosphereConfig73.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig64.populate(atmosphereConfig73);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = atmosphereConfig64.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList91 = atmosphereConfig64.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(logger65);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList86);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(startupHookList91);
    }

    @Test
    public void test12536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12536");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig17.initComplete();
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.shutdownHook(shutdownHook34);
        atmosphereConfig33.setThrowExceptionOnCloned(false);
        atmosphereConfig33.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig43.shutdownHook(shutdownHook44);
        org.slf4j.Logger logger46 = atmosphereConfig45.getlogger();
        boolean boolean47 = atmosphereConfig45.isSupportSession();
        boolean boolean48 = atmosphereConfig45.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig49.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray53 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList54, startupHookArray53);
        atmosphereConfig49.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList54);
        atmosphereConfig45.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList54);
        atmosphereConfig33.startUpHook = startupHookList54;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray63 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList64, startupHookArray63);
        atmosphereConfig59.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList64);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig59.framework = atmosphereFramework67;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = atmosphereConfig59.getstartUpHook();
        atmosphereConfig33.startUpHook = startupHookList69;
        atmosphereConfig27.setstartUpHook(startupHookList69);
        boolean boolean72 = atmosphereConfig27.throwExceptionOnCloned;
        atmosphereConfig27.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(logger46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(startupHookArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(startupHookArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(startupHookList69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test12537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12537");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig27.getproperties();
        boolean boolean29 = atmosphereConfig27.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.properties();
        atmosphereConfig0.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig0.framework;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(atmosphereFramework32);
    }

    @Test
    public void test12538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12538");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig10.supportSession = false;
        atmosphereConfig10.setSupportSession(false);
        java.lang.String str20 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.populate(atmosphereConfig10);
        java.lang.String str24 = atmosphereConfig21.getInitParameter("hi!", "");
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig21.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig28.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList33, startupHookArray32);
        atmosphereConfig28.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig28.framework = atmosphereFramework36;
        atmosphereConfig28.destroy();
        java.lang.String str41 = atmosphereConfig28.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        boolean boolean44 = atmosphereConfig42.throwExceptionOnCloned;
        atmosphereConfig42.destroy();
        atmosphereConfig42.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig42.framework = atmosphereFramework47;
        int int51 = atmosphereConfig42.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig42.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        boolean boolean58 = atmosphereConfig21.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig21.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig21.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(startupHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 35 + "'", int51 == 35);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(shutdownHookList59);
        org.junit.Assert.assertNull(atmosphereFramework60);
    }

    @Test
    public void test12539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12539");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.getproperties();
        atmosphereConfig16.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig16.framework;
        boolean boolean33 = atmosphereConfig16.supportSession;
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig0.framework;
        boolean boolean38 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test12540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12540");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig12.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList17);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.startupHook(startupHook22);
        atmosphereConfig23.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        boolean boolean28 = atmosphereConfig26.throwExceptionOnCloned;
        atmosphereConfig26.destroy();
        atmosphereConfig26.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig26.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig34.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39, startupHookArray38);
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39);
        atmosphereConfig26.startUpHook = startupHookList39;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig26.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig23.populate(atmosphereConfig26);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig26.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig26.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig48.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        atmosphereConfig48.setproperties(strMap50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(startupHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
    }

    @Test
    public void test12541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12541");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig6.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig6.framework();
        boolean boolean14 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        atmosphereConfig6.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig6.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig6.shutdownHook(shutdownHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig6.getproperties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test12542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12542");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig13.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig13.startupHook(startupHook17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.properties;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean24 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean25 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test12543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12543");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory9 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
    }

    @Test
    public void test12544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12544");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        boolean boolean14 = atmosphereConfig0.getInitParameter("", false);
        boolean boolean15 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig16.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig16.framework();
        atmosphereConfig16.initComplete();
        atmosphereConfig16.destroy();
        boolean boolean28 = atmosphereConfig16.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig16);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.startupHook(startupHook31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test12545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12545");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig0.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.framework = atmosphereFramework19;
        int int23 = atmosphereConfig14.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig14.setSupportSession(false);
        boolean boolean29 = atmosphereConfig14.getInitParameter("hi!", false);
        atmosphereConfig14.sessionTimeoutRemovalAllowed = false;
        boolean boolean32 = atmosphereConfig14.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig14.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean35 = atmosphereConfig34.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = null;
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        boolean boolean40 = atmosphereConfig34.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig14.populate(atmosphereConfig34);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig34.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig34.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig0.populate(atmosphereConfig34);
        atmosphereConfig0.setSupportSession(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 35 + "'", int23 == 35);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
    }

    @Test
    public void test12546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12546");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.destroy();
        atmosphereConfig9.initComplete();
        java.lang.String str16 = atmosphereConfig9.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        java.lang.String str19 = atmosphereConfig9.getInitParameter("hi!");
        boolean boolean20 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig9);
        atmosphereConfig21.setSupportSession(false);
        boolean boolean24 = atmosphereConfig21.isSupportSession();
        atmosphereConfig21.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig21.startupHook(startupHook26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
    }

    @Test
    public void test12547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12547");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17, startupHookArray16);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig12.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig22.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test12548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12548");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.populate(atmosphereConfig6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig6.getstartUpHook();
        java.lang.String str14 = atmosphereConfig6.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test12549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12549");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig13.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig13.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig13.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig0.properties;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        int int30 = atmosphereConfig26.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig26.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig26.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig26.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig26.properties();
        atmosphereConfig0.properties = strMap35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        boolean boolean39 = atmosphereConfig37.throwExceptionOnCloned;
        atmosphereConfig37.destroy();
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig37.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig47.supportSession = false;
        atmosphereConfig47.setSupportSession(false);
        java.lang.String str57 = atmosphereConfig47.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig46.populate(atmosphereConfig47);
        java.lang.String str61 = atmosphereConfig58.getInitParameter("hi!", "");
        atmosphereConfig58.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig58);
        boolean boolean65 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig0.shutdownHook(shutdownHook67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
    }

    @Test
    public void test12550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12550");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig10.supportSession = false;
        atmosphereConfig10.setSupportSession(false);
        java.lang.String str20 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.populate(atmosphereConfig10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig21.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig30.setframework(atmosphereFramework31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig30.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig30.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig30.framework();
        boolean boolean38 = atmosphereConfig30.isSessionTimeoutRemovalAllowed();
        atmosphereConfig30.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig21.populate(atmosphereConfig30);
        boolean boolean42 = atmosphereConfig21.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test12551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12551");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
    }

    @Test
    public void test12552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12552");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        boolean boolean4 = atmosphereConfig0.supportSession;
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        boolean boolean9 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig13.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig13.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig13);
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig0.setframework(atmosphereFramework21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
    }

    @Test
    public void test12553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12553");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig7.throwExceptionOnCloned;
        atmosphereConfig7.destroy();
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig7.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.framework = atmosphereFramework14;
        boolean boolean18 = atmosphereConfig7.getInitParameter("hi!", true);
        atmosphereConfig7.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig0.shutdownHooks = shutdownHookList24;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        boolean boolean30 = atmosphereConfig28.throwExceptionOnCloned;
        atmosphereConfig28.destroy();
        atmosphereConfig28.initComplete();
        java.lang.String str35 = atmosphereConfig28.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig40.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig42.setframework(atmosphereFramework43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig42.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig42.shutdownHooks;
        atmosphereConfig28.shutdownHooks = shutdownHookList46;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig28.shutdownHook(shutdownHook48);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig28.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig28.getproperties();
        atmosphereConfig0.properties = strMap51;
        atmosphereConfig0.supportSession = true;
        int int57 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test12554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12554");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        boolean boolean21 = atmosphereConfig16.isSupportSession();
        atmosphereConfig16.setSupportSession(false);
        boolean boolean24 = atmosphereConfig16.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig16.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig26.getshutdownHooks();
        atmosphereConfig26.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.getshutdownHooks();
        atmosphereConfig26.setshutdownHooks(shutdownHookList33);
        boolean boolean35 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig26.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        boolean boolean39 = atmosphereConfig37.throwExceptionOnCloned;
        atmosphereConfig37.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig37.destroy();
        boolean boolean45 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig37.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig37.atmosphereHandlerConfig;
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig53.shutdownHook(shutdownHook54);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig53.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig53.startupHook(startupHook57);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig53.startUpHook;
        atmosphereConfig26.startUpHook = startupHookList59;
        atmosphereConfig16.setstartUpHook(startupHookList59);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig16.properties();
        atmosphereConfig0.setproperties(strMap62);
        org.slf4j.Logger logger64 = atmosphereConfig0.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(logger64);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test12555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12555");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig6.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig6.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig6.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.slf4j.Logger logger19 = atmosphereConfig16.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig20.setshutdownHooks(shutdownHookList27);
        boolean boolean29 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        atmosphereConfig20.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig16.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        int int40 = atmosphereConfig36.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig36.supportSession = false;
        atmosphereConfig36.setSupportSession(false);
        boolean boolean45 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig36.properties;
        org.slf4j.Logger logger47 = atmosphereConfig36.getlogger();
        boolean boolean48 = atmosphereConfig36.supportSession;
        atmosphereConfig36.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig36.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        int int56 = atmosphereConfig52.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig52.supportSession = false;
        atmosphereConfig52.setSupportSession(false);
        boolean boolean61 = atmosphereConfig52.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig52.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = null;
        atmosphereConfig52.properties = strMap63;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        atmosphereConfig52.framework = atmosphereFramework65;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig52.atmosphereHandlerConfig;
        atmosphereConfig36.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        java.lang.String str70 = atmosphereConfig36.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig71.getAtmosphereHandlerConfig();
        int int75 = atmosphereConfig71.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = atmosphereConfig71.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig71.startupHook(startupHook77);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig78.getproperties();
        boolean boolean80 = atmosphereConfig78.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig78.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig36.populate(atmosphereConfig78);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig16.populate(atmosphereConfig36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList84 = atmosphereConfig16.startUpHook;
        atmosphereConfig6.setstartUpHook(startupHookList84);
        boolean boolean86 = atmosphereConfig6.isThrowExceptionOnCloned();
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(logger47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNull(atmosphereFramework76);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(startupHookList84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test12556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12556");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties();
        atmosphereConfig6.destroy();
        atmosphereConfig6.destroy();
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        boolean boolean16 = atmosphereConfig6.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig6.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(shutdownHookList17);
    }

    @Test
    public void test12557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12557");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        java.lang.String str4 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean8 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
    }

    @Test
    public void test12558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12558");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig13.framework();
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig13);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig13.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.slf4j.Logger logger27 = atmosphereConfig24.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig24.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        int int33 = atmosphereConfig29.getInitParameter("hi!", (int) (short) 0);
        boolean boolean34 = atmosphereConfig29.isSupportSession();
        atmosphereConfig29.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.shutdownHook(shutdownHook42);
        org.slf4j.Logger logger44 = atmosphereConfig43.getlogger();
        boolean boolean45 = atmosphereConfig43.isSupportSession();
        boolean boolean46 = atmosphereConfig43.isThrowExceptionOnCloned();
        org.slf4j.Logger logger47 = atmosphereConfig43.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig43.properties();
        atmosphereConfig43.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig29.populate(atmosphereConfig43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig51.throwExceptionOnCloned;
        atmosphereConfig51.destroy();
        atmosphereConfig51.initComplete();
        java.lang.String str58 = atmosphereConfig51.getInitParameter("hi!", "");
        boolean boolean59 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        boolean boolean62 = atmosphereConfig51.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig63.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig63.getproperties();
        atmosphereConfig51.setproperties(strMap66);
        atmosphereConfig51.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig43.populate(atmosphereConfig51);
        boolean boolean70 = atmosphereConfig43.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig43.getstartUpHook();
        atmosphereConfig24.setstartUpHook(startupHookList71);
        atmosphereConfig13.setstartUpHook(startupHookList71);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig13.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig13.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = atmosphereConfig13.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(logger44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(logger47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(atmosphereFramework76);
    }

    @Test
    public void test12559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12559");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList3 = atmosphereConfig1.getshutdownHooks();
        boolean boolean6 = atmosphereConfig1.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig7.getshutdownHooks();
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        java.lang.String str13 = atmosphereConfig7.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig7.properties;
        atmosphereConfig1.setproperties(strMap14);
        atmosphereConfig0.properties = strMap14;
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.getshutdownHooks();
        boolean boolean27 = atmosphereConfig22.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig28.getshutdownHooks();
        atmosphereConfig28.setThrowExceptionOnCloned(false);
        java.lang.String str34 = atmosphereConfig28.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig28.properties;
        atmosphereConfig22.setproperties(strMap35);
        atmosphereConfig21.properties = strMap35;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig21.framework;
        atmosphereConfig21.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig21.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        int int45 = atmosphereConfig41.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig41.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray47 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList48, startupHookArray47);
        atmosphereConfig41.startUpHook = startupHookList48;
        org.slf4j.Logger logger51 = atmosphereConfig41.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig41.destroy();
        atmosphereConfig41.supportSession = true;
        atmosphereConfig41.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig57.getAtmosphereHandlerConfig();
        boolean boolean59 = atmosphereConfig57.throwExceptionOnCloned;
        atmosphereConfig57.destroy();
        atmosphereConfig57.initComplete();
        atmosphereConfig57.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig57.framework();
        atmosphereConfig57.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig41.populate(atmosphereConfig57);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig57.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig69.getAtmosphereHandlerConfig();
        atmosphereConfig69.throwExceptionOnCloned = true;
        boolean boolean73 = atmosphereConfig69.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig69.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig75.shutdownHook(shutdownHook78);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig79.startupHook(startupHook80);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = null;
        atmosphereConfig81.setframework(atmosphereFramework82);
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig81.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList85 = atmosphereConfig81.getshutdownHooks();
        atmosphereConfig69.setshutdownHooks(shutdownHookList85);
        atmosphereConfig69.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig69.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig69.getproperties();
        atmosphereConfig57.properties = strMap91;
        org.slf4j.Logger logger93 = atmosphereConfig57.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList94 = atmosphereConfig57.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList95 = atmosphereConfig57.getstartUpHook();
        atmosphereConfig21.startUpHook = startupHookList95;
        atmosphereConfig0.startUpHook = startupHookList95;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertNotNull(shutdownHookList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(startupHookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(logger51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(shutdownHookList68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(shutdownHookList85);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(logger93);
        org.junit.Assert.assertNotNull(startupHookList94);
        org.junit.Assert.assertNotNull(startupHookList95);
    }

    @Test
    public void test12560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12560");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        boolean boolean8 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig4.getstartUpHook();
        boolean boolean10 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        boolean boolean11 = atmosphereConfig4.supportSession;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test12561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12561");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        atmosphereConfig0.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig13.framework();
        boolean boolean21 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        atmosphereConfig22.destroy();
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig22.shutdownHook(shutdownHook28);
        atmosphereConfig22.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = null;
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig22.getproperties();
        atmosphereConfig13.properties = strMap34;
        atmosphereConfig0.setproperties(strMap34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test12562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12562");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        org.slf4j.Logger logger9 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.startupHook(startupHook10);
        atmosphereConfig11.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        atmosphereConfig13.setSupportSession(false);
        boolean boolean22 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        boolean boolean28 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig23.atmosphereHandlerConfig;
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig35.getstartUpHook();
        boolean boolean39 = atmosphereConfig35.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig44.getshutdownHooks();
        atmosphereConfig35.setshutdownHooks(shutdownHookList45);
        atmosphereConfig13.shutdownHooks = shutdownHookList45;
        atmosphereConfig11.shutdownHooks = shutdownHookList45;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig11.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(startupHookList49);
    }

    @Test
    public void test12563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12563");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        int int16 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig12.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.startupHook(startupHook18);
        boolean boolean20 = atmosphereConfig12.isThrowExceptionOnCloned();
        boolean boolean21 = atmosphereConfig12.isThrowExceptionOnCloned();
        boolean boolean22 = atmosphereConfig12.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig23.throwExceptionOnCloned = true;
        boolean boolean27 = atmosphereConfig23.isSupportSession();
        boolean boolean28 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        boolean boolean29 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig34.atmosphereHandlerConfig;
        boolean boolean38 = atmosphereConfig34.supportSession;
        boolean boolean39 = atmosphereConfig34.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig34.properties;
        atmosphereConfig23.setproperties(strMap40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig23.startUpHook;
        boolean boolean43 = atmosphereConfig23.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig44.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49, startupHookArray48);
        atmosphereConfig44.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig61.startupHook(startupHook62);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig63.setframework(atmosphereFramework64);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig63.getproperties();
        atmosphereConfig52.setproperties(strMap66);
        atmosphereConfig44.setproperties(strMap66);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig44.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig70.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig70.startUpHook;
        atmosphereConfig44.startUpHook = startupHookList72;
        atmosphereConfig23.setstartUpHook(startupHookList72);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig23.shutdownHook(shutdownHook75);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig23.getproperties();
        atmosphereConfig12.setproperties(strMap77);
        atmosphereConfig0.properties = strMap77;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig0.startupHook(startupHook80);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(startupHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
    }

    @Test
    public void test12564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12564");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig17.initComplete();
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig17);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        atmosphereConfig27.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.startupHook(startupHook30);
        boolean boolean32 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory33 = atmosphereConfig31.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test12565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12565");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        boolean boolean13 = atmosphereConfig8.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig16.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig16.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig16.atmosphereHandlerConfig;
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        boolean boolean29 = atmosphereConfig4.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.shutdownHook(shutdownHook35);
        org.slf4j.Logger logger37 = atmosphereConfig36.getlogger();
        boolean boolean38 = atmosphereConfig36.isSupportSession();
        boolean boolean39 = atmosphereConfig36.isThrowExceptionOnCloned();
        org.slf4j.Logger logger40 = atmosphereConfig36.getlogger();
        boolean boolean41 = atmosphereConfig36.isSupportSession();
        atmosphereConfig36.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig4.populate(atmosphereConfig36);
        int int47 = atmosphereConfig44.getInitParameter("hi!", (int) (byte) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig44.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(logger37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(logger40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
    }

    @Test
    public void test12566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12566");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.shutdownHook(shutdownHook23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig24.getproperties();
        atmosphereConfig0.properties = strMap25;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean29 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.shutdownHook(shutdownHook32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.startupHook(startupHook37);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory39 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
    }

    @Test
    public void test12567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12567");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test12568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12568");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig13.throwExceptionOnCloned = true;
        boolean boolean17 = atmosphereConfig13.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig13.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig13.setshutdownHooks(shutdownHookList29);
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        boolean boolean35 = atmosphereConfig33.throwExceptionOnCloned;
        atmosphereConfig33.destroy();
        atmosphereConfig33.initComplete();
        java.lang.String str40 = atmosphereConfig33.getInitParameter("hi!", "");
        boolean boolean41 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.lang.String str43 = atmosphereConfig33.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig33.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        atmosphereConfig13.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig13.shutdownHook(shutdownHook49);
        boolean boolean51 = atmosphereConfig50.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig50.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.populate(atmosphereConfig50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        int int58 = atmosphereConfig54.getInitParameter("hi!", (int) (short) 0);
        boolean boolean59 = atmosphereConfig54.isSupportSession();
        atmosphereConfig54.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig62.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig62.getshutdownHooks();
        boolean boolean67 = atmosphereConfig62.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig68.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = atmosphereConfig68.getshutdownHooks();
        atmosphereConfig68.setThrowExceptionOnCloned(false);
        java.lang.String str74 = atmosphereConfig68.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig68.properties;
        atmosphereConfig62.setproperties(strMap75);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig62.properties;
        atmosphereConfig54.properties = strMap77;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList79 = atmosphereConfig54.getstartUpHook();
        atmosphereConfig53.startUpHook = startupHookList79;
        atmosphereConfig53.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertNotNull(shutdownHookList70);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(startupHookList79);
    }

    @Test
    public void test12569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12569");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        boolean boolean9 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.initComplete();
        java.lang.String str19 = atmosphereConfig12.getInitParameter("hi!", "");
        boolean boolean20 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        atmosphereConfig12.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig12.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList25);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        int int32 = atmosphereConfig28.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger33 = atmosphereConfig28.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        boolean boolean37 = atmosphereConfig35.throwExceptionOnCloned;
        atmosphereConfig35.destroy();
        atmosphereConfig35.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig35.framework = atmosphereFramework40;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        atmosphereConfig35.framework = atmosphereFramework42;
        boolean boolean46 = atmosphereConfig35.getInitParameter("hi!", true);
        atmosphereConfig35.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig35.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList49);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList52, shutdownHookArray51);
        atmosphereConfig28.shutdownHooks = shutdownHookList52;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig28.properties();
        atmosphereConfig0.setproperties(strMap55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig0.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory58 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(logger33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(shutdownHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
    }

    @Test
    public void test12570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12570");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.supportSession = false;
        atmosphereConfig4.supportSession = true;
        atmosphereConfig4.setSupportSession(true);
        boolean boolean13 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test12571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12571");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig7.getproperties();
        boolean boolean9 = atmosphereConfig7.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig7.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig17.setframework(atmosphereFramework18);
        atmosphereConfig17.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig17.properties;
        boolean boolean23 = atmosphereConfig17.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.destroy();
        atmosphereConfig24.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig24.shutdownHook(shutdownHook30);
        atmosphereConfig24.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        boolean boolean36 = atmosphereConfig34.throwExceptionOnCloned;
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        boolean boolean39 = atmosphereConfig34.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig34.getproperties();
        atmosphereConfig24.setproperties(strMap40);
        atmosphereConfig17.properties = strMap40;
        boolean boolean43 = atmosphereConfig17.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig17.startUpHook;
        atmosphereConfig7.setstartUpHook(startupHookList44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap46 = atmosphereConfig7.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(startupHookList44);
    }

    @Test
    public void test12572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12572");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig17.shutdownHook(shutdownHook19);
        atmosphereConfig20.destroy();
        java.lang.String str24 = atmosphereConfig20.getInitParameter("", "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test12573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12573");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertNotNull(shutdownHookList16);
    }

    @Test
    public void test12574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12574");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig6.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig6.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig6.properties();
        atmosphereConfig6.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig6.framework();
        java.lang.Class<?> wildcardClass18 = atmosphereConfig6.getClass();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test12575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12575");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.shutdownHook(shutdownHook17);
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        atmosphereConfig16.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.shutdownHook(shutdownHook27);
        org.slf4j.Logger logger29 = atmosphereConfig28.getlogger();
        boolean boolean30 = atmosphereConfig28.isSupportSession();
        boolean boolean31 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        atmosphereConfig28.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        atmosphereConfig16.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig16.setshutdownHooks(shutdownHookList44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig46.getshutdownHooks();
        atmosphereConfig46.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig51.getshutdownHooks();
        atmosphereConfig46.setshutdownHooks(shutdownHookList53);
        atmosphereConfig16.shutdownHooks = shutdownHookList53;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        int int60 = atmosphereConfig56.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig56.supportSession = false;
        boolean boolean63 = atmosphereConfig56.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig64.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig64.getshutdownHooks();
        atmosphereConfig56.setshutdownHooks(shutdownHookList66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig68.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig68.properties();
        atmosphereConfig56.properties = strMap71;
        atmosphereConfig16.setproperties(strMap71);
        atmosphereConfig9.properties = strMap71;
        boolean boolean75 = atmosphereConfig9.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList76 = atmosphereConfig9.startUpHook;
        atmosphereConfig4.startUpHook = startupHookList76;
        boolean boolean80 = atmosphereConfig4.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = atmosphereConfig4.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList82 = atmosphereConfig4.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(shutdownHookList66);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(startupHookList76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(startupHookList81);
        org.junit.Assert.assertNotNull(shutdownHookList82);
    }

    @Test
    public void test12576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12576");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        atmosphereConfig4.supportSession = true;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.slf4j.Logger logger14 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.shutdownHook(shutdownHook20);
        org.slf4j.Logger logger22 = atmosphereConfig21.getlogger();
        boolean boolean23 = atmosphereConfig21.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig21.getstartUpHook();
        atmosphereConfig21.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig36.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig38.setframework(atmosphereFramework39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig38.getproperties();
        atmosphereConfig27.setproperties(strMap41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig27.framework;
        boolean boolean44 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig27.startupHook(startupHook45);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.atmosphereHandlerConfig;
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        atmosphereConfig4.destroy();
        boolean boolean51 = atmosphereConfig4.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test12577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12577");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        java.lang.String str11 = atmosphereConfig9.getInitParameter("");
        atmosphereConfig9.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig9.framework();
        boolean boolean14 = atmosphereConfig9.isThrowExceptionOnCloned();
        atmosphereConfig9.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration16 = atmosphereConfig9.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test12578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12578");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        int int11 = atmosphereConfig7.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig7.supportSession = false;
        atmosphereConfig7.setSupportSession(false);
        java.lang.String str17 = atmosphereConfig7.getInitParameter("hi!");
        boolean boolean20 = atmosphereConfig7.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig7.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        java.lang.String str24 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        boolean boolean28 = atmosphereConfig26.throwExceptionOnCloned;
        atmosphereConfig26.destroy();
        atmosphereConfig26.initComplete();
        java.lang.String str33 = atmosphereConfig26.getInitParameter("hi!", "");
        boolean boolean34 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        boolean boolean35 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig26.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig26.setframework(atmosphereFramework37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig26.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.populate(atmosphereConfig40);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig0.setframework(atmosphereFramework44);
        boolean boolean46 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test12579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12579");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig7.throwExceptionOnCloned;
        atmosphereConfig7.destroy();
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig7.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.framework = atmosphereFramework14;
        boolean boolean18 = atmosphereConfig7.getInitParameter("hi!", true);
        atmosphereConfig7.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig0.shutdownHooks = shutdownHookList24;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.shutdownHook(shutdownHook27);
        java.lang.String str30 = atmosphereConfig0.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test12580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12580");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean11 = atmosphereConfig10.supportSession;
        boolean boolean14 = atmosphereConfig10.getInitParameter("hi!", false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test12581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12581");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig0.framework = atmosphereFramework29;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNull(atmosphereFramework31);
    }

    @Test
    public void test12582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12582");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.slf4j.Logger logger13 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig19.getshutdownHooks();
        atmosphereConfig14.setshutdownHooks(shutdownHookList21);
        boolean boolean23 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig14.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig10.populate(atmosphereConfig14);
        org.slf4j.Logger logger29 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig35.getstartUpHook();
        boolean boolean39 = atmosphereConfig35.sessionTimeoutRemovalAllowed;
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        boolean boolean44 = atmosphereConfig35.getInitParameter("hi!", false);
        org.slf4j.Logger logger45 = atmosphereConfig35.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig10.populate(atmosphereConfig35);
        boolean boolean47 = atmosphereConfig46.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(logger45);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test12583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12583");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig19.getlogger();
        boolean boolean21 = atmosphereConfig19.isSupportSession();
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig7.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList44);
        atmosphereConfig7.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig47.supportSession = false;
        boolean boolean54 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        atmosphereConfig47.properties = strMap62;
        atmosphereConfig7.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        boolean boolean68 = atmosphereConfig0.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig0.properties;
        boolean boolean72 = atmosphereConfig0.getInitParameter("hi!", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig0.getproperties();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(shutdownHookList76);
    }

    @Test
    public void test12584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12584");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig0.properties = strMap11;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        java.lang.String str21 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.framework;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework22);
    }

    @Test
    public void test12585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12585");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        int int13 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16, startupHookArray15);
        atmosphereConfig9.startUpHook = startupHookList16;
        atmosphereConfig5.startUpHook = startupHookList16;
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.slf4j.Logger logger23 = atmosphereConfig0.getlogger();
        boolean boolean26 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig0.framework = atmosphereFramework27;
        org.slf4j.Logger logger29 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(logger29);
    }

    @Test
    public void test12586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12586");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.destroy();
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test12587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12587");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        atmosphereConfig10.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig10.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig10.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig10.getframework();
        boolean boolean20 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        boolean boolean21 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig10.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.populate(atmosphereConfig10);
        boolean boolean24 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        boolean boolean29 = atmosphereConfig27.throwExceptionOnCloned;
        atmosphereConfig27.destroy();
        atmosphereConfig27.initComplete();
        java.lang.String str34 = atmosphereConfig27.getInitParameter("hi!", "");
        boolean boolean35 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        boolean boolean38 = atmosphereConfig27.getInitParameter("hi!", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig27.getproperties();
        boolean boolean40 = atmosphereConfig27.isSupportSession();
        atmosphereConfig27.initComplete();
        boolean boolean42 = atmosphereConfig27.isSupportSession();
        atmosphereConfig27.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig27.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig27.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList45;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
    }

    @Test
    public void test12588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12588");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig11.throwExceptionOnCloned = true;
        boolean boolean15 = atmosphereConfig11.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig11.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig23.setframework(atmosphereFramework24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig11.setshutdownHooks(shutdownHookList27);
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        boolean boolean33 = atmosphereConfig31.throwExceptionOnCloned;
        atmosphereConfig31.destroy();
        atmosphereConfig31.initComplete();
        java.lang.String str38 = atmosphereConfig31.getInitParameter("hi!", "");
        boolean boolean39 = atmosphereConfig31.isSessionTimeoutRemovalAllowed();
        java.lang.String str41 = atmosphereConfig31.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43, shutdownHookArray42);
        atmosphereConfig31.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43);
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig11.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig11.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig11.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig0.populate(atmosphereConfig11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration53 = atmosphereConfig52.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
    }

    @Test
    public void test12589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12589");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = null;
        atmosphereConfig37.startUpHook = startupHookList38;
        boolean boolean40 = atmosphereConfig37.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        int int45 = atmosphereConfig41.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig41.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig41.framework();
        boolean boolean50 = atmosphereConfig41.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig41.setframework(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig37.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig37.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = null;
        atmosphereConfig37.startUpHook = startupHookList55;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNull(atmosphereFramework54);
    }

    @Test
    public void test12590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12590");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig12.startupHook(startupHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig6.setstartUpHook(startupHookList18);
        java.lang.String str22 = atmosphereConfig6.getInitParameter("", "hi!");
        atmosphereConfig6.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig6.startupHook(startupHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig6.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(startupHookList28);
    }

    @Test
    public void test12591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12591");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.startupHook(startupHook18);
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean22 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap23 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test12592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12592");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        boolean boolean11 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test12593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12593");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList16);
    }

    @Test
    public void test12594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12594");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        java.lang.String str9 = atmosphereConfig6.getInitParameter("", "");
        int int12 = atmosphereConfig6.getInitParameter("hi!", (-1));
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig6.startupHook(startupHook13);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider15 = atmosphereConfig14.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig14);
    }

    @Test
    public void test12595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12595");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean17 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test12596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12596");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.setframework(atmosphereFramework13);
        java.lang.String str16 = atmosphereConfig0.getInitParameter("");
        java.lang.String str19 = atmosphereConfig0.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test12597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12597");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.getstartUpHook();
        boolean boolean16 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(startupHookList17);
    }

    @Test
    public void test12598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12598");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig10.framework = atmosphereFramework12;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList14;
        int int18 = atmosphereConfig0.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig36.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig38.setframework(atmosphereFramework39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig38.getproperties();
        atmosphereConfig27.setproperties(strMap41);
        atmosphereConfig19.setproperties(strMap41);
        atmosphereConfig19.supportSession = false;
        boolean boolean46 = atmosphereConfig19.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean49 = atmosphereConfig47.throwExceptionOnCloned;
        atmosphereConfig47.destroy();
        atmosphereConfig47.initComplete();
        java.lang.String str54 = atmosphereConfig47.getInitParameter("hi!", "");
        boolean boolean55 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig61.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig61.shutdownHook(shutdownHook64);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig65.startupHook(startupHook66);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig67.setframework(atmosphereFramework68);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.getproperties();
        atmosphereConfig56.setproperties(strMap70);
        atmosphereConfig47.setproperties(strMap70);
        java.lang.String str75 = atmosphereConfig47.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig19.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig0.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig77.startupHook(startupHook78);
        atmosphereConfig79.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig79.properties;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider83 = atmosphereConfig79.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test12599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12599");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        atmosphereConfig0.setproperties(strMap10);
        boolean boolean14 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.getAtmosphereHandlerConfig();
        int int19 = atmosphereConfig15.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig15.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig15.startUpHook = startupHookList22;
        org.slf4j.Logger logger25 = atmosphereConfig15.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig15.getshutdownHooks();
        atmosphereConfig15.destroy();
        atmosphereConfig15.supportSession = true;
        atmosphereConfig15.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        boolean boolean33 = atmosphereConfig31.throwExceptionOnCloned;
        atmosphereConfig31.destroy();
        atmosphereConfig31.initComplete();
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig31.framework();
        atmosphereConfig31.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig15.populate(atmosphereConfig31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig31.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig31.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig31.properties;
        atmosphereConfig0.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig46.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList51, startupHookArray50);
        atmosphereConfig46.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig63.startupHook(startupHook64);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig65.setframework(atmosphereFramework66);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig65.getproperties();
        atmosphereConfig54.setproperties(strMap68);
        atmosphereConfig46.setproperties(strMap68);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig46.properties();
        atmosphereConfig0.properties = strMap71;
        atmosphereConfig0.supportSession = true;
        boolean boolean75 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = null;
        atmosphereConfig0.setframework(atmosphereFramework76);
        boolean boolean78 = atmosphereConfig0.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory79 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(startupHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test12600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12600");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties();
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig6.startupHook(startupHook13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig14.properties;
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test12601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12601");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean38 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig0.getproperties();
        atmosphereConfig0.destroy();
        boolean boolean42 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test12602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12602");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig11.supportSession = false;
        boolean boolean18 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        atmosphereConfig11.destroy();
        boolean boolean20 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig11);
        atmosphereConfig21.destroy();
        boolean boolean23 = atmosphereConfig21.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig24.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        int int32 = atmosphereConfig28.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig28.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35, startupHookArray34);
        atmosphereConfig28.startUpHook = startupHookList35;
        atmosphereConfig24.startUpHook = startupHookList35;
        boolean boolean39 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig24.framework = atmosphereFramework40;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig24.getproperties();
        atmosphereConfig21.setproperties(strMap42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig21.properties();
        atmosphereConfig21.destroy();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(startupHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test12603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12603");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig19.getlogger();
        boolean boolean21 = atmosphereConfig19.isSupportSession();
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig7.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList44);
        atmosphereConfig7.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig47.supportSession = false;
        boolean boolean54 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        atmosphereConfig47.properties = strMap62;
        atmosphereConfig7.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        java.lang.String str67 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(atmosphereFramework68);
    }

    @Test
    public void test12604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12604");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        boolean boolean9 = atmosphereConfig4.supportSession;
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str16 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig23.framework = atmosphereFramework24;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig26.getshutdownHooks();
        atmosphereConfig26.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.getshutdownHooks();
        atmosphereConfig26.setshutdownHooks(shutdownHookList33);
        boolean boolean35 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        atmosphereConfig26.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig26.shutdownHooks;
        atmosphereConfig23.shutdownHooks = shutdownHookList38;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig23.startupHook(startupHook40);
        org.slf4j.Logger logger42 = atmosphereConfig23.getlogger();
        org.slf4j.Logger logger43 = atmosphereConfig23.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        int int48 = atmosphereConfig44.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig44.supportSession = false;
        atmosphereConfig44.setSupportSession(false);
        java.lang.String str54 = atmosphereConfig44.getInitParameter("hi!");
        boolean boolean55 = atmosphereConfig44.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = atmosphereConfig44.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig57.getAtmosphereHandlerConfig();
        int int61 = atmosphereConfig57.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig57.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray63 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList64, startupHookArray63);
        atmosphereConfig57.startUpHook = startupHookList64;
        org.slf4j.Logger logger67 = atmosphereConfig57.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig57.getshutdownHooks();
        atmosphereConfig57.destroy();
        atmosphereConfig57.supportSession = true;
        atmosphereConfig57.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig57.shutdownHooks;
        atmosphereConfig44.shutdownHooks = shutdownHookList73;
        atmosphereConfig23.shutdownHooks = shutdownHookList73;
        atmosphereConfig4.shutdownHooks = shutdownHookList73;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(logger42);
        org.junit.Assert.assertNotNull(logger43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(atmosphereFramework56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertNotNull(startupHookArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(logger67);
        org.junit.Assert.assertNotNull(shutdownHookList68);
        org.junit.Assert.assertNotNull(shutdownHookList73);
    }

    @Test
    public void test12605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12605");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.slf4j.Logger logger37 = atmosphereConfig34.getlogger();
        atmosphereConfig34.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        boolean boolean42 = atmosphereConfig40.throwExceptionOnCloned;
        atmosphereConfig40.destroy();
        atmosphereConfig40.initComplete();
        java.lang.String str47 = atmosphereConfig40.getInitParameter("hi!", "");
        atmosphereConfig40.throwExceptionOnCloned = false;
        boolean boolean50 = atmosphereConfig40.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig40.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        int int56 = atmosphereConfig52.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = atmosphereConfig52.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray58 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList59, startupHookArray58);
        atmosphereConfig52.startUpHook = startupHookList59;
        org.slf4j.Logger logger62 = atmosphereConfig52.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig52.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig52.startupHook(startupHook64);
        atmosphereConfig65.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str69 = atmosphereConfig65.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig65.startUpHook;
        atmosphereConfig40.startUpHook = startupHookList70;
        atmosphereConfig34.startUpHook = startupHookList70;
        atmosphereConfig4.setstartUpHook(startupHookList70);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig4.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(logger37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(atmosphereFramework57);
        org.junit.Assert.assertNotNull(startupHookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(logger62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test12606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12606");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.startUpHook;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig21.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig21.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        atmosphereConfig29.setproperties(strMap43);
        atmosphereConfig21.setproperties(strMap43);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig21.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig47.startUpHook;
        atmosphereConfig21.startUpHook = startupHookList49;
        atmosphereConfig0.setstartUpHook(startupHookList49);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.shutdownHook(shutdownHook52);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig0.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig0.startupHook(startupHook56);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(shutdownHookList59);
    }

    @Test
    public void test12607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12607");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.shutdownHook(shutdownHook33);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster35 = atmosphereConfig34.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
    }

    @Test
    public void test12608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12608");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15, startupHookArray14);
        atmosphereConfig8.startUpHook = startupHookList15;
        atmosphereConfig4.startUpHook = startupHookList15;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean20 = atmosphereConfig4.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig4.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.populate(atmosphereConfig4);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig4.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig4.properties;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(startupHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test12609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12609");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig4.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig4.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig4.framework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNull(atmosphereFramework12);
    }

    @Test
    public void test12610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12610");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test12611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12611");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        java.lang.String str17 = atmosphereConfig10.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig10.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig20.framework();
        org.slf4j.Logger logger28 = atmosphereConfig20.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig4.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig4.shutdownHook(shutdownHook31);
        atmosphereConfig32.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig32.framework = atmosphereFramework37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig43.shutdownHook(shutdownHook44);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig43.getstartUpHook();
        atmosphereConfig43.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig43.startupHook(startupHook48);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig32.shutdownHooks = shutdownHookList50;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig32.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
    }

    @Test
    public void test12612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12612");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        atmosphereConfig0.destroy();
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        java.lang.String str17 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean18 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig30.setframework(atmosphereFramework31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.getproperties();
        atmosphereConfig19.setproperties(strMap33);
        atmosphereConfig10.setproperties(strMap33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig10.properties();
        int int40 = atmosphereConfig10.getInitParameter("hi!", (int) (byte) 0);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig10.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig0.populate(atmosphereConfig10);
        boolean boolean44 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test12613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12613");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17, startupHookArray16);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig12.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig12);
        boolean boolean23 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
    }

    @Test
    public void test12614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12614");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test12615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12615");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig4.setframework(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test12616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12616");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig10.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.startupHook(startupHook16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        boolean boolean20 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test12617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12617");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        java.lang.String str19 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean23 = atmosphereConfig22.isThrowExceptionOnCloned();
        boolean boolean24 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig22.framework;
        boolean boolean26 = atmosphereConfig22.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig22.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
    }

    @Test
    public void test12618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12618");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        boolean boolean14 = atmosphereConfig9.getInitParameter("", true);
        atmosphereConfig9.initComplete();
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig29.setframework(atmosphereFramework30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.getproperties();
        atmosphereConfig18.setproperties(strMap32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig6.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig6.properties();
        boolean boolean42 = atmosphereConfig6.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test12619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12619");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig4.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        int int25 = atmosphereConfig21.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig21.supportSession = false;
        atmosphereConfig21.setSupportSession(false);
        java.lang.String str31 = atmosphereConfig21.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig20.populate(atmosphereConfig21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig32.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig4.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig34.framework;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap36 = atmosphereConfig34.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNull(atmosphereFramework35);
    }

    @Test
    public void test12620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12620");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        int int22 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        boolean boolean23 = atmosphereConfig18.isSupportSession();
        atmosphereConfig18.setSupportSession(false);
        boolean boolean26 = atmosphereConfig18.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig18.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig28.getshutdownHooks();
        atmosphereConfig28.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig28.setshutdownHooks(shutdownHookList35);
        boolean boolean37 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig28.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        boolean boolean41 = atmosphereConfig39.throwExceptionOnCloned;
        atmosphereConfig39.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig39.getAtmosphereHandlerConfig();
        atmosphereConfig39.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig39.destroy();
        boolean boolean47 = atmosphereConfig39.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig39.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig39.atmosphereHandlerConfig;
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig55.shutdownHook(shutdownHook56);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig55.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig55.startupHook(startupHook59);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig55.startUpHook;
        atmosphereConfig28.startUpHook = startupHookList61;
        atmosphereConfig18.setstartUpHook(startupHookList61);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig18.properties();
        int int67 = atmosphereConfig18.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig17.populate(atmosphereConfig18);
        int int71 = atmosphereConfig17.getInitParameter("hi!", (int) (byte) 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
    }

    @Test
    public void test12621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12621");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger18 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(logger18);
    }

    @Test
    public void test12622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12622");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        int int16 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig12.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig12.startUpHook = startupHookList19;
        org.slf4j.Logger logger22 = atmosphereConfig12.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig12.destroy();
        atmosphereConfig12.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig12.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.shutdownHooks;
        boolean boolean30 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig31.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.getproperties();
        atmosphereConfig28.properties = strMap34;
        atmosphereConfig0.properties = strMap34;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.shutdownHook(shutdownHook37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig38.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
    }

    @Test
    public void test12623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12623");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.getshutdownHooks();
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.properties;
        atmosphereConfig8.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig8.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig8.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig7.populate(atmosphereConfig8);
        atmosphereConfig7.destroy();
        java.lang.Class<?> wildcardClass22 = atmosphereConfig7.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test12624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12624");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        boolean boolean18 = atmosphereConfig17.supportSession;
        java.lang.String str21 = atmosphereConfig17.getInitParameter("", "");
        atmosphereConfig17.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test12625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12625");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        boolean boolean14 = atmosphereConfig11.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig11.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig11.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.shutdownHook(shutdownHook17);
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig11.framework();
        boolean boolean22 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test12626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12626");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig0.properties();
        java.lang.String str17 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig24.setframework(atmosphereFramework25);
        atmosphereConfig24.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig24.properties;
        boolean boolean30 = atmosphereConfig24.throwExceptionOnCloned;
        boolean boolean33 = atmosphereConfig24.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig24.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig24.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig39.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig56.startupHook(startupHook57);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        atmosphereConfig58.setframework(atmosphereFramework59);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig58.getproperties();
        atmosphereConfig47.setproperties(strMap61);
        atmosphereConfig39.setproperties(strMap61);
        atmosphereConfig24.properties = strMap61;
        atmosphereConfig0.properties = strMap61;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        int int70 = atmosphereConfig0.getInitParameter("", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = null;
        atmosphereConfig0.setframework(atmosphereFramework71);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = null;
        atmosphereConfig0.framework = atmosphereFramework73;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test12627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12627");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        int int13 = atmosphereConfig0.getInitParameter("", (int) (short) 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test12628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12628");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        atmosphereConfig0.setproperties(strMap10);
        boolean boolean14 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.startupHook(startupHook20);
        boolean boolean22 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig19.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.throwExceptionOnCloned;
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        atmosphereConfig24.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig19.setshutdownHooks(shutdownHookList31);
        atmosphereConfig0.shutdownHooks = shutdownHookList31;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.shutdownHook(shutdownHook39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig38.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean43 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig42.startupHook(startupHook44);
        atmosphereConfig42.setThrowExceptionOnCloned(false);
        boolean boolean48 = atmosphereConfig42.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        boolean boolean51 = atmosphereConfig49.throwExceptionOnCloned;
        atmosphereConfig49.destroy();
        atmosphereConfig49.initComplete();
        java.lang.String str56 = atmosphereConfig49.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig61.startupHook(startupHook62);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig63.setframework(atmosphereFramework64);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig63.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig63.shutdownHooks;
        atmosphereConfig49.shutdownHooks = shutdownHookList67;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig49.shutdownHook(shutdownHook69);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig71.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig71.properties;
        atmosphereConfig70.setproperties(strMap73);
        atmosphereConfig42.setproperties(strMap73);
        atmosphereConfig38.properties = strMap73;
        atmosphereConfig0.properties = strMap73;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig0.shutdownHook(shutdownHook80);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
    }

    @Test
    public void test12629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12629");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean15 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        boolean boolean18 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean21 = atmosphereConfig20.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = null;
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        boolean boolean26 = atmosphereConfig20.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig20);
        boolean boolean28 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.shutdownHook(shutdownHook34);
        atmosphereConfig35.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig35.startupHook(startupHook37);
        java.lang.String str40 = atmosphereConfig38.getInitParameter("");
        atmosphereConfig38.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig38.getshutdownHooks();
        atmosphereConfig38.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig38.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig38.setframework(atmosphereFramework48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        boolean boolean52 = atmosphereConfig50.throwExceptionOnCloned;
        atmosphereConfig50.setThrowExceptionOnCloned(false);
        atmosphereConfig50.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = atmosphereConfig50.getframework();
        atmosphereConfig50.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig60.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig60.shutdownHook(shutdownHook63);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig64.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig64.getstartUpHook();
        atmosphereConfig64.initComplete();
        int int71 = atmosphereConfig64.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig72.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = atmosphereConfig72.getshutdownHooks();
        boolean boolean75 = atmosphereConfig72.isSupportSession();
        boolean boolean76 = atmosphereConfig72.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig64.populate(atmosphereConfig72);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig64.shutdownHook(shutdownHook78);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig50.populate(atmosphereConfig64);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig64.shutdownHooks;
        atmosphereConfig38.shutdownHooks = shutdownHookList81;
        atmosphereConfig0.shutdownHooks = shutdownHookList81;
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(atmosphereFramework57);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertNotNull(shutdownHookList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test12630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12630");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig8.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray12 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList13, startupHookArray12);
        atmosphereConfig8.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList13);
        atmosphereConfig0.startUpHook = startupHookList13;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean20 = atmosphereConfig18.throwExceptionOnCloned;
        atmosphereConfig18.destroy();
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig18.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        int int32 = atmosphereConfig28.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig28.supportSession = false;
        atmosphereConfig28.setSupportSession(false);
        java.lang.String str38 = atmosphereConfig28.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig27.populate(atmosphereConfig28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        boolean boolean42 = atmosphereConfig40.throwExceptionOnCloned;
        atmosphereConfig40.destroy();
        atmosphereConfig40.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig40.framework = atmosphereFramework45;
        java.lang.String str49 = atmosphereConfig40.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig40.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig39.setshutdownHooks(shutdownHookList51);
        atmosphereConfig0.shutdownHooks = shutdownHookList51;
        boolean boolean54 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(startupHookArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test12631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12631");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        boolean boolean20 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        atmosphereConfig13.destroy();
        java.lang.String str23 = atmosphereConfig13.getInitParameter("");
        atmosphereConfig13.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig13.shutdownHooks;
        boolean boolean27 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig13.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        boolean boolean31 = atmosphereConfig29.supportSession;
        org.slf4j.Logger logger32 = atmosphereConfig29.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig33.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig38.getshutdownHooks();
        atmosphereConfig33.setshutdownHooks(shutdownHookList40);
        boolean boolean42 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        atmosphereConfig33.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig33.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig29.populate(atmosphereConfig33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.getstartUpHook();
        atmosphereConfig47.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig47.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig47.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.shutdownHook(shutdownHook58);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig57.getshutdownHooks();
        java.lang.String str62 = atmosphereConfig57.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        boolean boolean65 = atmosphereConfig63.throwExceptionOnCloned;
        atmosphereConfig63.destroy();
        atmosphereConfig63.initComplete();
        java.lang.String str70 = atmosphereConfig63.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig63.startUpHook;
        atmosphereConfig57.setstartUpHook(startupHookList71);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = null;
        atmosphereConfig57.framework = atmosphereFramework73;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig57.startupHook(startupHook75);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig77.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig77.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig77.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook81 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig77.startupHook(startupHook81);
        boolean boolean83 = atmosphereConfig82.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig82.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList85 = atmosphereConfig82.startUpHook;
        atmosphereConfig76.setstartUpHook(startupHookList85);
        atmosphereConfig47.startUpHook = startupHookList85;
        atmosphereConfig13.setstartUpHook(startupHookList85);
        atmosphereConfig0.setstartUpHook(startupHookList85);
        boolean boolean90 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(shutdownHookList60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(startupHookList85);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test12632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12632");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.destroy();
        atmosphereConfig9.initComplete();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig9.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        java.lang.String str20 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean21 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig22.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        boolean boolean30 = atmosphereConfig28.throwExceptionOnCloned;
        atmosphereConfig28.destroy();
        atmosphereConfig28.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig28.shutdownHook(shutdownHook34);
        atmosphereConfig28.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        boolean boolean40 = atmosphereConfig38.throwExceptionOnCloned;
        atmosphereConfig38.setThrowExceptionOnCloned(false);
        boolean boolean43 = atmosphereConfig38.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig38.getproperties();
        atmosphereConfig28.setproperties(strMap44);
        boolean boolean46 = atmosphereConfig28.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig27.populate(atmosphereConfig28);
        boolean boolean48 = atmosphereConfig47.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig47.getproperties();
        atmosphereConfig0.setproperties(strMap49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test12633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12633");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig17.throwExceptionOnCloned;
        atmosphereConfig17.destroy();
        atmosphereConfig17.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        atmosphereConfig22.destroy();
        atmosphereConfig22.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig22.framework = atmosphereFramework27;
        int int31 = atmosphereConfig22.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig22.getstartUpHook();
        atmosphereConfig22.setSupportSession(false);
        boolean boolean37 = atmosphereConfig22.getInitParameter("hi!", false);
        atmosphereConfig22.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        int int44 = atmosphereConfig40.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig40.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig40.startupHook(startupHook46);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig47.getproperties();
        boolean boolean49 = atmosphereConfig47.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        boolean boolean52 = atmosphereConfig50.throwExceptionOnCloned;
        atmosphereConfig50.destroy();
        atmosphereConfig50.initComplete();
        java.lang.String str57 = atmosphereConfig50.getInitParameter("hi!", "");
        boolean boolean58 = atmosphereConfig50.isSessionTimeoutRemovalAllowed();
        java.lang.String str60 = atmosphereConfig50.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig61.getAtmosphereHandlerConfig();
        int int65 = atmosphereConfig61.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig61.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = atmosphereConfig61.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig69.shutdownHook(shutdownHook72);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig73.shutdownHook(shutdownHook74);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig73.atmosphereHandlerConfig;
        boolean boolean77 = atmosphereConfig73.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig73.getshutdownHooks();
        atmosphereConfig61.setshutdownHooks(shutdownHookList78);
        atmosphereConfig50.setshutdownHooks(shutdownHookList78);
        atmosphereConfig47.shutdownHooks = shutdownHookList78;
        atmosphereConfig22.setshutdownHooks(shutdownHookList78);
        atmosphereConfig17.shutdownHooks = shutdownHookList78;
        atmosphereConfig15.shutdownHooks = shutdownHookList78;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework87 = atmosphereConfig15.getframework();
        atmosphereConfig15.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 35 + "'", int31 == 35);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(atmosphereFramework68);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNull(atmosphereFramework87);
    }

    @Test
    public void test12634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12634");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        int int16 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig12.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.startupHook(startupHook18);
        boolean boolean20 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        int int28 = atmosphereConfig24.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig24.supportSession = false;
        boolean boolean31 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        atmosphereConfig24.destroy();
        boolean boolean33 = atmosphereConfig24.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig24.setframework(atmosphereFramework34);
        java.lang.String str37 = atmosphereConfig24.getInitParameter("");
        boolean boolean38 = atmosphereConfig24.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig39.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig39.sessionTimeoutRemovalAllowed = true;
        boolean boolean49 = atmosphereConfig39.isSessionTimeoutRemovalAllowed();
        java.lang.String str51 = atmosphereConfig39.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig39.framework = atmosphereFramework52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean55 = atmosphereConfig54.isThrowExceptionOnCloned();
        boolean boolean56 = atmosphereConfig54.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.startupHook(startupHook57);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig54.getshutdownHooks();
        atmosphereConfig39.shutdownHooks = shutdownHookList59;
        atmosphereConfig24.setshutdownHooks(shutdownHookList59);
        atmosphereConfig23.setshutdownHooks(shutdownHookList59);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(shutdownHookList59);
    }

    @Test
    public void test12635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12635");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig4.startupHook(startupHook8);
        atmosphereConfig4.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig4.startUpHook;
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        boolean boolean15 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        java.lang.String str21 = atmosphereConfig16.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig16.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList22);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig4.initComplete();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList22);
    }

    @Test
    public void test12636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12636");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.shutdownHook(shutdownHook19);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        atmosphereConfig18.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.shutdownHook(shutdownHook29);
        org.slf4j.Logger logger31 = atmosphereConfig30.getlogger();
        boolean boolean32 = atmosphereConfig30.isSupportSession();
        boolean boolean33 = atmosphereConfig30.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig34.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39, startupHookArray38);
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39);
        atmosphereConfig30.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39);
        atmosphereConfig18.startUpHook = startupHookList39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig44.getshutdownHooks();
        atmosphereConfig18.setshutdownHooks(shutdownHookList46);
        atmosphereConfig0.shutdownHooks = shutdownHookList46;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.startupHook(startupHook49);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig51 = atmosphereConfig50.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(startupHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
    }

    @Test
    public void test12637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12637");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        boolean boolean10 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger13 = atmosphereConfig12.getlogger();
        boolean boolean14 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test12638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12638");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.destroy();
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig13.framework = atmosphereFramework18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig13.framework = atmosphereFramework20;
        boolean boolean24 = atmosphereConfig13.getInitParameter("hi!", true);
        atmosphereConfig13.supportSession = true;
        atmosphereConfig13.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.destroy();
        atmosphereConfig29.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig29.framework = atmosphereFramework34;
        java.lang.String str38 = atmosphereConfig29.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig29.shutdownHooks;
        atmosphereConfig13.setshutdownHooks(shutdownHookList39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig45.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig45.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig13.populate(atmosphereConfig45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig49);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig49.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
    }

    @Test
    public void test12639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12639");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig4.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig4.framework = atmosphereFramework17;
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean22 = atmosphereConfig21.isThrowExceptionOnCloned();
        boolean boolean23 = atmosphereConfig21.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig21.getstartUpHook();
        atmosphereConfig4.startUpHook = startupHookList24;
        boolean boolean26 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig4.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
    }

    @Test
    public void test12640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12640");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
    }

    @Test
    public void test12641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12641");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17, startupHookArray16);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig12.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig12);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory23 = atmosphereConfig12.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
    }

    @Test
    public void test12642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12642");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        boolean boolean21 = atmosphereConfig0.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean24 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig25.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList32, startupHookArray31);
        atmosphereConfig25.startUpHook = startupHookList32;
        org.slf4j.Logger logger35 = atmosphereConfig25.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig25.destroy();
        atmosphereConfig25.supportSession = true;
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        boolean boolean43 = atmosphereConfig41.throwExceptionOnCloned;
        atmosphereConfig41.destroy();
        atmosphereConfig41.initComplete();
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig41.framework();
        atmosphereConfig41.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig25.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig25.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig25.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig0.populate(atmosphereConfig25);
        int int60 = atmosphereConfig0.getInitParameter("hi!", 32);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(startupHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(logger35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 32 + "'", int60 == 32);
    }

    @Test
    public void test12643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12643");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        boolean boolean14 = atmosphereConfig9.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig9.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.getframework();
        boolean boolean18 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test12644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12644");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        java.lang.String str11 = atmosphereConfig6.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig6.getproperties();
        atmosphereConfig6.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig6.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig6.getproperties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test12645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12645");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.destroy();
        atmosphereConfig16.initComplete();
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig16.framework();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.populate(atmosphereConfig16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig16.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig28.throwExceptionOnCloned = true;
        boolean boolean32 = atmosphereConfig28.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig28.setshutdownHooks(shutdownHookList44);
        atmosphereConfig28.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig28.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig28.getproperties();
        atmosphereConfig16.properties = strMap50;
        org.slf4j.Logger logger52 = atmosphereConfig16.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig16.startUpHook;
        atmosphereConfig16.destroy();
        boolean boolean55 = atmosphereConfig16.isSupportSession();
        boolean boolean56 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(logger52);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test12646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12646");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig6.getproperties();
        boolean boolean8 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig6.framework = atmosphereFramework10;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.initComplete();
        java.lang.String str19 = atmosphereConfig12.getInitParameter("hi!", "");
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList22;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig6.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        boolean boolean27 = atmosphereConfig25.throwExceptionOnCloned;
        atmosphereConfig25.destroy();
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig25.framework = atmosphereFramework30;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        atmosphereConfig25.framework = atmosphereFramework32;
        boolean boolean36 = atmosphereConfig25.getInitParameter("hi!", true);
        atmosphereConfig25.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig25.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig25.startupHook(startupHook40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig25.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig6.populate(atmosphereConfig25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig48.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig50.setframework(atmosphereFramework51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig50.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig50.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.getshutdownHooks();
        boolean boolean60 = atmosphereConfig55.getInitParameter("", true);
        atmosphereConfig55.initComplete();
        atmosphereConfig55.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig55.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig55.shutdownHooks;
        atmosphereConfig50.setshutdownHooks(shutdownHookList66);
        atmosphereConfig43.setshutdownHooks(shutdownHookList66);
        atmosphereConfig43.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(shutdownHookList66);
    }

    @Test
    public void test12647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12647");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig10.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig10.framework = atmosphereFramework16;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        atmosphereConfig22.destroy();
        atmosphereConfig22.initComplete();
        java.lang.String str29 = atmosphereConfig22.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig36.shutdownHooks;
        atmosphereConfig22.shutdownHooks = shutdownHookList40;
        atmosphereConfig22.sessionTimeoutRemovalAllowed = false;
        boolean boolean44 = atmosphereConfig22.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig0.populate(atmosphereConfig22);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
    }

    @Test
    public void test12648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12648");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.framework = atmosphereFramework10;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        boolean boolean14 = atmosphereConfig0.supportSession;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test12649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12649");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig39.getshutdownHooks();
        atmosphereConfig34.setshutdownHooks(shutdownHookList41);
        atmosphereConfig4.shutdownHooks = shutdownHookList41;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        int int48 = atmosphereConfig44.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig44.supportSession = false;
        boolean boolean51 = atmosphereConfig44.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig52.getshutdownHooks();
        atmosphereConfig44.setshutdownHooks(shutdownHookList54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig56.properties();
        atmosphereConfig44.properties = strMap59;
        atmosphereConfig4.setproperties(strMap59);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig4.framework();
        int int65 = atmosphereConfig4.getInitParameter("hi!", 1);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
    }

    @Test
    public void test12650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12650");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig10.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig10.populate(atmosphereConfig16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig16.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig22.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27);
        atmosphereConfig22.sessionTimeoutRemovalAllowed = true;
        boolean boolean32 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        java.lang.String str34 = atmosphereConfig22.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig22.framework = atmosphereFramework35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean38 = atmosphereConfig37.isThrowExceptionOnCloned();
        boolean boolean39 = atmosphereConfig37.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.startupHook(startupHook40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig22.shutdownHooks = shutdownHookList42;
        int int46 = atmosphereConfig22.getInitParameter("", (int) (short) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig51.shutdownHook(shutdownHook52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig53.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig55.shutdownHook(shutdownHook58);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig59.shutdownHook(shutdownHook60);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig59.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig59.startupHook(startupHook63);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig64.startUpHook;
        atmosphereConfig53.setstartUpHook(startupHookList65);
        atmosphereConfig53.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig53.getstartUpHook();
        atmosphereConfig22.startUpHook = startupHookList68;
        atmosphereConfig16.setstartUpHook(startupHookList68);
        atmosphereConfig0.setstartUpHook(startupHookList68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertNotNull(startupHookList68);
    }

    @Test
    public void test12651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12651");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        java.lang.String str11 = atmosphereConfig4.getInitParameter("", "hi!");
        atmosphereConfig4.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig4.getshutdownHooks();
        int int16 = atmosphereConfig4.getInitParameter("hi!", 52);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
    }

    @Test
    public void test12652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12652");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test12653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12653");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig7.throwExceptionOnCloned = true;
        boolean boolean11 = atmosphereConfig7.isSupportSession();
        boolean boolean12 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        boolean boolean14 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig7.properties();
        atmosphereConfig0.setproperties(strMap18);
        boolean boolean22 = atmosphereConfig0.getInitParameter("hi!", false);
        boolean boolean23 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test12654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12654");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig20.setframework(atmosphereFramework21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.getproperties();
        atmosphereConfig9.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        int int35 = atmosphereConfig31.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig31.supportSession = false;
        java.lang.String str40 = atmosphereConfig31.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig31.setframework(atmosphereFramework41);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig31.getproperties();
        atmosphereConfig0.setproperties(strMap44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        atmosphereConfig0.framework = atmosphereFramework46;
        boolean boolean48 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test12655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12655");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig14.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        int int22 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig18.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig18.startUpHook = startupHookList25;
        atmosphereConfig14.startUpHook = startupHookList25;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig14.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig14.shutdownHook(shutdownHook30);
        boolean boolean32 = atmosphereConfig31.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig31.getframework();
        org.slf4j.Logger logger34 = atmosphereConfig31.getlogger();
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig31.framework = atmosphereFramework37;
        atmosphereConfig31.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig0.populate(atmosphereConfig31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = null;
        atmosphereConfig0.shutdownHooks = shutdownHookList42;
        boolean boolean44 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(logger34);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test12656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12656");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig14.getlogger();
        boolean boolean16 = atmosphereConfig14.isSupportSession();
        boolean boolean17 = atmosphereConfig14.isThrowExceptionOnCloned();
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig14.properties();
        atmosphereConfig14.initComplete();
        boolean boolean21 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig14);
        boolean boolean23 = atmosphereConfig22.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig22.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig22.shutdownHooks;
        atmosphereConfig22.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
    }

    @Test
    public void test12657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12657");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = null;
        atmosphereConfig0.setproperties(strMap20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.properties;
        boolean boolean23 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test12658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12658");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig14.setframework(atmosphereFramework15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.properties();
        org.slf4j.Logger logger22 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig23.throwExceptionOnCloned = true;
        boolean boolean27 = atmosphereConfig23.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig23.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.startupHook(startupHook34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig35.setframework(atmosphereFramework36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig35.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig23.setshutdownHooks(shutdownHookList39);
        atmosphereConfig23.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig43.getAtmosphereHandlerConfig();
        boolean boolean45 = atmosphereConfig43.throwExceptionOnCloned;
        atmosphereConfig43.destroy();
        atmosphereConfig43.initComplete();
        java.lang.String str50 = atmosphereConfig43.getInitParameter("hi!", "");
        boolean boolean51 = atmosphereConfig43.isSessionTimeoutRemovalAllowed();
        java.lang.String str53 = atmosphereConfig43.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray54 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55, shutdownHookArray54);
        atmosphereConfig43.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        atmosphereConfig23.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList55);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig23.shutdownHook(shutdownHook59);
        boolean boolean61 = atmosphereConfig60.sessionTimeoutRemovalAllowed;
        boolean boolean62 = atmosphereConfig60.isSessionTimeoutRemovalAllowed();
        atmosphereConfig60.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig60.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList64;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(shutdownHookArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(shutdownHookList64);
    }

    @Test
    public void test12659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12659");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.getproperties();
        atmosphereConfig16.setproperties(strMap30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig16.framework;
        boolean boolean33 = atmosphereConfig16.supportSession;
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig16);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig0.properties;
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig44.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig44.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig44.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig44);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig0.startupHook(startupHook51);
        boolean boolean53 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test12660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12660");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(startupHookList17);
    }

    @Test
    public void test12661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12661");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.startupHook(startupHook15);
        org.slf4j.Logger logger17 = atmosphereConfig14.getlogger();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        boolean boolean22 = atmosphereConfig14.supportSession;
        boolean boolean23 = atmosphereConfig14.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig14.initComplete();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig14.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig4.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig44.setframework(atmosphereFramework45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig44.getproperties();
        atmosphereConfig33.setproperties(strMap47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig33.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig33.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = null;
        atmosphereConfig33.shutdownHooks = shutdownHookList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig32.populate(atmosphereConfig33);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig33.getproperties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test12662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12662");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig6.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig6.shutdownHook(shutdownHook14);
        atmosphereConfig6.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig6.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig6.setframework(atmosphereFramework18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig24.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig24.startupHook(startupHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.lang.String str33 = atmosphereConfig30.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.shutdownHook(shutdownHook39);
        int int43 = atmosphereConfig40.getInitParameter("", (int) (byte) -1);
        atmosphereConfig40.throwExceptionOnCloned = true;
        atmosphereConfig40.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig40.getframework();
        boolean boolean48 = atmosphereConfig40.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig30.shutdownHooks = shutdownHookList49;
        atmosphereConfig6.setshutdownHooks(shutdownHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(shutdownHookList49);
    }

    @Test
    public void test12663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12663");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean11 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig0.setframework(atmosphereFramework12);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean18 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test12664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12664");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12);
        boolean boolean15 = atmosphereConfig0.supportSession;
        boolean boolean16 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        boolean boolean19 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test12665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12665");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig10.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig10.framework = atmosphereFramework16;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig21.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.shutdownHook(shutdownHook29);
        atmosphereConfig28.setThrowExceptionOnCloned(false);
        atmosphereConfig28.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.shutdownHook(shutdownHook39);
        org.slf4j.Logger logger41 = atmosphereConfig40.getlogger();
        boolean boolean42 = atmosphereConfig40.isSupportSession();
        boolean boolean43 = atmosphereConfig40.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig44.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49, startupHookArray48);
        atmosphereConfig44.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49);
        atmosphereConfig40.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49);
        atmosphereConfig28.startUpHook = startupHookList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig54.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig54.shutdownHook(shutdownHook57);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig58.startupHook(startupHook59);
        org.slf4j.Logger logger61 = atmosphereConfig58.getlogger();
        atmosphereConfig58.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig64.getAtmosphereHandlerConfig();
        boolean boolean66 = atmosphereConfig64.throwExceptionOnCloned;
        atmosphereConfig64.destroy();
        atmosphereConfig64.initComplete();
        java.lang.String str71 = atmosphereConfig64.getInitParameter("hi!", "");
        atmosphereConfig64.throwExceptionOnCloned = false;
        boolean boolean74 = atmosphereConfig64.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig64.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig76.getAtmosphereHandlerConfig();
        int int80 = atmosphereConfig76.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = atmosphereConfig76.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray82 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList83 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList83, startupHookArray82);
        atmosphereConfig76.startUpHook = startupHookList83;
        org.slf4j.Logger logger86 = atmosphereConfig76.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList87 = atmosphereConfig76.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook88 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig76.startupHook(startupHook88);
        atmosphereConfig89.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str93 = atmosphereConfig89.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList94 = atmosphereConfig89.startUpHook;
        atmosphereConfig64.startUpHook = startupHookList94;
        atmosphereConfig58.startUpHook = startupHookList94;
        atmosphereConfig28.setstartUpHook(startupHookList94);
        atmosphereConfig21.setstartUpHook(startupHookList94);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(logger41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(startupHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(logger61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNull(atmosphereFramework81);
        org.junit.Assert.assertNotNull(startupHookArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(logger86);
        org.junit.Assert.assertNotNull(shutdownHookList87);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(startupHookList94);
    }

    @Test
    public void test12666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12666");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig1.framework();
        boolean boolean3 = atmosphereConfig1.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig1.framework = atmosphereFramework4;
        atmosphereConfig1.setSupportSession(true);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test12667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12667");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        boolean boolean7 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean8 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test12668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12668");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        int int11 = atmosphereConfig0.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        atmosphereConfig13.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig16.getframework();
        atmosphereConfig16.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig16.shutdownHooks;
        atmosphereConfig13.setshutdownHooks(shutdownHookList24);
        atmosphereConfig13.setSupportSession(false);
        boolean boolean28 = atmosphereConfig13.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test12669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12669");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig4.startupHook(startupHook8);
        atmosphereConfig4.initComplete();
        boolean boolean11 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig4.startupHook(startupHook12);
        boolean boolean14 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig13.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig16.framework = atmosphereFramework18;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig16.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        boolean boolean23 = atmosphereConfig21.throwExceptionOnCloned;
        atmosphereConfig21.destroy();
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig21.shutdownHook(shutdownHook27);
        atmosphereConfig21.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig21.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig21.shutdownHooks;
        atmosphereConfig16.shutdownHooks = shutdownHookList31;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig16.properties;
        atmosphereConfig13.setproperties(strMap34);
        boolean boolean36 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test12670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12670");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig10.throwExceptionOnCloned = true;
        boolean boolean14 = atmosphereConfig10.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        atmosphereConfig0.supportSession = true;
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.getproperties();
        boolean boolean22 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.startupHook(startupHook25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
    }

    @Test
    public void test12671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12671");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig3.getAtmosphereHandlerConfig();
        boolean boolean5 = atmosphereConfig3.throwExceptionOnCloned;
        atmosphereConfig3.destroy();
        atmosphereConfig3.initComplete();
        java.lang.String str10 = atmosphereConfig3.getInitParameter("hi!", "");
        boolean boolean11 = atmosphereConfig3.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.initComplete();
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig12.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig12.atmosphereHandlerConfig;
        atmosphereConfig3.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.destroy();
        atmosphereConfig23.initComplete();
        java.lang.String str30 = atmosphereConfig23.getInitParameter("hi!", "");
        boolean boolean31 = atmosphereConfig23.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig32.getshutdownHooks();
        atmosphereConfig32.setThrowExceptionOnCloned(false);
        java.lang.String str38 = atmosphereConfig32.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.properties;
        atmosphereConfig23.setproperties(strMap39);
        atmosphereConfig0.setproperties(strMap39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        atmosphereConfig0.framework = atmosphereFramework42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig44.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig44.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig48.startupHook(startupHook49);
        boolean boolean51 = atmosphereConfig48.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        int int56 = atmosphereConfig52.getInitParameter("hi!", (int) (short) 0);
        boolean boolean57 = atmosphereConfig52.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig52.shutdownHook(shutdownHook58);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig60.getAtmosphereHandlerConfig();
        int int64 = atmosphereConfig60.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig60.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig60.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig60.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig60.atmosphereHandlerConfig;
        atmosphereConfig52.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        atmosphereConfig48.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        atmosphereConfig48.setThrowExceptionOnCloned(false);
        boolean boolean73 = atmosphereConfig48.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = atmosphereConfig48.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList74);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig0.shutdownHook(shutdownHook76);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig78.getAtmosphereHandlerConfig();
        boolean boolean80 = atmosphereConfig78.throwExceptionOnCloned;
        atmosphereConfig78.setThrowExceptionOnCloned(false);
        boolean boolean83 = atmosphereConfig78.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig78.getproperties();
        atmosphereConfig0.properties = strMap84;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(shutdownHookList74);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test12672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12672");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.startUpHook;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean10 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test12673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12673");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
    }

    @Test
    public void test12674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12674");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig12.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList17);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.startupHook(startupHook22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig0.properties();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(shutdownHookList27);
    }

    @Test
    public void test12675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12675");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        boolean boolean13 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test12676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12676");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        int int11 = atmosphereConfig0.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        java.lang.String str16 = atmosphereConfig13.getInitParameter("", "hi!");
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig13.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig13.framework = atmosphereFramework20;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test12677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12677");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        boolean boolean20 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig13.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties();
        atmosphereConfig13.properties = strMap28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig40.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig40.startUpHook;
        atmosphereConfig30.setstartUpHook(startupHookList45);
        atmosphereConfig13.setstartUpHook(startupHookList45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig6.populate(atmosphereConfig13);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig48.properties;
        boolean boolean50 = atmosphereConfig48.isThrowExceptionOnCloned();
        boolean boolean51 = atmosphereConfig48.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig48.setframework(atmosphereFramework52);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster54 = atmosphereConfig48.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test12678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12678");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        boolean boolean15 = atmosphereConfig10.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.getshutdownHooks();
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        java.lang.String str22 = atmosphereConfig16.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.properties;
        atmosphereConfig10.setproperties(strMap23);
        atmosphereConfig9.properties = strMap23;
        atmosphereConfig9.setSupportSession(false);
        atmosphereConfig9.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig9.shutdownHooks = shutdownHookList32;
        atmosphereConfig0.setshutdownHooks(shutdownHookList32);
        boolean boolean35 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        int int40 = atmosphereConfig36.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig36.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList43, startupHookArray42);
        atmosphereConfig36.startUpHook = startupHookList43;
        org.slf4j.Logger logger46 = atmosphereConfig36.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig36.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig36.startupHook(startupHook48);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig51.throwExceptionOnCloned;
        atmosphereConfig51.destroy();
        atmosphereConfig51.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig51.shutdownHook(shutdownHook57);
        atmosphereConfig51.supportSession = true;
        atmosphereConfig51.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig51.getproperties();
        atmosphereConfig49.setproperties(strMap63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig0.populate(atmosphereConfig49);
        boolean boolean66 = atmosphereConfig65.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(startupHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(logger46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test12679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12679");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.shutdownHooks;
        boolean boolean11 = atmosphereConfig6.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig22.setframework(atmosphereFramework23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig22.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig22.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList27);
        atmosphereConfig6.startUpHook = startupHookList27;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        int int36 = atmosphereConfig32.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig32.supportSession = false;
        boolean boolean39 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig46.setframework(atmosphereFramework47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig46.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig46.getshutdownHooks();
        atmosphereConfig32.setshutdownHooks(shutdownHookList50);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig32.shutdownHooks;
        atmosphereConfig6.setshutdownHooks(shutdownHookList52);
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig6.startupHook(startupHook56);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig6.shutdownHook(shutdownHook58);
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
    }

    @Test
    public void test12680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12680");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test12681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12681");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.initComplete();
        java.lang.String str18 = atmosphereConfig11.getInitParameter("hi!", "");
        boolean boolean19 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean22 = atmosphereConfig11.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig23.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.getproperties();
        atmosphereConfig11.setproperties(strMap26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig11.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig11.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList29;
        boolean boolean31 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(startupHookList33);
    }

    @Test
    public void test12682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12682");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.destroy();
        atmosphereConfig16.initComplete();
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig16.framework();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.populate(atmosphereConfig16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.supportSession = false;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration33 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(startupHookList30);
    }

    @Test
    public void test12683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12683");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig12.startupHook(startupHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig6.setstartUpHook(startupHookList18);
        atmosphereConfig6.destroy();
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        java.lang.String str25 = atmosphereConfig6.getInitParameter("", "");
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test12684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12684");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.shutdownHook(shutdownHook10);
        atmosphereConfig11.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig11.startupHook(startupHook13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig14.properties;
        atmosphereConfig4.properties = strMap15;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap17 = atmosphereConfig4.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test12685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12685");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig7.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList12, startupHookArray11);
        atmosphereConfig7.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig7.framework = atmosphereFramework15;
        atmosphereConfig7.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig7.properties();
        atmosphereConfig0.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        atmosphereConfig24.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.getshutdownHooks();
        boolean boolean32 = atmosphereConfig27.getInitParameter("", true);
        boolean boolean33 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig34.throwExceptionOnCloned = true;
        boolean boolean38 = atmosphereConfig34.isSupportSession();
        boolean boolean39 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        boolean boolean40 = atmosphereConfig34.sessionTimeoutRemovalAllowed;
        boolean boolean41 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig34.shutdownHooks;
        atmosphereConfig34.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig34.properties();
        atmosphereConfig27.setproperties(strMap45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig47.setframework(atmosphereFramework48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig47.properties;
        atmosphereConfig27.setproperties(strMap50);
        atmosphereConfig24.setproperties(strMap50);
        atmosphereConfig0.setproperties(strMap50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig0.framework = atmosphereFramework54;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig0.startupHook(startupHook56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        boolean boolean60 = atmosphereConfig58.throwExceptionOnCloned;
        atmosphereConfig58.destroy();
        atmosphereConfig58.initComplete();
        java.lang.String str65 = atmosphereConfig58.getInitParameter("hi!", "");
        boolean boolean66 = atmosphereConfig58.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig67.getshutdownHooks();
        atmosphereConfig67.setThrowExceptionOnCloned(false);
        java.lang.String str73 = atmosphereConfig67.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig67.properties;
        atmosphereConfig58.setproperties(strMap74);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = atmosphereConfig58.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        atmosphereConfig58.setframework(atmosphereFramework77);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework79 = atmosphereConfig58.framework();
        org.slf4j.Logger logger80 = atmosphereConfig58.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig58.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList81;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(atmosphereFramework76);
        org.junit.Assert.assertNull(atmosphereFramework79);
        org.junit.Assert.assertNotNull(logger80);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
    }

    @Test
    public void test12686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12686");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        boolean boolean4 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties;
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test12687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12687");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig10.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.getproperties();
        atmosphereConfig0.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.isSupportSession();
        atmosphereConfig27.throwExceptionOnCloned = false;
        atmosphereConfig27.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig27.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList34;
        boolean boolean36 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig0.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster38 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
    }

    @Test
    public void test12688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12688");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.destroy();
        atmosphereConfig16.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig16.framework = atmosphereFramework21;
        java.lang.String str25 = atmosphereConfig16.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig16.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig32.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig32);
        boolean boolean37 = atmosphereConfig36.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test12689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12689");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.shutdownHook(shutdownHook16);
        atmosphereConfig15.setThrowExceptionOnCloned(false);
        atmosphereConfig15.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.isSupportSession();
        boolean boolean30 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig31.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig27.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig15.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig15.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig45.setshutdownHooks(shutdownHookList52);
        atmosphereConfig15.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        int int59 = atmosphereConfig55.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig55.supportSession = false;
        boolean boolean62 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig55.setshutdownHooks(shutdownHookList65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.properties();
        atmosphereConfig55.properties = strMap70;
        atmosphereConfig15.setproperties(strMap70);
        atmosphereConfig8.properties = strMap70;
        boolean boolean76 = atmosphereConfig8.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig4.populate(atmosphereConfig8);
        org.slf4j.Logger logger79 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        atmosphereConfig8.framework = atmosphereFramework80;
        java.lang.String str84 = atmosphereConfig8.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList85 = atmosphereConfig8.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(logger79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList85);
    }

    @Test
    public void test12690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12690");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig0.properties = strMap11;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig17.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22);
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        boolean boolean27 = atmosphereConfig17.isSessionTimeoutRemovalAllowed();
        java.lang.String str29 = atmosphereConfig17.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig17.framework = atmosphereFramework30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean33 = atmosphereConfig32.isThrowExceptionOnCloned();
        boolean boolean34 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig32.startupHook(startupHook35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig32.getshutdownHooks();
        atmosphereConfig17.shutdownHooks = shutdownHookList37;
        atmosphereConfig0.shutdownHooks = shutdownHookList37;
        boolean boolean40 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test12691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12691");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        boolean boolean4 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig14.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig14.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig21.throwExceptionOnCloned = true;
        boolean boolean25 = atmosphereConfig21.isSupportSession();
        boolean boolean26 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        boolean boolean27 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig32.atmosphereHandlerConfig;
        boolean boolean36 = atmosphereConfig32.supportSession;
        boolean boolean37 = atmosphereConfig32.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig32.properties;
        atmosphereConfig21.setproperties(strMap38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig21.startUpHook;
        boolean boolean41 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig42.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray46 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList47, startupHookArray46);
        atmosphereConfig42.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig55.shutdownHook(shutdownHook58);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig59.startupHook(startupHook60);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig61.setframework(atmosphereFramework62);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig61.getproperties();
        atmosphereConfig50.setproperties(strMap64);
        atmosphereConfig42.setproperties(strMap64);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig42.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig68.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig68.startUpHook;
        atmosphereConfig42.startUpHook = startupHookList70;
        atmosphereConfig21.setstartUpHook(startupHookList70);
        atmosphereConfig14.startUpHook = startupHookList70;
        atmosphereConfig0.startUpHook = startupHookList70;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig75.getAtmosphereHandlerConfig();
        boolean boolean77 = atmosphereConfig75.throwExceptionOnCloned;
        atmosphereConfig75.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = atmosphereConfig75.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook81 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig75.startupHook(startupHook81);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig75.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = atmosphereConfig75.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList84;
        boolean boolean86 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList87 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList87);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(startupHookArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(shutdownHookList80);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertNotNull(shutdownHookList84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test12692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12692");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        boolean boolean25 = atmosphereConfig20.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        int int32 = atmosphereConfig28.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig28.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig28.properties;
        atmosphereConfig27.setproperties(strMap34);
        atmosphereConfig0.setproperties(strMap34);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig0.getproperties();
        java.lang.String str39 = atmosphereConfig0.getInitParameter("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap40 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test12693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12693");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        atmosphereConfig6.shutdownHooks = shutdownHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig6.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.getshutdownHooks();
        boolean boolean21 = atmosphereConfig16.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        java.lang.String str28 = atmosphereConfig22.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.properties;
        atmosphereConfig16.setproperties(strMap29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.properties;
        atmosphereConfig6.properties = strMap31;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig6.framework();
        java.lang.String str35 = atmosphereConfig6.getInitParameter("");
        boolean boolean36 = atmosphereConfig6.isSupportSession();
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean39 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig38.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig38.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList41;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(startupHookList41);
    }

    @Test
    public void test12694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12694");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        boolean boolean14 = atmosphereConfig9.getInitParameter("", true);
        atmosphereConfig9.initComplete();
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig29.setframework(atmosphereFramework30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.getproperties();
        atmosphereConfig18.setproperties(strMap32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig6.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        int int46 = atmosphereConfig42.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig42.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49, startupHookArray48);
        atmosphereConfig42.startUpHook = startupHookList49;
        org.slf4j.Logger logger52 = atmosphereConfig42.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig42.destroy();
        atmosphereConfig42.supportSession = true;
        atmosphereConfig42.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig42.shutdownHooks;
        boolean boolean59 = atmosphereConfig42.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig42.framework();
        boolean boolean61 = atmosphereConfig42.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig42.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList62;
        org.slf4j.Logger logger64 = atmosphereConfig6.getlogger();
        java.lang.Class<?> wildcardClass65 = atmosphereConfig6.getClass();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(startupHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(logger52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(logger64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test12695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12695");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.shutdownHook(shutdownHook16);
        atmosphereConfig15.setThrowExceptionOnCloned(false);
        atmosphereConfig15.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.isSupportSession();
        boolean boolean30 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig31.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig27.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig15.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig15.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig45.setshutdownHooks(shutdownHookList52);
        atmosphereConfig15.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        int int59 = atmosphereConfig55.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig55.supportSession = false;
        boolean boolean62 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig55.setshutdownHooks(shutdownHookList65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.properties();
        atmosphereConfig55.properties = strMap70;
        atmosphereConfig15.setproperties(strMap70);
        atmosphereConfig8.properties = strMap70;
        boolean boolean76 = atmosphereConfig8.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig4.populate(atmosphereConfig8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig4.shutdownHook(shutdownHook80);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList82 = atmosphereConfig4.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = atmosphereConfig4.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(startupHookList82);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test12696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12696");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.shutdownHook(shutdownHook16);
        atmosphereConfig15.setThrowExceptionOnCloned(false);
        atmosphereConfig15.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        boolean boolean29 = atmosphereConfig27.isSupportSession();
        boolean boolean30 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig31.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig27.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig15.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig15.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig45.setshutdownHooks(shutdownHookList52);
        atmosphereConfig15.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        int int59 = atmosphereConfig55.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig55.supportSession = false;
        boolean boolean62 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig55.setshutdownHooks(shutdownHookList65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig67.properties();
        atmosphereConfig55.properties = strMap70;
        atmosphereConfig15.setproperties(strMap70);
        atmosphereConfig8.properties = strMap70;
        boolean boolean76 = atmosphereConfig8.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig8.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig4.populate(atmosphereConfig8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig4.shutdownHook(shutdownHook80);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList82 = atmosphereConfig4.startUpHook;
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = atmosphereConfig4.getproperties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(startupHookList82);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test12697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12697");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.shutdownHook(shutdownHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList20);
        boolean boolean22 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean23 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig29.getstartUpHook();
        atmosphereConfig29.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig29.startupHook(startupHook34);
        atmosphereConfig35.sessionTimeoutRemovalAllowed = true;
        java.lang.String str40 = atmosphereConfig35.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        int int45 = atmosphereConfig41.getInitParameter("hi!", (int) (short) 0);
        boolean boolean46 = atmosphereConfig41.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig49.setThrowExceptionOnCloned(false);
        java.lang.String str55 = atmosphereConfig49.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.properties;
        atmosphereConfig49.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = atmosphereConfig49.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig49.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig48.populate(atmosphereConfig49);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig49.getproperties();
        atmosphereConfig35.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig65.shutdownHook(shutdownHook68);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig69.shutdownHook(shutdownHook70);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig69.getstartUpHook();
        atmosphereConfig69.initComplete();
        int int76 = atmosphereConfig69.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig0.populate(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(atmosphereFramework59);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
    }

    @Test
    public void test12698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12698");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test12699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12699");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.shutdownHook(shutdownHook33);
        boolean boolean37 = atmosphereConfig34.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig38.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        int int46 = atmosphereConfig42.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig42.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49, startupHookArray48);
        atmosphereConfig42.startUpHook = startupHookList49;
        atmosphereConfig38.startUpHook = startupHookList49;
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig34.shutdownHook(shutdownHook54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig34.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig34.shutdownHook(shutdownHook57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(startupHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
    }

    @Test
    public void test12700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12700");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean38 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig0.getproperties();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(startupHookList42);
    }

    @Test
    public void test12701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12701");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.properties;
        boolean boolean21 = atmosphereConfig0.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.atmosphereHandlerConfig;
        org.slf4j.Logger logger24 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(logger24);
    }

    @Test
    public void test12702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12702");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig12.framework = atmosphereFramework14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig12.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig12.setframework(atmosphereFramework17);
        boolean boolean19 = atmosphereConfig12.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        boolean boolean22 = atmosphereConfig21.isThrowExceptionOnCloned();
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig12.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.populate(atmosphereConfig12);
        atmosphereConfig26.setSupportSession(true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig29 = atmosphereConfig26.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
    }

    @Test
    public void test12703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12703");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.initComplete();
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test12704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12704");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig6.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig6.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig6.getstartUpHook();
        atmosphereConfig6.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(startupHookList11);
    }

    @Test
    public void test12705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12705");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        boolean boolean14 = atmosphereConfig11.getInitParameter("", false);
        java.lang.String str16 = atmosphereConfig11.getInitParameter("");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean18 = atmosphereConfig11.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig19.getshutdownHooks();
        atmosphereConfig19.setThrowExceptionOnCloned(false);
        java.lang.String str25 = atmosphereConfig19.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig19.properties;
        atmosphereConfig19.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig19.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        atmosphereConfig36.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig36.properties;
        boolean boolean42 = atmosphereConfig36.throwExceptionOnCloned;
        boolean boolean45 = atmosphereConfig36.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig36.shutdownHooks;
        atmosphereConfig36.sessionTimeoutRemovalAllowed = true;
        java.lang.String str51 = atmosphereConfig36.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig36.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        int int57 = atmosphereConfig53.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig53.supportSession = false;
        boolean boolean60 = atmosphereConfig53.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig61.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig61.getshutdownHooks();
        atmosphereConfig53.setshutdownHooks(shutdownHookList63);
        atmosphereConfig36.setshutdownHooks(shutdownHookList63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig66.getAtmosphereHandlerConfig();
        int int70 = atmosphereConfig66.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger71 = atmosphereConfig66.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig66.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig73.getAtmosphereHandlerConfig();
        boolean boolean75 = atmosphereConfig73.throwExceptionOnCloned;
        atmosphereConfig73.destroy();
        atmosphereConfig73.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = null;
        atmosphereConfig73.framework = atmosphereFramework78;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        atmosphereConfig73.framework = atmosphereFramework80;
        boolean boolean84 = atmosphereConfig73.getInitParameter("hi!", true);
        atmosphereConfig73.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList87 = atmosphereConfig73.shutdownHooks;
        atmosphereConfig66.setshutdownHooks(shutdownHookList87);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray89 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList90 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList90, shutdownHookArray89);
        atmosphereConfig66.shutdownHooks = shutdownHookList90;
        atmosphereConfig36.shutdownHooks = shutdownHookList90;
        atmosphereConfig19.shutdownHooks = shutdownHookList90;
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList90);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(logger71);
        org.junit.Assert.assertNotNull(shutdownHookList72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(shutdownHookList87);
        org.junit.Assert.assertNotNull(shutdownHookArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test12706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12706");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig21.atmosphereHandlerConfig;
        boolean boolean25 = atmosphereConfig21.supportSession;
        boolean boolean26 = atmosphereConfig21.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig21.properties;
        atmosphereConfig21.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig16.populate(atmosphereConfig21);
        boolean boolean31 = atmosphereConfig21.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig21.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList32);
    }

    @Test
    public void test12707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12707");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        boolean boolean15 = atmosphereConfig6.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig6.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig6.getAtmosphereHandlerConfig();
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
    }

    @Test
    public void test12708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12708");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        boolean boolean9 = atmosphereConfig4.supportSession;
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig4.framework = atmosphereFramework15;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster17 = atmosphereConfig4.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
    }

    @Test
    public void test12709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12709");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.lang.String str12 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig0.startUpHook;
        org.slf4j.Logger logger17 = atmosphereConfig0.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.shutdownHook(shutdownHook19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
    }

    @Test
    public void test12710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12710");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig8.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.properties();
        atmosphereConfig0.setproperties(strMap15);
        atmosphereConfig0.supportSession = false;
        int int21 = atmosphereConfig0.getInitParameter("hi!", 97);
        int int24 = atmosphereConfig0.getInitParameter("hi!", 52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
    }

    @Test
    public void test12711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12711");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.destroy();
        atmosphereConfig16.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig16.framework = atmosphereFramework21;
        java.lang.String str25 = atmosphereConfig16.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig16.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig32.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig0.populate(atmosphereConfig32);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        atmosphereConfig32.properties = strMap37;
        atmosphereConfig32.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig32.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig32.framework;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNull(atmosphereFramework42);
    }

    @Test
    public void test12712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12712");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.shutdownHooks;
        boolean boolean11 = atmosphereConfig6.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig22.setframework(atmosphereFramework23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig22.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig22.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList27);
        atmosphereConfig6.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig6.shutdownHook(shutdownHook30);
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.startupHook(startupHook34);
        atmosphereConfig35.destroy();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
    }

    @Test
    public void test12713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12713");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.shutdownHooks;
        boolean boolean17 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean18 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        atmosphereConfig27.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig34.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNull(atmosphereFramework38);
    }

    @Test
    public void test12714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12714");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str23 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
    }

    @Test
    public void test12715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12715");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        boolean boolean10 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.slf4j.Logger logger20 = atmosphereConfig17.getlogger();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig17.startUpHook;
        atmosphereConfig5.startUpHook = startupHookList24;
        atmosphereConfig5.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig5.framework = atmosphereFramework27;
        java.lang.String str30 = atmosphereConfig5.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig5.getproperties();
        atmosphereConfig5.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test12716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12716");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig10.throwExceptionOnCloned = true;
        boolean boolean14 = atmosphereConfig10.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        atmosphereConfig0.supportSession = true;
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig0.getproperties();
        boolean boolean22 = atmosphereConfig0.throwExceptionOnCloned;
        org.slf4j.Logger logger23 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30, startupHookArray29);
        atmosphereConfig25.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig25.framework = atmosphereFramework33;
        atmosphereConfig25.destroy();
        java.lang.String str38 = atmosphereConfig25.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        boolean boolean41 = atmosphereConfig39.throwExceptionOnCloned;
        atmosphereConfig39.destroy();
        atmosphereConfig39.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig39.framework = atmosphereFramework44;
        int int48 = atmosphereConfig39.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig39.getstartUpHook();
        atmosphereConfig39.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig39.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList52;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList54;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 35 + "'", int48 == 35);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(shutdownHookList54);
    }

    @Test
    public void test12717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12717");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean7 = atmosphereConfig5.throwExceptionOnCloned;
        atmosphereConfig5.destroy();
        atmosphereConfig5.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig5.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.getAtmosphereHandlerConfig();
        int int19 = atmosphereConfig15.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig15.supportSession = false;
        atmosphereConfig15.setSupportSession(false);
        java.lang.String str25 = atmosphereConfig15.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig14.populate(atmosphereConfig15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.populate(atmosphereConfig26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.startupHook(startupHook29);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
    }

    @Test
    public void test12718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12718");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        int int9 = atmosphereConfig4.getInitParameter("hi!", (int) (byte) -1);
        boolean boolean10 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        atmosphereConfig4.setSupportSession(false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test12719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12719");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        boolean boolean10 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig15.getAtmosphereHandlerConfig();
        boolean boolean17 = atmosphereConfig15.throwExceptionOnCloned;
        atmosphereConfig15.destroy();
        atmosphereConfig15.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig15.framework = atmosphereFramework20;
        int int24 = atmosphereConfig15.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig15.framework;
        boolean boolean26 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        atmosphereConfig15.destroy();
        atmosphereConfig15.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig15);
        boolean boolean31 = atmosphereConfig30.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 35 + "'", int24 == 35);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test12720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12720");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig4.throwExceptionOnCloned;
        atmosphereConfig4.destroy();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        int int18 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig14.supportSession = false;
        atmosphereConfig14.setSupportSession(false);
        java.lang.String str24 = atmosphereConfig14.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig13.populate(atmosphereConfig14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        boolean boolean28 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.shutdownHook(shutdownHook36);
        atmosphereConfig35.setThrowExceptionOnCloned(false);
        atmosphereConfig35.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig41.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig41.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig45.shutdownHook(shutdownHook46);
        org.slf4j.Logger logger48 = atmosphereConfig47.getlogger();
        boolean boolean49 = atmosphereConfig47.isSupportSession();
        boolean boolean50 = atmosphereConfig47.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray55 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList56, startupHookArray55);
        atmosphereConfig51.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList56);
        atmosphereConfig47.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList56);
        atmosphereConfig35.startUpHook = startupHookList56;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig61.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig61.getshutdownHooks();
        atmosphereConfig35.setshutdownHooks(shutdownHookList63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig65.getshutdownHooks();
        atmosphereConfig65.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig70.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig70.getshutdownHooks();
        atmosphereConfig65.setshutdownHooks(shutdownHookList72);
        atmosphereConfig35.shutdownHooks = shutdownHookList72;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig75.getAtmosphereHandlerConfig();
        int int79 = atmosphereConfig75.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig75.supportSession = false;
        boolean boolean82 = atmosphereConfig75.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig83.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList85 = atmosphereConfig83.getshutdownHooks();
        atmosphereConfig75.setshutdownHooks(shutdownHookList85);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig87.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = atmosphereConfig87.properties();
        atmosphereConfig75.properties = strMap90;
        atmosphereConfig35.setproperties(strMap90);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework93 = atmosphereConfig35.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList94 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList94;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(logger48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(startupHookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertNotNull(shutdownHookList72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
        org.junit.Assert.assertNotNull(shutdownHookList85);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(atmosphereFramework93);
        org.junit.Assert.assertNotNull(shutdownHookList94);
    }

    @Test
    public void test12721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12721");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        boolean boolean16 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        int int23 = atmosphereConfig19.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig19.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig19.startupHook(startupHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig0.framework;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig0.framework;
        java.lang.String str33 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(atmosphereFramework34);
    }

    @Test
    public void test12722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12722");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        java.lang.String str11 = atmosphereConfig6.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig6.getframework();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig6.shutdownHook(shutdownHook15);
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(true);
        boolean boolean19 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test12723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12723");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean2 = atmosphereConfig0.isSupportSession();
        boolean boolean3 = atmosphereConfig0.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(startupHookList4);
    }

    @Test
    public void test12724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12724");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig0.startupHook(startupHook4);
        boolean boolean6 = atmosphereConfig5.isThrowExceptionOnCloned();
        int int9 = atmosphereConfig5.getInitParameter("", (int) (byte) 10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        atmosphereConfig14.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.shutdownHook(shutdownHook25);
        org.slf4j.Logger logger27 = atmosphereConfig26.getlogger();
        boolean boolean28 = atmosphereConfig26.isSupportSession();
        boolean boolean29 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35, startupHookArray34);
        atmosphereConfig30.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35);
        atmosphereConfig26.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35);
        atmosphereConfig14.startUpHook = startupHookList35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45, startupHookArray44);
        atmosphereConfig40.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig40.framework = atmosphereFramework48;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig14.startUpHook = startupHookList50;
        atmosphereConfig5.setstartUpHook(startupHookList50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig5.framework();
        atmosphereConfig5.setSessionTimeoutRemovalAllowed(false);
        boolean boolean56 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig5.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig5.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(startupHookList58);
    }

    @Test
    public void test12725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12725");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig10.supportSession = false;
        atmosphereConfig10.setSupportSession(false);
        java.lang.String str20 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.populate(atmosphereConfig10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig21.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig30.setframework(atmosphereFramework31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig30.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig30.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig30.framework();
        boolean boolean38 = atmosphereConfig30.isSessionTimeoutRemovalAllowed();
        atmosphereConfig30.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig21.populate(atmosphereConfig30);
        boolean boolean42 = atmosphereConfig41.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test12726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12726");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        boolean boolean4 = atmosphereConfig0.supportSession;
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig7.throwExceptionOnCloned = true;
        boolean boolean11 = atmosphereConfig7.isSupportSession();
        boolean boolean12 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        boolean boolean14 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList23, startupHookArray22);
        atmosphereConfig18.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.startupHook(startupHook36);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig37.setframework(atmosphereFramework38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig37.getproperties();
        atmosphereConfig26.setproperties(strMap40);
        atmosphereConfig18.setproperties(strMap40);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig44.startUpHook;
        atmosphereConfig18.startUpHook = startupHookList46;
        boolean boolean48 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig7.populate(atmosphereConfig18);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig49.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig49.startupHook(startupHook51);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList53;
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
    }

    @Test
    public void test12727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12727");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        boolean boolean16 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.getproperties();
        atmosphereConfig6.properties = strMap17;
        java.lang.String str20 = atmosphereConfig6.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test12728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12728");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig6.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig6.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig6.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig6.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test12729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12729");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.startupHook(startupHook2);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        boolean boolean9 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
    }

    @Test
    public void test12730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12730");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig4.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig4.framework = atmosphereFramework17;
        atmosphereConfig4.supportSession = false;
        atmosphereConfig4.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig4.getframework();
        boolean boolean24 = atmosphereConfig4.supportSession;
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test12731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12731");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(startupHookList11);
    }

    @Test
    public void test12732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12732");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        boolean boolean14 = atmosphereConfig9.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig9.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        atmosphereConfig0.initComplete();
        int int20 = atmosphereConfig0.getInitParameter("", 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
    }

    @Test
    public void test12733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12733");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.destroy();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        boolean boolean22 = atmosphereConfig19.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig19.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
    }

    @Test
    public void test12734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12734");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        atmosphereConfig0.supportSession = false;
        boolean boolean27 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        boolean boolean30 = atmosphereConfig28.throwExceptionOnCloned;
        atmosphereConfig28.destroy();
        atmosphereConfig28.initComplete();
        java.lang.String str35 = atmosphereConfig28.getInitParameter("hi!", "");
        boolean boolean36 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig48.setframework(atmosphereFramework49);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig48.getproperties();
        atmosphereConfig37.setproperties(strMap51);
        atmosphereConfig28.setproperties(strMap51);
        java.lang.String str56 = atmosphereConfig28.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig0.populate(atmosphereConfig28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        boolean boolean60 = atmosphereConfig58.throwExceptionOnCloned;
        atmosphereConfig58.destroy();
        atmosphereConfig58.initComplete();
        java.lang.String str65 = atmosphereConfig58.getInitParameter("hi!", "");
        boolean boolean66 = atmosphereConfig58.isSessionTimeoutRemovalAllowed();
        boolean boolean69 = atmosphereConfig58.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig70.getAtmosphereHandlerConfig();
        atmosphereConfig70.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig74.getAtmosphereHandlerConfig();
        int int78 = atmosphereConfig74.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework79 = atmosphereConfig74.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray80 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList81, startupHookArray80);
        atmosphereConfig74.startUpHook = startupHookList81;
        atmosphereConfig70.startUpHook = startupHookList81;
        atmosphereConfig58.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList81);
        atmosphereConfig28.startUpHook = startupHookList81;
        atmosphereConfig28.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = atmosphereConfig28.getproperties();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(atmosphereFramework79);
        org.junit.Assert.assertNotNull(startupHookArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMap89);
    }

    @Test
    public void test12735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12735");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = atmosphereConfig4.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
    }

    @Test
    public void test12736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12736");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.shutdownHook(shutdownHook11);
        boolean boolean13 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig12.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test12737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12737");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
    }

    @Test
    public void test12738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12738");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        boolean boolean14 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig0.framework = atmosphereFramework17;
        atmosphereConfig0.initComplete();
        boolean boolean20 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test12739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12739");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        atmosphereConfig0.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap10 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test12740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12740");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig6.framework = atmosphereFramework10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig6.getproperties();
        atmosphereConfig6.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig6.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        int int21 = atmosphereConfig17.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger22 = atmosphereConfig17.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig17.shutdownHooks;
        atmosphereConfig17.setSupportSession(true);
        atmosphereConfig17.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        boolean boolean29 = atmosphereConfig27.throwExceptionOnCloned;
        atmosphereConfig27.destroy();
        atmosphereConfig27.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig27.shutdownHook(shutdownHook33);
        atmosphereConfig27.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig27.getproperties();
        atmosphereConfig27.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig27.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig27.properties;
        atmosphereConfig17.setproperties(strMap40);
        atmosphereConfig6.setproperties(strMap40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig43.getAtmosphereHandlerConfig();
        boolean boolean45 = atmosphereConfig43.throwExceptionOnCloned;
        atmosphereConfig43.destroy();
        atmosphereConfig43.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig43.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        int int57 = atmosphereConfig53.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig53.supportSession = false;
        atmosphereConfig53.setSupportSession(false);
        java.lang.String str63 = atmosphereConfig53.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig52.populate(atmosphereConfig53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        atmosphereConfig64.framework = atmosphereFramework65;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig64.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig64.getproperties();
        atmosphereConfig6.setproperties(strMap68);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig6.getproperties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test12741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12741");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        int int26 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig22.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig22.startUpHook = startupHookList29;
        org.slf4j.Logger logger32 = atmosphereConfig22.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test12742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12742");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory9 = atmosphereConfig6.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test12743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12743");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig7.throwExceptionOnCloned = true;
        boolean boolean11 = atmosphereConfig7.isSupportSession();
        boolean boolean12 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        boolean boolean13 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        boolean boolean14 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig7.properties();
        atmosphereConfig0.setproperties(strMap18);
        boolean boolean22 = atmosphereConfig0.getInitParameter("hi!", false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig26.getshutdownHooks();
        boolean boolean31 = atmosphereConfig26.getInitParameter("", true);
        atmosphereConfig26.initComplete();
        atmosphereConfig26.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        boolean boolean37 = atmosphereConfig35.throwExceptionOnCloned;
        atmosphereConfig35.destroy();
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig35.shutdownHook(shutdownHook41);
        atmosphereConfig35.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig35.shutdownHook(shutdownHook44);
        atmosphereConfig45.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig45.setframework(atmosphereFramework48);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig26.shutdownHooks = shutdownHookList50;
        atmosphereConfig0.setshutdownHooks(shutdownHookList50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        boolean boolean55 = atmosphereConfig53.throwExceptionOnCloned;
        atmosphereConfig53.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
    }

    @Test
    public void test12744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12744");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.getshutdownHooks();
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.getshutdownHooks();
        atmosphereConfig8.setshutdownHooks(shutdownHookList15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig8.properties;
        atmosphereConfig6.properties = strMap17;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig19 = atmosphereConfig6.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test12745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12745");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig20.setframework(atmosphereFramework21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.getproperties();
        atmosphereConfig9.setproperties(strMap23);
        atmosphereConfig0.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig0.framework;
        java.lang.String str28 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig0.setframework(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        boolean boolean33 = atmosphereConfig31.throwExceptionOnCloned;
        boolean boolean34 = atmosphereConfig31.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig31.framework = atmosphereFramework35;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig31.shutdownHook(shutdownHook37);
        boolean boolean39 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        int int42 = atmosphereConfig31.getInitParameter("", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig31.shutdownHook(shutdownHook43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig44.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList47;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(startupHookList51);
    }

    @Test
    public void test12746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12746");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties;
        atmosphereConfig0.properties = strMap9;
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test12747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12747");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig0.properties();
        java.lang.String str17 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
    }

    @Test
    public void test12748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12748");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig8.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.properties();
        atmosphereConfig0.setproperties(strMap15);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean20 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig19.startupHook(startupHook21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig19.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList23;
        boolean boolean25 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.startupHook(startupHook27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
    }

    @Test
    public void test12749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12749");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.shutdownHook(shutdownHook16);
        org.slf4j.Logger logger18 = atmosphereConfig17.getlogger();
        boolean boolean19 = atmosphereConfig17.isSupportSession();
        boolean boolean20 = atmosphereConfig17.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig21.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig21.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        atmosphereConfig17.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig17.framework();
        java.lang.String str32 = atmosphereConfig17.getInitParameter("");
        java.lang.String str35 = atmosphereConfig17.getInitParameter("hi!", "");
        atmosphereConfig17.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.populate(atmosphereConfig17);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster39 = atmosphereConfig17.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(atmosphereConfig38);
    }

    @Test
    public void test12750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12750");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12);
        boolean boolean15 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.destroy();
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig16.shutdownHook(shutdownHook22);
        atmosphereConfig16.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        boolean boolean28 = atmosphereConfig26.throwExceptionOnCloned;
        atmosphereConfig26.setThrowExceptionOnCloned(false);
        boolean boolean31 = atmosphereConfig26.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig26.getproperties();
        atmosphereConfig16.setproperties(strMap32);
        atmosphereConfig0.properties = strMap32;
        org.slf4j.Logger logger35 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(logger35);
    }

    @Test
    public void test12751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12751");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        atmosphereConfig6.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig6.startupHook(startupHook13);
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
    }

    @Test
    public void test12752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12752");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNull(atmosphereFramework18);
    }

    @Test
    public void test12753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12753");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig7.throwExceptionOnCloned;
        atmosphereConfig7.destroy();
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig7.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.framework = atmosphereFramework14;
        boolean boolean18 = atmosphereConfig7.getInitParameter("hi!", true);
        atmosphereConfig7.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig0.shutdownHooks = shutdownHookList24;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str31 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.shutdownHook(shutdownHook32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(atmosphereConfig33);
    }

    @Test
    public void test12754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12754");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        boolean boolean9 = atmosphereConfig4.supportSession;
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig4.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig17.throwExceptionOnCloned;
        boolean boolean20 = atmosphereConfig17.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig17.framework = atmosphereFramework21;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig17.shutdownHook(shutdownHook23);
        boolean boolean25 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        int int28 = atmosphereConfig17.getInitParameter("", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig17.shutdownHook(shutdownHook29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig17.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList31);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory33 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(startupHookList31);
    }

    @Test
    public void test12755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12755");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig11.startUpHook = startupHookList24;
        atmosphereConfig0.startUpHook = startupHookList24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        boolean boolean35 = atmosphereConfig33.throwExceptionOnCloned;
        boolean boolean36 = atmosphereConfig33.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig33.framework = atmosphereFramework37;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig33.shutdownHook(shutdownHook39);
        boolean boolean41 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        int int44 = atmosphereConfig33.getInitParameter("", (int) (short) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig33.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig32.shutdownHooks = shutdownHookList46;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
    }

    @Test
    public void test12756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12756");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35, startupHookArray34);
        atmosphereConfig30.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig30.framework = atmosphereFramework38;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig30.getstartUpHook();
        atmosphereConfig4.startUpHook = startupHookList40;
        atmosphereConfig4.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig4.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig4.setframework(atmosphereFramework45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig4.framework;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration48 = atmosphereConfig4.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNull(atmosphereFramework47);
    }

    @Test
    public void test12757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12757");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig7.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList11;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.shutdownHook(shutdownHook13);
        boolean boolean15 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        boolean boolean23 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig20.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig26.getshutdownHooks();
        boolean boolean31 = atmosphereConfig26.getInitParameter("", true);
        boolean boolean32 = atmosphereConfig26.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        atmosphereConfig33.throwExceptionOnCloned = true;
        boolean boolean37 = atmosphereConfig33.isSupportSession();
        boolean boolean38 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        boolean boolean39 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        boolean boolean40 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig33.shutdownHooks;
        atmosphereConfig33.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig33.properties();
        atmosphereConfig26.setproperties(strMap44);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig26.startUpHook;
        atmosphereConfig25.setstartUpHook(startupHookList46);
        atmosphereConfig0.startUpHook = startupHookList46;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration49 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(startupHookList46);
    }

    @Test
    public void test12758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12758");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig21.throwExceptionOnCloned = true;
        boolean boolean25 = atmosphereConfig21.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig31.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig33.setframework(atmosphereFramework34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig33.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig21.setshutdownHooks(shutdownHookList37);
        atmosphereConfig16.setshutdownHooks(shutdownHookList37);
        atmosphereConfig0.setshutdownHooks(shutdownHookList37);
        atmosphereConfig0.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster44 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test12759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12759");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.slf4j.Logger logger20 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig24.throwExceptionOnCloned = true;
        boolean boolean28 = atmosphereConfig24.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig24.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig36.getshutdownHooks();
        atmosphereConfig24.setshutdownHooks(shutdownHookList40);
        atmosphereConfig24.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        boolean boolean46 = atmosphereConfig44.throwExceptionOnCloned;
        atmosphereConfig44.destroy();
        atmosphereConfig44.initComplete();
        java.lang.String str51 = atmosphereConfig44.getInitParameter("hi!", "");
        boolean boolean52 = atmosphereConfig44.isSessionTimeoutRemovalAllowed();
        java.lang.String str54 = atmosphereConfig44.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray55 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList56, shutdownHookArray55);
        atmosphereConfig44.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList56);
        atmosphereConfig24.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig60.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig60.shutdownHook(shutdownHook63);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig64.shutdownHook(shutdownHook65);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig64.getstartUpHook();
        atmosphereConfig24.startUpHook = startupHookList67;
        boolean boolean69 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = atmosphereConfig24.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig0.populate(atmosphereConfig24);
        atmosphereConfig71.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider73 = atmosphereConfig71.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(shutdownHookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(atmosphereFramework70);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
    }

    @Test
    public void test12760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12760");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig6.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig6.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig18.throwExceptionOnCloned = true;
        boolean boolean22 = atmosphereConfig18.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig18.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig24.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig30.setframework(atmosphereFramework31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig18.setshutdownHooks(shutdownHookList34);
        atmosphereConfig13.setshutdownHooks(shutdownHookList34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig13.startupHook(startupHook37);
        org.slf4j.Logger logger39 = atmosphereConfig38.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        boolean boolean42 = atmosphereConfig40.throwExceptionOnCloned;
        boolean boolean43 = atmosphereConfig40.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig40.framework = atmosphereFramework44;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig40.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig47.shutdownHooks;
        atmosphereConfig38.shutdownHooks = shutdownHookList48;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig38.shutdownHook(shutdownHook50);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig51.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig51.properties;
        atmosphereConfig6.properties = strMap55;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap57 = atmosphereConfig6.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test12761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12761");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        boolean boolean16 = atmosphereConfig11.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        int int23 = atmosphereConfig19.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig19.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig19.startupHook(startupHook25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig0.getstartUpHook();
        boolean boolean30 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean31 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test12762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12762");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList2;
        int int6 = atmosphereConfig0.getInitParameter("", (-1));
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean11 = atmosphereConfig0.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            atmosphereConfig0.destroy();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test12763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12763");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.shutdownHook(shutdownHook17);
        int int21 = atmosphereConfig18.getInitParameter("", (int) (byte) -1);
        atmosphereConfig18.throwExceptionOnCloned = true;
        atmosphereConfig18.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig25.supportSession = false;
        boolean boolean32 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig25.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig37.properties();
        atmosphereConfig25.properties = strMap40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        atmosphereConfig42.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig46.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig46.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig50.startupHook(startupHook51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig52.setframework(atmosphereFramework53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig52.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig52.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig52.startUpHook;
        atmosphereConfig42.setstartUpHook(startupHookList57);
        atmosphereConfig25.setstartUpHook(startupHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig18.populate(atmosphereConfig25);
        boolean boolean61 = atmosphereConfig25.throwExceptionOnCloned;
        atmosphereConfig25.setSupportSession(true);
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig0.populate(atmosphereConfig25);
        int int68 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }

    @Test
    public void test12764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12764");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig14.setframework(atmosphereFramework15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster24 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
    }

    @Test
    public void test12765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12765");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig4.framework = atmosphereFramework11;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig4.framework();
        boolean boolean14 = atmosphereConfig4.supportSession;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test12766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12766");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework();
        org.slf4j.Logger logger14 = atmosphereConfig0.getlogger();
        boolean boolean15 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig17.throwExceptionOnCloned;
        atmosphereConfig17.destroy();
        atmosphereConfig17.initComplete();
        java.lang.String str24 = atmosphereConfig17.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig17.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        boolean boolean31 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.shutdownHook(shutdownHook32);
        boolean boolean34 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test12767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12767");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig12.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig18.setframework(atmosphereFramework19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig4.shutdownHooks = shutdownHookList22;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig4.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig4.atmosphereHandlerConfig;
        atmosphereConfig4.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig27 = atmosphereConfig4.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
    }

    @Test
    public void test12768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12768");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig17.initComplete();
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig17);
        org.slf4j.Logger logger28 = atmosphereConfig27.getlogger();
        atmosphereConfig27.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        boolean boolean34 = atmosphereConfig32.throwExceptionOnCloned;
        atmosphereConfig32.destroy();
        atmosphereConfig32.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig32.setSupportSession(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig32.getproperties();
        boolean boolean41 = atmosphereConfig32.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig31.populate(atmosphereConfig32);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
    }

    @Test
    public void test12769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12769");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        int int11 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        boolean boolean15 = atmosphereConfig12.isSupportSession();
        boolean boolean16 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig4.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig4.shutdownHook(shutdownHook18);
        boolean boolean20 = atmosphereConfig19.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig19.framework = atmosphereFramework21;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test12770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12770");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig19.getlogger();
        boolean boolean21 = atmosphereConfig19.isSupportSession();
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig7.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList44);
        atmosphereConfig7.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig47.supportSession = false;
        boolean boolean54 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        atmosphereConfig47.properties = strMap62;
        atmosphereConfig7.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        boolean boolean66 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean67 = atmosphereConfig0.supportSession;
        boolean boolean68 = atmosphereConfig0.supportSession;
        java.lang.String str70 = atmosphereConfig0.getInitParameter("");
        org.slf4j.Logger logger71 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(logger71);
        org.junit.Assert.assertNull(atmosphereFramework72);
    }

    @Test
    public void test12771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12771");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.startUpHook;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean10 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration13 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
    }

    @Test
    public void test12772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12772");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        java.lang.String str11 = atmosphereConfig6.getInitParameter("");
        boolean boolean14 = atmosphereConfig6.getInitParameter("", false);
        boolean boolean15 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig16.throwExceptionOnCloned = true;
        boolean boolean20 = atmosphereConfig16.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig16.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig28.setframework(atmosphereFramework29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig28.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig28.getshutdownHooks();
        atmosphereConfig16.setshutdownHooks(shutdownHookList32);
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        boolean boolean38 = atmosphereConfig36.throwExceptionOnCloned;
        atmosphereConfig36.destroy();
        atmosphereConfig36.initComplete();
        java.lang.String str43 = atmosphereConfig36.getInitParameter("hi!", "");
        boolean boolean44 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        java.lang.String str46 = atmosphereConfig36.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray47 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList48, shutdownHookArray47);
        atmosphereConfig36.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList48);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig56.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig56.getstartUpHook();
        atmosphereConfig16.startUpHook = startupHookList59;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig63.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig63.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray67 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList68, startupHookArray67);
        atmosphereConfig63.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList68);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = null;
        atmosphereConfig63.framework = atmosphereFramework71;
        atmosphereConfig63.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig63.startupHook(startupHook74);
        atmosphereConfig63.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig63.getshutdownHooks();
        atmosphereConfig16.shutdownHooks = shutdownHookList78;
        atmosphereConfig6.setshutdownHooks(shutdownHookList78);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(shutdownHookArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(startupHookArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(shutdownHookList78);
    }

    @Test
    public void test12773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12773");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList9);
    }

    @Test
    public void test12774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12774");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.destroy();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig25.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig31.shutdownHook(shutdownHook32);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig31.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig31.startupHook(startupHook35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        atmosphereConfig25.setstartUpHook(startupHookList37);
        atmosphereConfig25.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        atmosphereConfig40.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        int int48 = atmosphereConfig44.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig44.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList51, startupHookArray50);
        atmosphereConfig44.startUpHook = startupHookList51;
        atmosphereConfig40.startUpHook = startupHookList51;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig40.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig40.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList56;
        boolean boolean58 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig59.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig59.framework = atmosphereFramework61;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig59.startUpHook;
        atmosphereConfig25.startUpHook = startupHookList63;
        atmosphereConfig0.setstartUpHook(startupHookList63);
        boolean boolean66 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger67 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(startupHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(logger67);
    }

    @Test
    public void test12775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12775");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.getshutdownHooks();
        boolean boolean18 = atmosphereConfig13.getInitParameter("", true);
        boolean boolean19 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.shutdownHook(shutdownHook23);
        java.lang.String str26 = atmosphereConfig24.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test12776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12776");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        atmosphereConfig0.supportSession = false;
        boolean boolean27 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        boolean boolean30 = atmosphereConfig28.throwExceptionOnCloned;
        atmosphereConfig28.destroy();
        atmosphereConfig28.initComplete();
        java.lang.String str35 = atmosphereConfig28.getInitParameter("hi!", "");
        boolean boolean36 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig48.setframework(atmosphereFramework49);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig48.getproperties();
        atmosphereConfig37.setproperties(strMap51);
        atmosphereConfig28.setproperties(strMap51);
        java.lang.String str56 = atmosphereConfig28.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig0.populate(atmosphereConfig28);
        java.lang.String str59 = atmosphereConfig57.getInitParameter("hi!");
        boolean boolean60 = atmosphereConfig57.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig61.getAtmosphereHandlerConfig();
        boolean boolean63 = atmosphereConfig61.throwExceptionOnCloned;
        atmosphereConfig61.setThrowExceptionOnCloned(false);
        atmosphereConfig61.setThrowExceptionOnCloned(true);
        boolean boolean68 = atmosphereConfig61.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig61.startupHook(startupHook69);
        boolean boolean71 = atmosphereConfig70.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig57.populate(atmosphereConfig70);
        atmosphereConfig72.destroy();
        atmosphereConfig72.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig72.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
    }

    @Test
    public void test12777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12777");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig10.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15, startupHookArray14);
        atmosphereConfig10.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig6.framework();
        atmosphereConfig6.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        int int26 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig22.supportSession = false;
        atmosphereConfig22.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig22.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig6.populate(atmosphereConfig22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig22.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig22.shutdownHook(shutdownHook34);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
    }

    @Test
    public void test12778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12778");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        boolean boolean17 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.startupHook(startupHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig19.setframework(atmosphereFramework21);
        boolean boolean23 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test12779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12779");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig10.framework = atmosphereFramework12;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig10.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList14;
        int int18 = atmosphereConfig0.getInitParameter("", 100);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        boolean boolean23 = atmosphereConfig21.throwExceptionOnCloned;
        atmosphereConfig21.destroy();
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig21.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig28.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        int int35 = atmosphereConfig31.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig31.supportSession = false;
        atmosphereConfig31.setSupportSession(false);
        java.lang.String str41 = atmosphereConfig31.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig30.populate(atmosphereConfig31);
        java.lang.String str45 = atmosphereConfig42.getInitParameter("hi!", "");
        atmosphereConfig42.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49, startupHookArray48);
        atmosphereConfig42.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49);
        atmosphereConfig42.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.populate(atmosphereConfig42);
        atmosphereConfig53.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(startupHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
    }

    @Test
    public void test12780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12780");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList2;
        int int6 = atmosphereConfig0.getInitParameter("", (-1));
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setSupportSession(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test12781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12781");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean12 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
    }

    @Test
    public void test12782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12782");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig12.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList17);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.startupHook(startupHook22);
        int int26 = atmosphereConfig0.getInitParameter("hi!", 32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
    }

    @Test
    public void test12783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12783");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig9.properties;
        atmosphereConfig0.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig19.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        int int27 = atmosphereConfig23.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig23.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30, startupHookArray29);
        atmosphereConfig23.startUpHook = startupHookList30;
        atmosphereConfig19.startUpHook = startupHookList30;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig19.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.slf4j.Logger logger36 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig43.setframework(atmosphereFramework44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig43.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig43.shutdownHooks;
        java.lang.String str49 = atmosphereConfig43.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        boolean boolean56 = atmosphereConfig54.throwExceptionOnCloned;
        atmosphereConfig54.destroy();
        atmosphereConfig54.initComplete();
        atmosphereConfig54.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig54.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig62.getAtmosphereHandlerConfig();
        int int66 = atmosphereConfig62.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig62.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig62.properties();
        atmosphereConfig54.setproperties(strMap69);
        atmosphereConfig54.throwExceptionOnCloned = true;
        atmosphereConfig54.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig0.populate(atmosphereConfig54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig76.getAtmosphereHandlerConfig();
        boolean boolean78 = atmosphereConfig76.throwExceptionOnCloned;
        atmosphereConfig76.destroy();
        atmosphereConfig76.initComplete();
        java.lang.String str83 = atmosphereConfig76.getInitParameter("hi!", "");
        boolean boolean84 = atmosphereConfig76.isSessionTimeoutRemovalAllowed();
        boolean boolean87 = atmosphereConfig76.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList89 = atmosphereConfig88.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList90 = atmosphereConfig88.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig88.getproperties();
        atmosphereConfig76.setproperties(strMap91);
        atmosphereConfig76.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook94 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig95 = atmosphereConfig76.startupHook(startupHook94);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList96 = atmosphereConfig76.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList96;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(startupHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList89);
        org.junit.Assert.assertNotNull(shutdownHookList90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(atmosphereConfig95);
        org.junit.Assert.assertNotNull(shutdownHookList96);
    }

    @Test
    public void test12784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12784");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        boolean boolean23 = atmosphereConfig20.isSupportSession();
        boolean boolean24 = atmosphereConfig20.supportSession;
        atmosphereConfig20.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig20.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig20.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig20.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        boolean boolean34 = atmosphereConfig32.throwExceptionOnCloned;
        atmosphereConfig32.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig32.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig32.startupHook(startupHook38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig32.framework = atmosphereFramework40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        boolean boolean45 = atmosphereConfig42.isSupportSession();
        boolean boolean46 = atmosphereConfig42.supportSession;
        boolean boolean47 = atmosphereConfig42.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig42.getframework();
        boolean boolean51 = atmosphereConfig42.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig32.setshutdownHooks(shutdownHookList52);
        atmosphereConfig20.setshutdownHooks(shutdownHookList52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig20.shutdownHooks;
        atmosphereConfig17.shutdownHooks = shutdownHookList55;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig17.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(shutdownHookList57);
    }

    @Test
    public void test12785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12785");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig7.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig7.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        atmosphereConfig13.setSupportSession(false);
        boolean boolean22 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig13.properties;
        atmosphereConfig0.properties = strMap23;
        boolean boolean25 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        int int30 = atmosphereConfig26.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig26.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList33, startupHookArray32);
        atmosphereConfig26.startUpHook = startupHookList33;
        org.slf4j.Logger logger36 = atmosphereConfig26.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig26.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig26.startupHook(startupHook38);
        boolean boolean40 = atmosphereConfig39.throwExceptionOnCloned;
        atmosphereConfig39.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig39.startupHook(startupHook44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig39.properties();
        atmosphereConfig0.setproperties(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(startupHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test12786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12786");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig21.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig21.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig0.framework;
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.initComplete();
        boolean boolean33 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test12787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12787");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.startupHook(startupHook2);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.framework = atmosphereFramework10;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
    }

    @Test
    public void test12788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12788");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig10.throwExceptionOnCloned = true;
        boolean boolean14 = atmosphereConfig10.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        java.lang.String str18 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean19 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean20 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.startUpHook;
        boolean boolean22 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test12789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12789");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig26.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList28;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        boolean boolean35 = atmosphereConfig33.throwExceptionOnCloned;
        atmosphereConfig33.destroy();
        atmosphereConfig33.initComplete();
        atmosphereConfig33.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig33.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig33.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig33.getframework();
        java.lang.String str45 = atmosphereConfig33.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig33.startUpHook;
        atmosphereConfig33.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        atmosphereConfig49.throwExceptionOnCloned = true;
        boolean boolean53 = atmosphereConfig49.isSupportSession();
        boolean boolean54 = atmosphereConfig49.isSessionTimeoutRemovalAllowed();
        boolean boolean55 = atmosphereConfig49.sessionTimeoutRemovalAllowed;
        boolean boolean56 = atmosphereConfig49.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig49.shutdownHooks;
        atmosphereConfig49.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig49.setframework(atmosphereFramework60);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig49.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        int int67 = atmosphereConfig63.getInitParameter("hi!", (int) (short) 0);
        boolean boolean68 = atmosphereConfig63.isSupportSession();
        atmosphereConfig63.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig71.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig71.shutdownHook(shutdownHook74);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig75.shutdownHook(shutdownHook76);
        org.slf4j.Logger logger78 = atmosphereConfig77.getlogger();
        boolean boolean79 = atmosphereConfig77.isSupportSession();
        boolean boolean80 = atmosphereConfig77.isThrowExceptionOnCloned();
        org.slf4j.Logger logger81 = atmosphereConfig77.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig77.properties();
        atmosphereConfig77.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = atmosphereConfig63.populate(atmosphereConfig77);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList85 = atmosphereConfig84.startUpHook;
        atmosphereConfig49.startUpHook = startupHookList85;
        atmosphereConfig33.startUpHook = startupHookList85;
        atmosphereConfig0.startUpHook = startupHookList85;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(logger78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(logger81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(atmosphereConfig84);
        org.junit.Assert.assertNotNull(startupHookList85);
    }

    @Test
    public void test12790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12790");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig12.framework = atmosphereFramework14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig12.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig12.setframework(atmosphereFramework17);
        boolean boolean19 = atmosphereConfig12.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        boolean boolean22 = atmosphereConfig21.isThrowExceptionOnCloned();
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig12.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.populate(atmosphereConfig12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
    }

    @Test
    public void test12791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12791");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig4.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig4.properties;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test12792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12792");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig14.setframework(atmosphereFramework15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList18;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.startupHook(startupHook20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig34.setframework(atmosphereFramework35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig34.getproperties();
        atmosphereConfig23.setproperties(strMap37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig23.framework;
        boolean boolean40 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig23.startupHook(startupHook41);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.atmosphereHandlerConfig;
        boolean boolean44 = atmosphereConfig42.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig42.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig42.startUpHook;
        atmosphereConfig21.setstartUpHook(startupHookList46);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext48 = atmosphereConfig21.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(startupHookList46);
    }

    @Test
    public void test12793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12793");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.properties;
        boolean boolean21 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig28.setframework(atmosphereFramework29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig28.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig28.shutdownHooks;
        boolean boolean33 = atmosphereConfig28.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig34.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig38.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig38.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig42.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig44.setframework(atmosphereFramework45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig44.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig44.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig44.startUpHook;
        atmosphereConfig34.setstartUpHook(startupHookList49);
        atmosphereConfig28.startUpHook = startupHookList49;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig28.shutdownHook(shutdownHook52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig53.getproperties();
        atmosphereConfig0.properties = strMap54;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        int int60 = atmosphereConfig56.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig56.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig56.startUpHook = startupHookList63;
        org.slf4j.Logger logger66 = atmosphereConfig56.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig56.getshutdownHooks();
        atmosphereConfig56.destroy();
        atmosphereConfig56.supportSession = true;
        atmosphereConfig56.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig72.getAtmosphereHandlerConfig();
        boolean boolean74 = atmosphereConfig72.throwExceptionOnCloned;
        atmosphereConfig72.destroy();
        atmosphereConfig72.initComplete();
        atmosphereConfig72.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework79 = atmosphereConfig72.framework();
        atmosphereConfig72.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig56.populate(atmosphereConfig72);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig56.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList83);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(logger66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(atmosphereFramework79);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNotNull(shutdownHookList83);
    }

    @Test
    public void test12794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12794");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig6.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.getshutdownHooks();
        boolean boolean18 = atmosphereConfig13.getInitParameter("", true);
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig20.framework = atmosphereFramework25;
        int int29 = atmosphereConfig20.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig20.getstartUpHook();
        atmosphereConfig13.setstartUpHook(startupHookList30);
        atmosphereConfig6.setstartUpHook(startupHookList30);
        boolean boolean33 = atmosphereConfig6.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig6.atmosphereHandlerConfig;
        java.lang.String str37 = atmosphereConfig6.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 35 + "'", int29 == 35);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(shutdownHookList38);
    }

    @Test
    public void test12795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12795");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig4.startupHook(startupHook8);
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
    }

    @Test
    public void test12796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12796");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        atmosphereConfig6.shutdownHooks = shutdownHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig6.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.getshutdownHooks();
        boolean boolean21 = atmosphereConfig16.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        java.lang.String str28 = atmosphereConfig22.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.properties;
        atmosphereConfig16.setproperties(strMap29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig16.properties;
        atmosphereConfig6.properties = strMap31;
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig6.framework;
        atmosphereConfig6.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig6.framework;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster37 = atmosphereConfig6.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertNull(atmosphereFramework36);
    }

    @Test
    public void test12797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12797");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.shutdownHook(shutdownHook22);
        boolean boolean24 = atmosphereConfig0.isSupportSession();
        boolean boolean25 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        boolean boolean28 = atmosphereConfig26.throwExceptionOnCloned;
        atmosphereConfig26.destroy();
        atmosphereConfig26.initComplete();
        java.lang.String str33 = atmosphereConfig26.getInitParameter("hi!", "");
        boolean boolean34 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        boolean boolean35 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig26.properties();
        atmosphereConfig0.properties = strMap36;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test12798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12798");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test12799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12799");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.startupHook(startupHook2);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean6 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig11.framework = atmosphereFramework16;
        int int20 = atmosphereConfig11.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig11.getstartUpHook();
        atmosphereConfig11.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig11.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig11.setframework(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        boolean boolean29 = atmosphereConfig27.throwExceptionOnCloned;
        atmosphereConfig27.destroy();
        atmosphereConfig27.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig27.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig35.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList40, startupHookArray39);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList40);
        atmosphereConfig27.startUpHook = startupHookList40;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig27.shutdownHook(shutdownHook45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig27.getproperties();
        atmosphereConfig11.properties = strMap47;
        atmosphereConfig10.properties = strMap47;
        boolean boolean50 = atmosphereConfig10.supportSession;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 35 + "'", int20 == 35);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test12800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12800");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig10.throwExceptionOnCloned = true;
        boolean boolean14 = atmosphereConfig10.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        atmosphereConfig0.supportSession = true;
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        int int26 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger27 = atmosphereConfig22.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig22.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        int int33 = atmosphereConfig29.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig29.supportSession = false;
        atmosphereConfig29.setSupportSession(false);
        java.lang.String str39 = atmosphereConfig29.getInitParameter("hi!");
        boolean boolean42 = atmosphereConfig29.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig29.getshutdownHooks();
        atmosphereConfig22.setshutdownHooks(shutdownHookList43);
        atmosphereConfig0.shutdownHooks = shutdownHookList43;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(startupHookList46);
    }

    @Test
    public void test12801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12801");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig11.startUpHook = startupHookList24;
        atmosphereConfig0.startUpHook = startupHookList24;
        boolean boolean29 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig0.shutdownHook(shutdownHook30);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster32 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
    }

    @Test
    public void test12802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12802");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.shutdownHook(shutdownHook14);
        org.slf4j.Logger logger16 = atmosphereConfig15.getlogger();
        boolean boolean17 = atmosphereConfig15.isSupportSession();
        boolean boolean18 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24);
        atmosphereConfig0.startUpHook = startupHookList24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig0.framework = atmosphereFramework29;
        boolean boolean31 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean32 = atmosphereConfig0.isSupportSession();
        java.lang.String str34 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test12803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12803");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        boolean boolean9 = atmosphereConfig4.supportSession;
        boolean boolean10 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig4.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookList13);
    }

    @Test
    public void test12804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12804");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig4.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig4.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig4.framework = atmosphereFramework17;
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig21.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig26.getshutdownHooks();
        atmosphereConfig21.setshutdownHooks(shutdownHookList28);
        boolean boolean30 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig21.getstartUpHook();
        atmosphereConfig4.setstartUpHook(startupHookList31);
        boolean boolean33 = atmosphereConfig4.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test12805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12805");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("");
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig12.framework = atmosphereFramework17;
        int int21 = atmosphereConfig12.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig12.getstartUpHook();
        atmosphereConfig12.setSupportSession(false);
        boolean boolean27 = atmosphereConfig12.getInitParameter("hi!", false);
        atmosphereConfig12.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        atmosphereConfig12.setproperties(strMap39);
        atmosphereConfig0.setproperties(strMap39);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 35 + "'", int21 == 35);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNull(atmosphereFramework43);
    }

    @Test
    public void test12806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12806");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig12.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList17);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig30.atmosphereHandlerConfig;
        boolean boolean34 = atmosphereConfig30.supportSession;
        boolean boolean35 = atmosphereConfig30.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig30.properties;
        atmosphereConfig0.properties = strMap36;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test12807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12807");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test12808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12808");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig4.startupHook(startupHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.startUpHook;
        boolean boolean11 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig4.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster15 = atmosphereConfig4.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test12809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12809");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig4.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str11 = atmosphereConfig4.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test12810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12810");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        atmosphereConfig7.throwExceptionOnCloned = true;
        boolean boolean11 = atmosphereConfig7.isSupportSession();
        boolean boolean12 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        boolean boolean13 = atmosphereConfig7.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig7.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig7.framework;
        org.slf4j.Logger logger16 = atmosphereConfig7.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig7.getstartUpHook();
        boolean boolean18 = atmosphereConfig7.throwExceptionOnCloned;
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig7.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig25.getstartUpHook();
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig25.startupHook(startupHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig31.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        boolean boolean36 = atmosphereConfig34.throwExceptionOnCloned;
        atmosphereConfig34.destroy();
        atmosphereConfig34.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig34.framework = atmosphereFramework39;
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig34.shutdownHooks;
        atmosphereConfig7.setshutdownHooks(shutdownHookList43);
        atmosphereConfig0.setshutdownHooks(shutdownHookList43);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig46 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shutdownHookList43);
    }

    @Test
    public void test12811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12811");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.shutdownHook(shutdownHook16);
        org.slf4j.Logger logger18 = atmosphereConfig17.getlogger();
        boolean boolean19 = atmosphereConfig17.isSupportSession();
        boolean boolean20 = atmosphereConfig17.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig21.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig21.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        atmosphereConfig17.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig17.framework();
        java.lang.String str32 = atmosphereConfig17.getInitParameter("");
        java.lang.String str35 = atmosphereConfig17.getInitParameter("hi!", "");
        atmosphereConfig17.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.populate(atmosphereConfig17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        atmosphereConfig41.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        int int49 = atmosphereConfig45.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig45.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray51 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList52, startupHookArray51);
        atmosphereConfig45.startUpHook = startupHookList52;
        atmosphereConfig41.startUpHook = startupHookList52;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig41.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig41.shutdownHook(shutdownHook57);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig41.startUpHook;
        atmosphereConfig38.startUpHook = startupHookList59;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext61 = atmosphereConfig38.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNotNull(startupHookArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(startupHookList59);
    }

    @Test
    public void test12812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12812");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig13.setframework(atmosphereFramework14);
        atmosphereConfig13.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig13.properties;
        boolean boolean19 = atmosphereConfig13.throwExceptionOnCloned;
        java.lang.String str22 = atmosphereConfig13.getInitParameter("", "hi!");
        boolean boolean23 = atmosphereConfig13.isThrowExceptionOnCloned();
        java.lang.String str25 = atmosphereConfig13.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig26.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig26.shutdownHook(shutdownHook29);
        atmosphereConfig30.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.startupHook(startupHook38);
        boolean boolean40 = atmosphereConfig37.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig37.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        boolean boolean44 = atmosphereConfig42.throwExceptionOnCloned;
        atmosphereConfig42.setThrowExceptionOnCloned(false);
        atmosphereConfig42.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig42.shutdownHooks;
        atmosphereConfig37.setshutdownHooks(shutdownHookList49);
        atmosphereConfig30.shutdownHooks = shutdownHookList49;
        atmosphereConfig13.setshutdownHooks(shutdownHookList49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig13.properties();
        atmosphereConfig0.properties = strMap53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test12813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12813");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test12814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12814");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig14.getlogger();
        boolean boolean16 = atmosphereConfig14.isSupportSession();
        boolean boolean17 = atmosphereConfig14.isThrowExceptionOnCloned();
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig14.properties();
        atmosphereConfig14.initComplete();
        boolean boolean21 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.populate(atmosphereConfig14);
        boolean boolean23 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test12815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12815");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig9.properties;
        atmosphereConfig0.setproperties(strMap16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        java.lang.String str23 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig0.getstartUpHook();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap25 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(startupHookList24);
    }

    @Test
    public void test12816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12816");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig14.atmosphereHandlerConfig;
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig6.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        boolean boolean35 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        boolean boolean38 = atmosphereConfig36.throwExceptionOnCloned;
        atmosphereConfig36.destroy();
        atmosphereConfig36.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig36.shutdownHook(shutdownHook42);
        atmosphereConfig36.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        boolean boolean48 = atmosphereConfig46.throwExceptionOnCloned;
        atmosphereConfig46.setThrowExceptionOnCloned(false);
        boolean boolean51 = atmosphereConfig46.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig46.getproperties();
        atmosphereConfig36.setproperties(strMap52);
        atmosphereConfig20.properties = strMap52;
        atmosphereConfig6.properties = strMap52;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap56 = atmosphereConfig6.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test12817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12817");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean15 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.slf4j.Logger logger19 = atmosphereConfig16.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig20.setshutdownHooks(shutdownHookList27);
        boolean boolean29 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        atmosphereConfig20.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig16.populate(atmosphereConfig20);
        org.slf4j.Logger logger35 = atmosphereConfig16.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig16.setframework(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        int int42 = atmosphereConfig38.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig38.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig38.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        atmosphereConfig38.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig47.throwExceptionOnCloned = true;
        boolean boolean51 = atmosphereConfig47.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.startupHook(startupHook58);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig59.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList63);
        atmosphereConfig47.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.getAtmosphereHandlerConfig();
        boolean boolean69 = atmosphereConfig67.throwExceptionOnCloned;
        atmosphereConfig67.destroy();
        atmosphereConfig67.initComplete();
        java.lang.String str74 = atmosphereConfig67.getInitParameter("hi!", "");
        boolean boolean75 = atmosphereConfig67.isSessionTimeoutRemovalAllowed();
        java.lang.String str77 = atmosphereConfig67.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray78 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList79, shutdownHookArray78);
        atmosphereConfig67.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList79);
        atmosphereConfig47.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList79);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig83.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook86 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = atmosphereConfig83.shutdownHook(shutdownHook86);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook88 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig87.shutdownHook(shutdownHook88);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList90 = atmosphereConfig87.getstartUpHook();
        atmosphereConfig47.startUpHook = startupHookList90;
        atmosphereConfig38.setstartUpHook(startupHookList90);
        atmosphereConfig16.setstartUpHook(startupHookList90);
        atmosphereConfig0.startUpHook = startupHookList90;
        atmosphereConfig0.destroy();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework98 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList99 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(logger35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(shutdownHookArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig87);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
        org.junit.Assert.assertNotNull(startupHookList90);
        org.junit.Assert.assertNull(atmosphereFramework98);
        org.junit.Assert.assertNotNull(shutdownHookList99);
    }

    @Test
    public void test12818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12818");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        boolean boolean67 = atmosphereConfig65.throwExceptionOnCloned;
        atmosphereConfig65.destroy();
        atmosphereConfig65.initComplete();
        java.lang.String str72 = atmosphereConfig65.getInitParameter("hi!", "");
        boolean boolean73 = atmosphereConfig65.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig74.getshutdownHooks();
        atmosphereConfig74.setThrowExceptionOnCloned(false);
        java.lang.String str80 = atmosphereConfig74.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig74.properties;
        atmosphereConfig65.setproperties(strMap81);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig65.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList83;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList85 = atmosphereConfig0.getstartUpHook();
        boolean boolean88 = atmosphereConfig0.getInitParameter("", true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNotNull(shutdownHookList76);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(startupHookList85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test12819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12819");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = null;
        atmosphereConfig0.setproperties(strMap11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = atmosphereConfig14.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
    }

    @Test
    public void test12820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12820");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.initComplete();
        java.lang.String str19 = atmosphereConfig12.getInitParameter("hi!", "");
        boolean boolean20 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        java.lang.String str22 = atmosphereConfig12.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig12.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24);
        boolean boolean27 = atmosphereConfig12.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig6.properties();
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig6.getframework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(atmosphereFramework33);
    }

    @Test
    public void test12821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12821");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig6.startupHook(startupHook13);
        atmosphereConfig6.initComplete();
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig6.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig6.getproperties();
        atmosphereConfig6.initComplete();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test12822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12822");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.destroy();
        atmosphereConfig9.initComplete();
        java.lang.String str16 = atmosphereConfig9.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        boolean boolean20 = atmosphereConfig9.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig21.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig25.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList32, startupHookArray31);
        atmosphereConfig25.startUpHook = startupHookList32;
        atmosphereConfig21.startUpHook = startupHookList32;
        atmosphereConfig9.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList32);
        atmosphereConfig0.startUpHook = startupHookList32;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig0.framework = atmosphereFramework40;
        atmosphereConfig0.throwExceptionOnCloned = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory44 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(startupHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNull(atmosphereFramework39);
    }

    @Test
    public void test12823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12823");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.getframework();
        java.lang.String str4 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean8 = atmosphereConfig0.isThrowExceptionOnCloned();
        int int11 = atmosphereConfig0.getInitParameter("", (int) 'a');
        boolean boolean12 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 97 + "'", int11 == 97);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test12824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12824");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        atmosphereConfig23.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.shutdownHook(shutdownHook34);
        org.slf4j.Logger logger36 = atmosphereConfig35.getlogger();
        boolean boolean37 = atmosphereConfig35.isSupportSession();
        boolean boolean38 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig39.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig23.startUpHook = startupHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig23.setshutdownHooks(shutdownHookList51);
        atmosphereConfig0.shutdownHooks = shutdownHookList51;
        boolean boolean54 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig0.setframework(atmosphereFramework56);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig63.startupHook(startupHook64);
        org.slf4j.Logger logger66 = atmosphereConfig63.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = atmosphereConfig63.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig68.getAtmosphereHandlerConfig();
        atmosphereConfig68.throwExceptionOnCloned = true;
        boolean boolean72 = atmosphereConfig68.isSupportSession();
        boolean boolean73 = atmosphereConfig68.isSessionTimeoutRemovalAllowed();
        boolean boolean74 = atmosphereConfig68.sessionTimeoutRemovalAllowed;
        boolean boolean75 = atmosphereConfig68.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig68.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig68.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig78.getAtmosphereHandlerConfig();
        int int82 = atmosphereConfig78.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig78.supportSession = false;
        atmosphereConfig78.setSupportSession(false);
        java.lang.String str88 = atmosphereConfig78.getInitParameter("hi!");
        boolean boolean91 = atmosphereConfig78.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList92 = atmosphereConfig78.getshutdownHooks();
        atmosphereConfig68.setshutdownHooks(shutdownHookList92);
        atmosphereConfig63.setshutdownHooks(shutdownHookList92);
        atmosphereConfig0.setshutdownHooks(shutdownHookList92);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(logger66);
        org.junit.Assert.assertNull(atmosphereFramework67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(shutdownHookList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(shutdownHookList92);
    }

    @Test
    public void test12825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12825");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        boolean boolean7 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test12826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12826");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.startupHook(startupHook15);
        org.slf4j.Logger logger17 = atmosphereConfig14.getlogger();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        boolean boolean22 = atmosphereConfig14.supportSession;
        boolean boolean23 = atmosphereConfig14.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig14.initComplete();
        atmosphereConfig14.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig14.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig4.populate(atmosphereConfig14);
        atmosphereConfig4.throwExceptionOnCloned = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory35 = atmosphereConfig4.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test12827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12827");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig8.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.properties();
        atmosphereConfig0.setproperties(strMap15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.startupHook(startupHook19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
    }

    @Test
    public void test12828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12828");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig10.supportSession = false;
        boolean boolean17 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        boolean boolean18 = atmosphereConfig10.throwExceptionOnCloned;
        java.lang.String str20 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig21.throwExceptionOnCloned = true;
        boolean boolean25 = atmosphereConfig21.isSupportSession();
        boolean boolean26 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        boolean boolean27 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.shutdownHook(shutdownHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig32.atmosphereHandlerConfig;
        boolean boolean36 = atmosphereConfig32.supportSession;
        boolean boolean37 = atmosphereConfig32.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig32.properties;
        atmosphereConfig21.setproperties(strMap38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig21.startUpHook;
        atmosphereConfig10.setstartUpHook(startupHookList40);
        atmosphereConfig4.startUpHook = startupHookList40;
        boolean boolean43 = atmosphereConfig4.isThrowExceptionOnCloned();
        boolean boolean46 = atmosphereConfig4.getInitParameter("hi!", true);
        atmosphereConfig4.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig4.startupHook(startupHook49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig55.shutdownHook(shutdownHook56);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig55.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig55.properties();
        atmosphereConfig4.setproperties(strMap59);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test12829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12829");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory14 = atmosphereConfig13.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test12830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12830");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig8.throwExceptionOnCloned;
        atmosphereConfig8.destroy();
        atmosphereConfig8.initComplete();
        java.lang.String str15 = atmosphereConfig8.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig20.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig22.setframework(atmosphereFramework23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig22.shutdownHooks;
        atmosphereConfig8.shutdownHooks = shutdownHookList26;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig8.startupHook(startupHook28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig29.getproperties();
        atmosphereConfig0.properties = strMap30;
        boolean boolean32 = atmosphereConfig0.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory33 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test12831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12831");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        boolean boolean67 = atmosphereConfig65.throwExceptionOnCloned;
        atmosphereConfig65.destroy();
        atmosphereConfig65.initComplete();
        java.lang.String str72 = atmosphereConfig65.getInitParameter("hi!", "");
        boolean boolean73 = atmosphereConfig65.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig74.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList76 = atmosphereConfig74.getshutdownHooks();
        atmosphereConfig74.setThrowExceptionOnCloned(false);
        java.lang.String str80 = atmosphereConfig74.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig74.properties;
        atmosphereConfig65.setproperties(strMap81);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig65.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList83;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList85 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework86 = atmosphereConfig0.getframework();
        boolean boolean89 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework90 = null;
        atmosphereConfig0.framework = atmosphereFramework90;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNotNull(shutdownHookList76);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList85);
        org.junit.Assert.assertNull(atmosphereFramework86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test12832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12832");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig6.startupHook(startupHook11);
        atmosphereConfig6.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
    }

    @Test
    public void test12833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12833");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig17.initComplete();
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig27.getstartUpHook();
        boolean boolean30 = atmosphereConfig27.isThrowExceptionOnCloned();
        int int33 = atmosphereConfig27.getInitParameter("", (int) (short) 1);
        atmosphereConfig27.destroy();
        atmosphereConfig27.destroy();
        atmosphereConfig27.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test12834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12834");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        atmosphereConfig6.throwExceptionOnCloned = false;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig6.startUpHook;
        boolean boolean14 = atmosphereConfig6.throwExceptionOnCloned;
        boolean boolean15 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        atmosphereConfig6.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig6.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
    }

    @Test
    public void test12835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12835");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test12836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12836");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties;
        org.slf4j.Logger logger11 = atmosphereConfig0.getlogger();
        boolean boolean12 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.framework;
        boolean boolean18 = atmosphereConfig0.getInitParameter("", false);
        boolean boolean19 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test12837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12837");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig7.throwExceptionOnCloned;
        atmosphereConfig7.destroy();
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig7.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.framework = atmosphereFramework14;
        boolean boolean18 = atmosphereConfig7.getInitParameter("hi!", true);
        atmosphereConfig7.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig0.shutdownHooks = shutdownHookList24;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str31 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster34 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test12838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12838");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        int int22 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig18.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig18.startUpHook = startupHookList25;
        org.slf4j.Logger logger28 = atmosphereConfig18.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.destroy();
        atmosphereConfig18.supportSession = true;
        atmosphereConfig18.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        boolean boolean36 = atmosphereConfig34.throwExceptionOnCloned;
        atmosphereConfig34.destroy();
        atmosphereConfig34.initComplete();
        atmosphereConfig34.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig34.framework();
        atmosphereConfig34.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig18.populate(atmosphereConfig34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig34.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        atmosphereConfig46.throwExceptionOnCloned = true;
        boolean boolean50 = atmosphereConfig46.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig46.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig56.startupHook(startupHook57);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        atmosphereConfig58.setframework(atmosphereFramework59);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig58.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig58.getshutdownHooks();
        atmosphereConfig46.setshutdownHooks(shutdownHookList62);
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig46.getproperties();
        atmosphereConfig34.properties = strMap68;
        org.slf4j.Logger logger70 = atmosphereConfig34.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig34.getproperties();
        atmosphereConfig0.setproperties(strMap71);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig0.shutdownHook(shutdownHook73);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = null;
        atmosphereConfig0.properties = strMap75;
        org.slf4j.Logger logger77 = atmosphereConfig0.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext78 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(shutdownHookList62);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(logger70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(logger77);
    }

    @Test
    public void test12839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12839");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig10.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test12840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12840");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig6.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig6.framework = atmosphereFramework14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig6.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookList16);
    }

    @Test
    public void test12841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12841");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig39.getshutdownHooks();
        atmosphereConfig34.setshutdownHooks(shutdownHookList41);
        atmosphereConfig4.shutdownHooks = shutdownHookList41;
        atmosphereConfig4.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig4.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        boolean boolean52 = atmosphereConfig47.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig47.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig55.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig55.shutdownHook(shutdownHook58);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        atmosphereConfig47.startUpHook = startupHookList60;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig62.getAtmosphereHandlerConfig();
        int int66 = atmosphereConfig62.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig62.supportSession = false;
        atmosphereConfig62.setSupportSession(false);
        boolean boolean71 = atmosphereConfig62.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig73.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig73.getshutdownHooks();
        boolean boolean78 = atmosphereConfig73.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig79.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig79.getshutdownHooks();
        atmosphereConfig79.setThrowExceptionOnCloned(false);
        java.lang.String str85 = atmosphereConfig79.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig79.properties;
        atmosphereConfig73.setproperties(strMap86);
        atmosphereConfig72.properties = strMap86;
        atmosphereConfig62.setproperties(strMap86);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList90 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig47.atmosphereHandlerConfig = atmosphereHandlerConfigList90;
        atmosphereConfig4.atmosphereHandlerConfig = atmosphereHandlerConfigList90;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertNotNull(shutdownHookList75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList90);
    }

    @Test
    public void test12842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12842");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        atmosphereConfig6.shutdownHooks = shutdownHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig6.framework = atmosphereFramework14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig6.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig6.shutdownHook(shutdownHook17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig6.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig6.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        atmosphereConfig22.destroy();
        boolean boolean26 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        atmosphereConfig22.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(false);
        int int33 = atmosphereConfig22.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        boolean boolean36 = atmosphereConfig34.throwExceptionOnCloned;
        atmosphereConfig34.destroy();
        atmosphereConfig34.initComplete();
        java.lang.String str41 = atmosphereConfig34.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig48.setframework(atmosphereFramework49);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig48.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig48.shutdownHooks;
        atmosphereConfig34.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig34.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig22.populate(atmosphereConfig34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig21.populate(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
    }

    @Test
    public void test12843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12843");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.properties;
        java.lang.String str23 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.startupHook(startupHook30);
        org.slf4j.Logger logger32 = atmosphereConfig29.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig29.startupHook(startupHook33);
        atmosphereConfig29.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig29.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList37;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig0.properties;
        atmosphereConfig0.supportSession = false;
        boolean boolean42 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test12844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12844");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig6.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig12.startupHook(startupHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig6.setstartUpHook(startupHookList18);
        java.lang.String str22 = atmosphereConfig6.getInitParameter("", "hi!");
        atmosphereConfig6.throwExceptionOnCloned = false;
        boolean boolean25 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        atmosphereConfig6.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig6.getshutdownHooks();
        boolean boolean31 = atmosphereConfig6.getInitParameter("", false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test12845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12845");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        boolean boolean14 = atmosphereConfig9.getInitParameter("", true);
        atmosphereConfig9.initComplete();
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig29.setframework(atmosphereFramework30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.getproperties();
        atmosphereConfig18.setproperties(strMap32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig6.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
    }

    @Test
    public void test12846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12846");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig0.framework();
        boolean boolean33 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
    }

    @Test
    public void test12847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12847");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12);
        boolean boolean15 = atmosphereConfig0.supportSession;
        int int18 = atmosphereConfig0.getInitParameter("", 1);
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean21 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig0.setframework(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
    }

    @Test
    public void test12848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12848");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray7 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList8, atmosphereHandlerConfigArray7);
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList8;
        atmosphereConfig0.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test12849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12849");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.destroy();
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.shutdownHook(shutdownHook19);
        atmosphereConfig13.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        boolean boolean28 = atmosphereConfig23.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig23.getproperties();
        atmosphereConfig13.setproperties(strMap29);
        atmosphereConfig6.properties = strMap29;
        boolean boolean34 = atmosphereConfig6.getInitParameter("", false);
        org.slf4j.Logger logger35 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        atmosphereConfig6.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig39.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig39.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        atmosphereConfig43.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        int int50 = atmosphereConfig46.getInitParameter("hi!", (int) (short) 0);
        boolean boolean51 = atmosphereConfig46.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig46.shutdownHook(shutdownHook52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        int int58 = atmosphereConfig54.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = atmosphereConfig54.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig54.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig54.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig54.atmosphereHandlerConfig;
        atmosphereConfig46.atmosphereHandlerConfig = atmosphereHandlerConfigList62;
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(false);
        boolean boolean66 = atmosphereConfig46.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig46.shutdownHooks;
        atmosphereConfig43.shutdownHooks = shutdownHookList67;
        boolean boolean69 = atmosphereConfig43.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig6.populate(atmosphereConfig43);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig6.properties;
        org.slf4j.Logger logger72 = atmosphereConfig6.getlogger();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(logger35);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(atmosphereFramework59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(logger72);
    }

    @Test
    public void test12850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12850");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList3 = atmosphereConfig1.getshutdownHooks();
        boolean boolean6 = atmosphereConfig1.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig7.getshutdownHooks();
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        java.lang.String str13 = atmosphereConfig7.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig7.properties;
        atmosphereConfig1.setproperties(strMap14);
        atmosphereConfig0.properties = strMap14;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        int int25 = atmosphereConfig21.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig21.startUpHook = startupHookList28;
        org.slf4j.Logger logger31 = atmosphereConfig21.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig21.properties();
        atmosphereConfig0.setproperties(strMap35);
        atmosphereConfig0.destroy();
        org.slf4j.Logger logger38 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList2);
        org.junit.Assert.assertNotNull(shutdownHookList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(logger38);
    }

    @Test
    public void test12851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12851");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        boolean boolean4 = atmosphereConfig0.supportSession;
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        boolean boolean9 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig13.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig13.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig18.setframework(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
    }

    @Test
    public void test12852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12852");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig8.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig8.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.shutdownHook(shutdownHook23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig24.getproperties();
        atmosphereConfig0.properties = strMap25;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig0.framework;
        org.slf4j.Logger logger28 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(logger28);
    }

    @Test
    public void test12853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12853");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig10.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig10.getproperties();
        atmosphereConfig10.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.throwExceptionOnCloned;
        atmosphereConfig19.destroy();
        atmosphereConfig19.initComplete();
        java.lang.String str26 = atmosphereConfig19.getInitParameter("hi!", "");
        boolean boolean27 = atmosphereConfig19.isSessionTimeoutRemovalAllowed();
        java.lang.String str29 = atmosphereConfig19.getInitParameter("hi!");
        boolean boolean30 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig10.populate(atmosphereConfig19);
        atmosphereConfig31.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean35 = atmosphereConfig34.isThrowExceptionOnCloned();
        boolean boolean36 = atmosphereConfig34.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig34.getstartUpHook();
        atmosphereConfig31.startUpHook = startupHookList37;
        atmosphereConfig0.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig0.setframework(atmosphereFramework40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        boolean boolean44 = atmosphereConfig42.throwExceptionOnCloned;
        atmosphereConfig42.destroy();
        atmosphereConfig42.initComplete();
        java.lang.String str49 = atmosphereConfig42.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig54.startupHook(startupHook55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        atmosphereConfig56.setframework(atmosphereFramework57);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig56.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig56.shutdownHooks;
        atmosphereConfig42.shutdownHooks = shutdownHookList60;
        atmosphereConfig42.sessionTimeoutRemovalAllowed = false;
        boolean boolean64 = atmosphereConfig42.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig42.framework();
        atmosphereConfig42.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig42.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        org.slf4j.Logger logger70 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(shutdownHookList60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNotNull(logger70);
    }

    @Test
    public void test12854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12854");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig17.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList21);
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig24.throwExceptionOnCloned = false;
        atmosphereConfig24.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig24.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig24.initComplete();
        atmosphereConfig24.initComplete();
        atmosphereConfig24.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList35;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.shutdownHook(shutdownHook37);
        boolean boolean41 = atmosphereConfig38.getInitParameter("", false);
        atmosphereConfig38.throwExceptionOnCloned = true;
        atmosphereConfig38.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test12855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12855");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        boolean boolean10 = atmosphereConfig0.supportSession;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.destroy();
        atmosphereConfig13.initComplete();
        java.lang.String str20 = atmosphereConfig13.getInitParameter("hi!", "");
        boolean boolean21 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig27.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig27.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig31.startupHook(startupHook32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig33.setframework(atmosphereFramework34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig33.getproperties();
        atmosphereConfig22.setproperties(strMap36);
        atmosphereConfig13.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig13.framework;
        java.lang.String str41 = atmosphereConfig13.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList42;
        boolean boolean44 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test12856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12856");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        boolean boolean8 = atmosphereConfig6.throwExceptionOnCloned;
        atmosphereConfig6.destroy();
        atmosphereConfig6.initComplete();
        java.lang.String str13 = atmosphereConfig6.getInitParameter("hi!", "");
        boolean boolean14 = atmosphereConfig6.isSupportSession();
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig6.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig6.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.populate(atmosphereConfig6);
        boolean boolean20 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean21 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test12857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12857");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig6.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig6.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig6.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList16);
    }

    @Test
    public void test12858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12858");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig6.startupHook(startupHook11);
        boolean boolean13 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        atmosphereConfig18.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig18.getstartUpHook();
        atmosphereConfig12.startUpHook = startupHookList23;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig12.getframework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNull(atmosphereFramework25);
    }

    @Test
    public void test12859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12859");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.initComplete();
        java.lang.String str21 = atmosphereConfig14.getInitParameter("hi!", "");
        boolean boolean22 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        java.lang.String str24 = atmosphereConfig14.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26, shutdownHookArray25);
        atmosphereConfig14.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList26);
        boolean boolean29 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean32 = atmosphereConfig30.throwExceptionOnCloned;
        atmosphereConfig30.destroy();
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig30.shutdownHook(shutdownHook36);
        atmosphereConfig30.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        boolean boolean42 = atmosphereConfig40.throwExceptionOnCloned;
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        boolean boolean45 = atmosphereConfig40.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig40.getproperties();
        atmosphereConfig30.setproperties(strMap46);
        atmosphereConfig14.properties = strMap46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig49.properties;
        atmosphereConfig14.properties = strMap51;
        atmosphereConfig9.setproperties(strMap51);
        java.lang.String str55 = atmosphereConfig9.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig9.getproperties();
        atmosphereConfig0.setproperties(strMap56);
        java.lang.String str59 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig0.startupHook(startupHook60);
        boolean boolean62 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(shutdownHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test12860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12860");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        boolean boolean38 = atmosphereConfig37.sessionTimeoutRemovalAllowed;
        boolean boolean39 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        atmosphereConfig37.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        int int45 = atmosphereConfig41.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig41.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig41.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig49.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig49.shutdownHook(shutdownHook52);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig53.shutdownHook(shutdownHook54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig53.atmosphereHandlerConfig;
        boolean boolean57 = atmosphereConfig53.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig53.getshutdownHooks();
        atmosphereConfig41.setshutdownHooks(shutdownHookList58);
        atmosphereConfig41.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig41.getAtmosphereHandlerConfig();
        boolean boolean63 = atmosphereConfig41.supportSession;
        atmosphereConfig41.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig66.getAtmosphereHandlerConfig();
        int int70 = atmosphereConfig66.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig71.getAtmosphereHandlerConfig();
        atmosphereConfig71.throwExceptionOnCloned = true;
        boolean boolean75 = atmosphereConfig71.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig71.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig77.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig77.shutdownHook(shutdownHook80);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig81.startupHook(startupHook82);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = null;
        atmosphereConfig83.setframework(atmosphereFramework84);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig83.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList87 = atmosphereConfig83.getshutdownHooks();
        atmosphereConfig71.setshutdownHooks(shutdownHookList87);
        atmosphereConfig66.setshutdownHooks(shutdownHookList87);
        atmosphereConfig41.setshutdownHooks(shutdownHookList87);
        atmosphereConfig37.setshutdownHooks(shutdownHookList87);
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory94 = atmosphereConfig37.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(shutdownHookList87);
    }

    @Test
    public void test12861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12861");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig10.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15, startupHookArray14);
        atmosphereConfig10.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig6.framework();
        atmosphereConfig6.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        int int26 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig22.supportSession = false;
        atmosphereConfig22.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig22.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig6.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig22.setframework(atmosphereFramework33);
        atmosphereConfig22.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig22.getstartUpHook();
        atmosphereConfig22.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig22.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(startupHookList40);
    }

    @Test
    public void test12862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12862");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.setframework(atmosphereFramework14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean17 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test12863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12863");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig4.throwExceptionOnCloned;
        atmosphereConfig4.destroy();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig4.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        int int18 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig14.supportSession = false;
        atmosphereConfig14.setSupportSession(false);
        java.lang.String str24 = atmosphereConfig14.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig13.populate(atmosphereConfig14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        boolean boolean28 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.startupHook(startupHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig0.properties;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext32 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test12864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12864");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12);
        boolean boolean15 = atmosphereConfig0.supportSession;
        boolean boolean16 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        boolean boolean21 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test12865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12865");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        atmosphereConfig0.properties = strMap15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig27.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig27.startUpHook;
        atmosphereConfig17.setstartUpHook(startupHookList32);
        atmosphereConfig0.setstartUpHook(startupHookList32);
        boolean boolean35 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig36.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig36.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig40.shutdownHook(shutdownHook41);
        org.slf4j.Logger logger43 = atmosphereConfig42.getlogger();
        boolean boolean44 = atmosphereConfig42.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig47.throwExceptionOnCloned = true;
        boolean boolean51 = atmosphereConfig47.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig47.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.startupHook(startupHook58);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig59.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig47.properties;
        atmosphereConfig0.setproperties(strMap65);
        boolean boolean67 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList69 = atmosphereConfig68.getAtmosphereHandlerConfig();
        boolean boolean70 = atmosphereConfig68.throwExceptionOnCloned;
        atmosphereConfig68.destroy();
        atmosphereConfig68.initComplete();
        java.lang.String str75 = atmosphereConfig68.getInitParameter("hi!", "");
        boolean boolean76 = atmosphereConfig68.isSessionTimeoutRemovalAllowed();
        java.lang.String str78 = atmosphereConfig68.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray79 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList80, shutdownHookArray79);
        atmosphereConfig68.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList80);
        int int85 = atmosphereConfig68.getInitParameter("", (int) (short) -1);
        atmosphereConfig68.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = atmosphereConfig68.getproperties();
        atmosphereConfig0.setproperties(strMap88);
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList92 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(logger43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(shutdownHookArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(startupHookList92);
    }

    @Test
    public void test12866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12866");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        boolean boolean10 = atmosphereConfig8.throwExceptionOnCloned;
        atmosphereConfig8.destroy();
        atmosphereConfig8.initComplete();
        java.lang.String str15 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean16 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        java.lang.String str18 = atmosphereConfig8.getInitParameter("hi!");
        boolean boolean19 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig8.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig8.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig29.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean34 = atmosphereConfig29.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        int int39 = atmosphereConfig35.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig35.supportSession = false;
        boolean boolean42 = atmosphereConfig35.isSessionTimeoutRemovalAllowed();
        boolean boolean43 = atmosphereConfig35.throwExceptionOnCloned;
        java.lang.String str45 = atmosphereConfig35.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        atmosphereConfig46.throwExceptionOnCloned = true;
        boolean boolean50 = atmosphereConfig46.isSupportSession();
        boolean boolean51 = atmosphereConfig46.isSessionTimeoutRemovalAllowed();
        boolean boolean52 = atmosphereConfig46.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.shutdownHook(shutdownHook58);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig57.atmosphereHandlerConfig;
        boolean boolean61 = atmosphereConfig57.supportSession;
        boolean boolean62 = atmosphereConfig57.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig57.properties;
        atmosphereConfig46.setproperties(strMap63);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig46.startUpHook;
        atmosphereConfig35.setstartUpHook(startupHookList65);
        atmosphereConfig29.startUpHook = startupHookList65;
        atmosphereConfig0.startUpHook = startupHookList65;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig0.shutdownHook(shutdownHook69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap71 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
    }

    @Test
    public void test12867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12867");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig11.supportSession = false;
        boolean boolean18 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        atmosphereConfig11.destroy();
        boolean boolean20 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig11.setframework(atmosphereFramework22);
        atmosphereConfig11.throwExceptionOnCloned = true;
        atmosphereConfig11.sessionTimeoutRemovalAllowed = false;
        boolean boolean30 = atmosphereConfig11.getInitParameter("", false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test12868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12868");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig15.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList20, startupHookArray19);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList20);
        atmosphereConfig15.sessionTimeoutRemovalAllowed = true;
        boolean boolean25 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        java.lang.String str27 = atmosphereConfig15.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig15.framework = atmosphereFramework28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean31 = atmosphereConfig30.isThrowExceptionOnCloned();
        boolean boolean32 = atmosphereConfig30.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.startupHook(startupHook33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig15.shutdownHooks = shutdownHookList35;
        atmosphereConfig0.setshutdownHooks(shutdownHookList35);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        boolean boolean41 = atmosphereConfig39.throwExceptionOnCloned;
        atmosphereConfig39.destroy();
        atmosphereConfig39.initComplete();
        java.lang.String str46 = atmosphereConfig39.getInitParameter("hi!", "");
        boolean boolean47 = atmosphereConfig39.isSupportSession();
        atmosphereConfig39.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig39.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig39.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        int int56 = atmosphereConfig52.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = atmosphereConfig52.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig52.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig52.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig52.atmosphereHandlerConfig;
        atmosphereConfig39.atmosphereHandlerConfig = atmosphereHandlerConfigList60;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig39.properties;
        atmosphereConfig0.setproperties(strMap62);
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(atmosphereFramework57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test12869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12869");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = null;
        atmosphereConfig0.shutdownHooks = shutdownHookList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        int int21 = atmosphereConfig17.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig17.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig17.startUpHook = startupHookList24;
        org.slf4j.Logger logger27 = atmosphereConfig17.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig17.destroy();
        atmosphereConfig17.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig17.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList33;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(startupHookList35);
    }

    @Test
    public void test12870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12870");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        boolean boolean11 = atmosphereConfig6.isThrowExceptionOnCloned();
        atmosphereConfig6.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        atmosphereConfig6.properties = strMap14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig6.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList16);
    }

    @Test
    public void test12871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12871");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig12.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig12.setshutdownHooks(shutdownHookList19);
        boolean boolean21 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig12.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.populate(atmosphereConfig12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig12.getstartUpHook();
        boolean boolean25 = atmosphereConfig12.supportSession;
        atmosphereConfig12.destroy();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test12872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12872");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        atmosphereConfig0.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig12.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList14);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.supportSession = false;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        boolean boolean23 = atmosphereConfig21.throwExceptionOnCloned;
        atmosphereConfig21.destroy();
        atmosphereConfig21.initComplete();
        java.lang.String str28 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean29 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        java.lang.String str31 = atmosphereConfig21.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray32 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33, shutdownHookArray32);
        atmosphereConfig21.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList33);
        boolean boolean36 = atmosphereConfig21.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        boolean boolean39 = atmosphereConfig37.throwExceptionOnCloned;
        atmosphereConfig37.destroy();
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig37.shutdownHook(shutdownHook43);
        atmosphereConfig37.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        boolean boolean49 = atmosphereConfig47.throwExceptionOnCloned;
        atmosphereConfig47.setThrowExceptionOnCloned(false);
        boolean boolean52 = atmosphereConfig47.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig47.getproperties();
        atmosphereConfig37.setproperties(strMap53);
        atmosphereConfig21.properties = strMap53;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig56.properties;
        atmosphereConfig21.properties = strMap58;
        atmosphereConfig0.setproperties(strMap58);
        boolean boolean61 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(shutdownHookArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test12873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12873");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.supportSession = true;
        boolean boolean10 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test12874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12874");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test12875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12875");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig11.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig11.framework();
        atmosphereConfig11.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        boolean boolean25 = atmosphereConfig20.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig20.getproperties();
        atmosphereConfig11.setproperties(strMap26);
        atmosphereConfig0.setproperties(strMap26);
        org.slf4j.Logger logger29 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig34.getshutdownHooks();
        java.lang.String str39 = atmosphereConfig34.getInitParameter("hi!");
        boolean boolean42 = atmosphereConfig34.getInitParameter("hi!", true);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig34.properties;
        atmosphereConfig0.properties = strMap43;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test12876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12876");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.getshutdownHooks();
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.shutdownHook(shutdownHook25);
        int int29 = atmosphereConfig26.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig34.atmosphereHandlerConfig;
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        int int41 = atmosphereConfig26.getInitParameter("", (int) (byte) 10);
        boolean boolean42 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig47.startupHook(startupHook48);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig49.setframework(atmosphereFramework50);
        atmosphereConfig49.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig49.properties;
        boolean boolean55 = atmosphereConfig49.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        boolean boolean58 = atmosphereConfig56.throwExceptionOnCloned;
        atmosphereConfig56.destroy();
        atmosphereConfig56.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig56.shutdownHook(shutdownHook62);
        atmosphereConfig56.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig66.getAtmosphereHandlerConfig();
        boolean boolean68 = atmosphereConfig66.throwExceptionOnCloned;
        atmosphereConfig66.setThrowExceptionOnCloned(false);
        boolean boolean71 = atmosphereConfig66.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig66.getproperties();
        atmosphereConfig56.setproperties(strMap72);
        atmosphereConfig49.properties = strMap72;
        atmosphereConfig26.properties = strMap72;
        boolean boolean76 = atmosphereConfig26.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig26.getshutdownHooks();
        atmosphereConfig13.setshutdownHooks(shutdownHookList77);
        atmosphereConfig0.shutdownHooks = shutdownHookList77;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(shutdownHookList77);
    }

    @Test
    public void test12877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12877");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean8 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        int int13 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList16, startupHookArray15);
        atmosphereConfig9.startUpHook = startupHookList16;
        org.slf4j.Logger logger19 = atmosphereConfig9.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig9.destroy();
        atmosphereConfig9.supportSession = true;
        atmosphereConfig9.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        boolean boolean27 = atmosphereConfig25.throwExceptionOnCloned;
        atmosphereConfig25.destroy();
        atmosphereConfig25.initComplete();
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig25.framework();
        atmosphereConfig25.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig9.populate(atmosphereConfig25);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig25.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig37.throwExceptionOnCloned = true;
        boolean boolean41 = atmosphereConfig37.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig37.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig43.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig43.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig47.startupHook(startupHook48);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig49.setframework(atmosphereFramework50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig49.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList53);
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig37.getproperties();
        atmosphereConfig25.properties = strMap59;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig25.framework = atmosphereFramework61;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(shutdownHookList63);
    }

    @Test
    public void test12878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12878");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.throwExceptionOnCloned;
        atmosphereConfig16.destroy();
        atmosphereConfig16.initComplete();
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig16.framework();
        atmosphereConfig16.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.populate(atmosphereConfig16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig16.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig28.throwExceptionOnCloned = true;
        boolean boolean32 = atmosphereConfig28.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig28.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig28.setshutdownHooks(shutdownHookList44);
        atmosphereConfig28.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig28.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig28.getproperties();
        atmosphereConfig16.properties = strMap50;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig16.framework = atmosphereFramework52;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig16.shutdownHooks;
        int int57 = atmosphereConfig16.getInitParameter("hi!", 1);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig16.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
    }

    @Test
    public void test12879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12879");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.shutdownHooks;
        boolean boolean11 = atmosphereConfig6.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig6.getproperties();
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean16 = atmosphereConfig15.supportSession;
        java.lang.String str18 = atmosphereConfig15.getInitParameter("hi!");
        java.lang.String str20 = atmosphereConfig15.getInitParameter("hi!");
        atmosphereConfig15.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig6.populate(atmosphereConfig15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig15.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList24);
    }

    @Test
    public void test12880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12880");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        boolean boolean38 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test12881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12881");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        boolean boolean20 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig13.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties();
        atmosphereConfig13.properties = strMap28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig40.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig40.startUpHook;
        atmosphereConfig30.setstartUpHook(startupHookList45);
        atmosphereConfig13.setstartUpHook(startupHookList45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig6.populate(atmosphereConfig13);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig48.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig48.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig48.getframework();
        boolean boolean52 = atmosphereConfig48.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test12882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12882");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean3 = atmosphereConfig0.isSupportSession();
        boolean boolean4 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean5 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test12883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12883");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        int int26 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig22.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig22.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig22.getproperties();
        atmosphereConfig22.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig31.throwExceptionOnCloned = true;
        boolean boolean35 = atmosphereConfig31.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig31.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig43.setframework(atmosphereFramework44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig43.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig43.getshutdownHooks();
        atmosphereConfig31.setshutdownHooks(shutdownHookList47);
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig51.throwExceptionOnCloned;
        atmosphereConfig51.destroy();
        atmosphereConfig51.initComplete();
        java.lang.String str58 = atmosphereConfig51.getInitParameter("hi!", "");
        boolean boolean59 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        java.lang.String str61 = atmosphereConfig51.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63, shutdownHookArray62);
        atmosphereConfig51.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63);
        atmosphereConfig31.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig67.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig67.shutdownHook(shutdownHook70);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig71.shutdownHook(shutdownHook72);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig71.getstartUpHook();
        atmosphereConfig31.startUpHook = startupHookList74;
        atmosphereConfig22.setstartUpHook(startupHookList74);
        atmosphereConfig0.setstartUpHook(startupHookList74);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = null;
        atmosphereConfig0.framework = atmosphereFramework78;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = atmosphereConfig0.framework;
        java.lang.String str84 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook85 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig0.shutdownHook(shutdownHook85);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(shutdownHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(startupHookList74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertNull(atmosphereFramework81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig86);
    }

    @Test
    public void test12884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12884");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        boolean boolean9 = atmosphereConfig4.supportSession;
        java.lang.String str11 = atmosphereConfig4.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig4.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig17.throwExceptionOnCloned = true;
        boolean boolean21 = atmosphereConfig17.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig17.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig29.setframework(atmosphereFramework30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig29.getshutdownHooks();
        atmosphereConfig17.setshutdownHooks(shutdownHookList33);
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        boolean boolean39 = atmosphereConfig37.throwExceptionOnCloned;
        atmosphereConfig37.destroy();
        atmosphereConfig37.initComplete();
        java.lang.String str44 = atmosphereConfig37.getInitParameter("hi!", "");
        boolean boolean45 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        java.lang.String str47 = atmosphereConfig37.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49, shutdownHookArray48);
        atmosphereConfig37.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49);
        atmosphereConfig17.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList49);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig17.shutdownHook(shutdownHook53);
        boolean boolean55 = atmosphereConfig54.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig54.properties;
        atmosphereConfig54.destroy();
        boolean boolean58 = atmosphereConfig54.supportSession;
        java.lang.String str60 = atmosphereConfig54.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig61.getAtmosphereHandlerConfig();
        int int65 = atmosphereConfig61.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig61.supportSession = false;
        atmosphereConfig61.setSupportSession(false);
        boolean boolean70 = atmosphereConfig61.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig61.properties;
        org.slf4j.Logger logger72 = atmosphereConfig61.getlogger();
        boolean boolean73 = atmosphereConfig61.supportSession;
        atmosphereConfig61.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig61.getproperties();
        boolean boolean77 = atmosphereConfig61.supportSession;
        boolean boolean78 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig79.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = null;
        atmosphereConfig79.framework = atmosphereFramework81;
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = atmosphereConfig79.getproperties();
        atmosphereConfig61.setproperties(strMap83);
        atmosphereConfig54.properties = strMap83;
        atmosphereConfig4.setproperties(strMap83);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(shutdownHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(logger72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test12885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12885");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        boolean boolean30 = atmosphereConfig25.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig25.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        int int37 = atmosphereConfig33.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig33.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig33.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig33.atmosphereHandlerConfig;
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        org.slf4j.Logger logger44 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig0.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(logger44);
        org.junit.Assert.assertNotNull(shutdownHookList47);
    }

    @Test
    public void test12886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12886");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        atmosphereConfig6.supportSession = false;
        atmosphereConfig6.destroy();
        boolean boolean16 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test12887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12887");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        boolean boolean14 = atmosphereConfig9.getInitParameter("", true);
        atmosphereConfig9.initComplete();
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig29.setframework(atmosphereFramework30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.getproperties();
        atmosphereConfig18.setproperties(strMap32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig6.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration40 = atmosphereConfig6.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
    }

    @Test
    public void test12888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12888");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig17.initComplete();
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig17);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig17.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig17.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig17.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig17.shutdownHook(shutdownHook32);
        atmosphereConfig33.setThrowExceptionOnCloned(false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = atmosphereConfig33.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
    }

    @Test
    public void test12889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12889");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        atmosphereConfig0.setproperties(strMap18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        int int25 = atmosphereConfig21.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig21.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig21.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties;
        atmosphereConfig21.setproperties(strMap31);
        boolean boolean35 = atmosphereConfig21.getInitParameter("hi!", true);
        atmosphereConfig21.setSupportSession(true);
        boolean boolean40 = atmosphereConfig21.getInitParameter("hi!", true);
        boolean boolean41 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.shutdownHook(shutdownHook47);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig46.getstartUpHook();
        atmosphereConfig46.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig46.startupHook(startupHook51);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList53;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig21.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig56.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig56.shutdownHook(shutdownHook59);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig60.shutdownHook(shutdownHook61);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig60.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig60.getAtmosphereHandlerConfig();
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig0.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        atmosphereConfig0.setframework(atmosphereFramework67);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str72 = atmosphereConfig0.getInitParameter("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory73 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test12890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12890");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList2 = null;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList2;
        int int6 = atmosphereConfig0.getInitParameter("", (-1));
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework;
        org.slf4j.Logger logger12 = atmosphereConfig0.getlogger();
        int int15 = atmosphereConfig0.getInitParameter("hi!", 32);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
    }

    @Test
    public void test12891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12891");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig7.throwExceptionOnCloned = true;
        atmosphereConfig7.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig12.throwExceptionOnCloned = true;
        boolean boolean16 = atmosphereConfig12.isSupportSession();
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        boolean boolean18 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig23.atmosphereHandlerConfig;
        boolean boolean27 = atmosphereConfig23.supportSession;
        boolean boolean28 = atmosphereConfig23.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig23.properties;
        atmosphereConfig12.setproperties(strMap29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig12.startUpHook;
        atmosphereConfig7.startUpHook = startupHookList31;
        boolean boolean33 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider34 = atmosphereConfig7.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test12892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12892");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        java.lang.String str17 = atmosphereConfig10.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig10.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig4.framework = atmosphereFramework20;
        atmosphereConfig4.destroy();
        java.lang.String str25 = atmosphereConfig4.getInitParameter("hi!", "hi!");
        boolean boolean26 = atmosphereConfig4.isSupportSession();
        boolean boolean27 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test12893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12893");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        int int25 = atmosphereConfig21.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig21.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig21.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig21.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig21.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.startupHook(startupHook36);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig37.setframework(atmosphereFramework38);
        atmosphereConfig37.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig37.properties;
        boolean boolean43 = atmosphereConfig37.throwExceptionOnCloned;
        boolean boolean46 = atmosphereConfig37.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig37.shutdownHooks;
        atmosphereConfig37.sessionTimeoutRemovalAllowed = true;
        java.lang.String str52 = atmosphereConfig37.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig37.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        int int58 = atmosphereConfig54.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig54.supportSession = false;
        boolean boolean61 = atmosphereConfig54.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig62.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig62.getshutdownHooks();
        atmosphereConfig54.setshutdownHooks(shutdownHookList64);
        atmosphereConfig37.setshutdownHooks(shutdownHookList64);
        atmosphereConfig21.shutdownHooks = shutdownHookList64;
        boolean boolean68 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig0.populate(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
    }

    @Test
    public void test12894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12894");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig6.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory13 = atmosphereConfig6.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
    }

    @Test
    public void test12895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12895");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        boolean boolean15 = atmosphereConfig10.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.getshutdownHooks();
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        java.lang.String str22 = atmosphereConfig16.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.properties;
        atmosphereConfig10.setproperties(strMap23);
        atmosphereConfig9.properties = strMap23;
        atmosphereConfig9.setSupportSession(false);
        atmosphereConfig9.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig9.shutdownHooks = shutdownHookList32;
        atmosphereConfig0.setshutdownHooks(shutdownHookList32);
        boolean boolean35 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        int int40 = atmosphereConfig36.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig36.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray42 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList43, startupHookArray42);
        atmosphereConfig36.startUpHook = startupHookList43;
        org.slf4j.Logger logger46 = atmosphereConfig36.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig36.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig36.startupHook(startupHook48);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        boolean boolean53 = atmosphereConfig51.throwExceptionOnCloned;
        atmosphereConfig51.destroy();
        atmosphereConfig51.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig51.shutdownHook(shutdownHook57);
        atmosphereConfig51.supportSession = true;
        atmosphereConfig51.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig51.getproperties();
        atmosphereConfig49.setproperties(strMap63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig0.populate(atmosphereConfig49);
        boolean boolean66 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(startupHookArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(logger46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test12896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12896");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        boolean boolean1 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.startupHook(startupHook2);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(startupHookList8);
    }

    @Test
    public void test12897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12897");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        atmosphereConfig23.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig33.shutdownHook(shutdownHook34);
        org.slf4j.Logger logger36 = atmosphereConfig35.getlogger();
        boolean boolean37 = atmosphereConfig35.isSupportSession();
        boolean boolean38 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig39.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig23.startUpHook = startupHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig23.setshutdownHooks(shutdownHookList51);
        atmosphereConfig0.shutdownHooks = shutdownHookList51;
        boolean boolean54 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean55 = atmosphereConfig0.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory56 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test12898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12898");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        boolean boolean17 = atmosphereConfig0.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.properties;
        boolean boolean21 = atmosphereConfig0.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNull(atmosphereFramework23);
    }

    @Test
    public void test12899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12899");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test12900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12900");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig10.getshutdownHooks();
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig10.properties;
        atmosphereConfig10.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig10.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig10.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig10.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig9.populate(atmosphereConfig24);
        boolean boolean26 = atmosphereConfig9.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test12901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12901");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        boolean boolean7 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig4.getframework();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig4.setframework(atmosphereFramework11);
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        boolean boolean14 = atmosphereConfig4.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig4.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
    }

    @Test
    public void test12902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12902");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        boolean boolean30 = atmosphereConfig25.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig25.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        int int37 = atmosphereConfig33.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig33.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig33.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig33.atmosphereHandlerConfig;
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        int int48 = atmosphereConfig44.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig44.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray50 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList51, startupHookArray50);
        atmosphereConfig44.startUpHook = startupHookList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig54.throwExceptionOnCloned = true;
        boolean boolean58 = atmosphereConfig54.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig54.atmosphereHandlerConfig;
        atmosphereConfig44.atmosphereHandlerConfig = atmosphereHandlerConfigList59;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig44.properties();
        atmosphereConfig0.setproperties(strMap61);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig0.properties;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean66 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(startupHookArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test12903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12903");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = null;
        atmosphereConfig0.setframework(atmosphereFramework1);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean7 = atmosphereConfig0.getInitParameter("", true);
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig12.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig16.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList23, startupHookArray22);
        atmosphereConfig16.startUpHook = startupHookList23;
        atmosphereConfig12.startUpHook = startupHookList23;
        boolean boolean27 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig12.framework = atmosphereFramework28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig12.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig0.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(startupHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test12904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12904");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        atmosphereConfig0.setproperties(strMap10);
        boolean boolean14 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.setSupportSession(true);
        boolean boolean19 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        int int25 = atmosphereConfig21.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig21.supportSession = false;
        atmosphereConfig21.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig21.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig21.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig21.shutdownHook(shutdownHook32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig21.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig21.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
    }

    @Test
    public void test12905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12905");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig7.throwExceptionOnCloned;
        atmosphereConfig7.destroy();
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig7.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig7.framework = atmosphereFramework14;
        boolean boolean18 = atmosphereConfig7.getInitParameter("hi!", true);
        atmosphereConfig7.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig0.shutdownHooks = shutdownHookList24;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.shutdownHook(shutdownHook27);
        atmosphereConfig28.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        int int35 = atmosphereConfig31.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig31.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig31.framework();
        atmosphereConfig31.initComplete();
        atmosphereConfig31.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        boolean boolean43 = atmosphereConfig41.supportSession;
        org.slf4j.Logger logger44 = atmosphereConfig41.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig45.setshutdownHooks(shutdownHookList52);
        boolean boolean54 = atmosphereConfig45.isSessionTimeoutRemovalAllowed();
        atmosphereConfig45.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig45.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig41.populate(atmosphereConfig45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig41.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig41.setframework(atmosphereFramework61);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig41.getstartUpHook();
        atmosphereConfig31.startUpHook = startupHookList63;
        atmosphereConfig28.startUpHook = startupHookList63;
        atmosphereConfig28.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(logger44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertNotNull(startupHookList63);
    }

    @Test
    public void test12906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12906");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        boolean boolean17 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean18 = atmosphereConfig0.supportSession;
        atmosphereConfig0.supportSession = true;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test12907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12907");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig4.initComplete();
        int int11 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 1);
        boolean boolean12 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig13.getshutdownHooks();
        boolean boolean18 = atmosphereConfig13.getInitParameter("", true);
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig20.framework = atmosphereFramework25;
        int int29 = atmosphereConfig20.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig20.getstartUpHook();
        atmosphereConfig13.setstartUpHook(startupHookList30);
        atmosphereConfig4.setstartUpHook(startupHookList30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.slf4j.Logger logger37 = atmosphereConfig34.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig38.getshutdownHooks();
        atmosphereConfig38.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig43.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig43.getshutdownHooks();
        atmosphereConfig38.setshutdownHooks(shutdownHookList45);
        boolean boolean47 = atmosphereConfig38.isSessionTimeoutRemovalAllowed();
        atmosphereConfig38.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig38.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig34.populate(atmosphereConfig38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig53.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig53.shutdownHook(shutdownHook56);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig57.startupHook(startupHook58);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.setframework(atmosphereFramework60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig52.populate(atmosphereConfig59);
        atmosphereConfig59.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig4.populate(atmosphereConfig59);
        atmosphereConfig66.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 35 + "'", int29 == 35);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(logger37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
    }

    @Test
    public void test12908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12908");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig16.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig16.startupHook(startupHook24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig16.startUpHook;
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.destroy();
        atmosphereConfig29.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig29.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig36.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        int int43 = atmosphereConfig39.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig39.supportSession = false;
        atmosphereConfig39.setSupportSession(false);
        java.lang.String str49 = atmosphereConfig39.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig38.populate(atmosphereConfig39);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = null;
        atmosphereConfig39.setstartUpHook(startupHookList51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        boolean boolean55 = atmosphereConfig53.throwExceptionOnCloned;
        atmosphereConfig53.destroy();
        atmosphereConfig53.initComplete();
        java.lang.String str60 = atmosphereConfig53.getInitParameter("hi!", "");
        boolean boolean61 = atmosphereConfig53.isSessionTimeoutRemovalAllowed();
        java.lang.String str63 = atmosphereConfig53.getInitParameter("hi!");
        boolean boolean64 = atmosphereConfig53.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig53.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig53.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig53.getshutdownHooks();
        atmosphereConfig39.setshutdownHooks(shutdownHookList67);
        atmosphereConfig16.shutdownHooks = shutdownHookList67;
        atmosphereConfig13.setshutdownHooks(shutdownHookList67);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig13.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertNotNull(shutdownHookList66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test12909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12909");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.shutdownHook(shutdownHook11);
        org.slf4j.Logger logger13 = atmosphereConfig12.getlogger();
        boolean boolean14 = atmosphereConfig12.isSupportSession();
        boolean boolean15 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig16.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21, startupHookArray20);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig12.framework();
        java.lang.String str27 = atmosphereConfig12.getInitParameter("");
        atmosphereConfig12.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig36.setframework(atmosphereFramework37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig36.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig36.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig41.getAtmosphereHandlerConfig();
        int int45 = atmosphereConfig41.getInitParameter("hi!", (int) (short) 0);
        boolean boolean46 = atmosphereConfig41.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        int int53 = atmosphereConfig49.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig49.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig49.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig49.atmosphereHandlerConfig;
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList57;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.shutdownHook(shutdownHook62);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig63.shutdownHook(shutdownHook64);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig65.getproperties();
        atmosphereConfig41.properties = strMap66;
        atmosphereConfig36.setproperties(strMap66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig69.getAtmosphereHandlerConfig();
        atmosphereConfig69.throwExceptionOnCloned = true;
        boolean boolean73 = atmosphereConfig69.isSupportSession();
        boolean boolean74 = atmosphereConfig69.isSessionTimeoutRemovalAllowed();
        boolean boolean75 = atmosphereConfig69.sessionTimeoutRemovalAllowed;
        boolean boolean76 = atmosphereConfig69.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig69.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig69.getstartUpHook();
        atmosphereConfig36.startUpHook = startupHookList78;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList80 = atmosphereConfig36.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList80);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory82 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(startupHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertNotNull(startupHookList80);
    }

    @Test
    public void test12910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12910");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig14.getlogger();
        boolean boolean16 = atmosphereConfig14.isSupportSession();
        boolean boolean17 = atmosphereConfig14.isThrowExceptionOnCloned();
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig14.properties();
        atmosphereConfig14.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig14);
        atmosphereConfig21.setThrowExceptionOnCloned(false);
        atmosphereConfig21.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig21.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig21.framework();
        java.lang.String str30 = atmosphereConfig21.getInitParameter("", "hi!");
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test12911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12911");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test12912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12912");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        int int22 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig18.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig18.startUpHook = startupHookList25;
        org.slf4j.Logger logger28 = atmosphereConfig18.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.destroy();
        atmosphereConfig18.supportSession = true;
        atmosphereConfig18.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        boolean boolean36 = atmosphereConfig34.throwExceptionOnCloned;
        atmosphereConfig34.destroy();
        atmosphereConfig34.initComplete();
        atmosphereConfig34.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig34.framework();
        atmosphereConfig34.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig18.populate(atmosphereConfig34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig34.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        atmosphereConfig46.throwExceptionOnCloned = true;
        boolean boolean50 = atmosphereConfig46.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig46.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig52.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig52.shutdownHook(shutdownHook55);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig56.startupHook(startupHook57);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        atmosphereConfig58.setframework(atmosphereFramework59);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig58.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig58.getshutdownHooks();
        atmosphereConfig46.setshutdownHooks(shutdownHookList62);
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig46.getproperties();
        atmosphereConfig34.properties = strMap68;
        org.slf4j.Logger logger70 = atmosphereConfig34.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig34.getproperties();
        atmosphereConfig0.setproperties(strMap71);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig0.shutdownHook(shutdownHook73);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig75.getAtmosphereHandlerConfig();
        int int79 = atmosphereConfig75.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig75.supportSession = false;
        atmosphereConfig75.setSupportSession(false);
        java.lang.String str85 = atmosphereConfig75.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig75.getproperties();
        atmosphereConfig74.properties = strMap86;
        boolean boolean88 = atmosphereConfig74.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = atmosphereConfig74.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = atmosphereConfig74.properties();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext91 = atmosphereConfig74.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(shutdownHookList62);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(logger70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(atmosphereFramework89);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test12913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12913");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig8.supportSession = false;
        boolean boolean15 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        atmosphereConfig8.destroy();
        java.lang.String str18 = atmosphereConfig8.getInitParameter("");
        atmosphereConfig8.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig8.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList22;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig0.getshutdownHooks();
        boolean boolean27 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test12914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12914");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.throwExceptionOnCloned;
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        boolean boolean18 = atmosphereConfig13.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig13.framework = atmosphereFramework19;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig13.isThrowExceptionOnCloned();
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str26 = atmosphereConfig13.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig13.startupHook(startupHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig13.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig13.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList30;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(startupHookList30);
    }

    @Test
    public void test12915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12915");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties;
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(logger13);
    }

    @Test
    public void test12916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12916");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig7.getproperties();
        boolean boolean9 = atmosphereConfig7.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig7.properties();
        boolean boolean13 = atmosphereConfig7.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig14.throwExceptionOnCloned;
        atmosphereConfig14.destroy();
        atmosphereConfig14.initComplete();
        java.lang.String str21 = atmosphereConfig14.getInitParameter("hi!", "");
        boolean boolean22 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        boolean boolean23 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig14.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig14.setframework(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig14.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig14.properties();
        atmosphereConfig7.properties = strMap29;
        int int33 = atmosphereConfig7.getInitParameter("", (int) (short) 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
    }

    @Test
    public void test12917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12917");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.startupHook(startupHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig9.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(startupHookList12);
    }

    @Test
    public void test12918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12918");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test12919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12919");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        int int12 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        boolean boolean13 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig8.framework = atmosphereFramework15;
        boolean boolean17 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig8.properties;
        boolean boolean19 = atmosphereConfig8.throwExceptionOnCloned;
        java.lang.String str21 = atmosphereConfig8.getInitParameter("hi!");
        atmosphereConfig8.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test12920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12920");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.destroy();
        java.lang.String str10 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean17 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean18 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean19 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean22 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test12921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12921");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext16 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
    }

    @Test
    public void test12922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12922");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        int int16 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig12.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig12.startUpHook = startupHookList19;
        org.slf4j.Logger logger22 = atmosphereConfig12.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig12.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig12.startupHook(startupHook24);
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str29 = atmosphereConfig25.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig25.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList30;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean34 = atmosphereConfig0.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider35 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test12923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12923");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        java.lang.String str17 = atmosphereConfig10.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig10.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        int int24 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig20.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig20.framework();
        org.slf4j.Logger logger28 = atmosphereConfig20.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig4.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig4.shutdownHook(shutdownHook31);
        atmosphereConfig32.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig32.framework = atmosphereFramework35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        boolean boolean39 = atmosphereConfig37.throwExceptionOnCloned;
        atmosphereConfig37.destroy();
        atmosphereConfig37.initComplete();
        java.lang.String str44 = atmosphereConfig37.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        int int49 = atmosphereConfig45.getInitParameter("hi!", (int) (short) 0);
        boolean boolean50 = atmosphereConfig45.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig37.populate(atmosphereConfig45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig45.framework = atmosphereFramework52;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        int int58 = atmosphereConfig54.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig59.getAtmosphereHandlerConfig();
        atmosphereConfig59.throwExceptionOnCloned = true;
        boolean boolean63 = atmosphereConfig59.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig59.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig65.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig65.shutdownHook(shutdownHook68);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig69.startupHook(startupHook70);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = null;
        atmosphereConfig71.setframework(atmosphereFramework72);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig71.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig71.getshutdownHooks();
        atmosphereConfig59.setshutdownHooks(shutdownHookList75);
        atmosphereConfig54.setshutdownHooks(shutdownHookList75);
        atmosphereConfig45.shutdownHooks = shutdownHookList75;
        atmosphereConfig32.shutdownHooks = shutdownHookList75;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(shutdownHookList75);
    }

    @Test
    public void test12924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12924");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework;
        boolean boolean22 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test12925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12925");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        atmosphereConfig0.supportSession = false;
        boolean boolean27 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        boolean boolean30 = atmosphereConfig28.throwExceptionOnCloned;
        atmosphereConfig28.destroy();
        atmosphereConfig28.initComplete();
        java.lang.String str35 = atmosphereConfig28.getInitParameter("hi!", "");
        boolean boolean36 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig37.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig42.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig46.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig48.setframework(atmosphereFramework49);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig48.getproperties();
        atmosphereConfig37.setproperties(strMap51);
        atmosphereConfig28.setproperties(strMap51);
        java.lang.String str56 = atmosphereConfig28.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig0.populate(atmosphereConfig28);
        java.lang.String str59 = atmosphereConfig57.getInitParameter("hi!");
        boolean boolean60 = atmosphereConfig57.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig61.getAtmosphereHandlerConfig();
        boolean boolean63 = atmosphereConfig61.throwExceptionOnCloned;
        atmosphereConfig61.setThrowExceptionOnCloned(false);
        atmosphereConfig61.setThrowExceptionOnCloned(true);
        boolean boolean68 = atmosphereConfig61.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig61.startupHook(startupHook69);
        boolean boolean71 = atmosphereConfig70.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig57.populate(atmosphereConfig70);
        atmosphereConfig72.destroy();
        atmosphereConfig72.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
    }

    @Test
    public void test12926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12926");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        boolean boolean7 = atmosphereConfig0.throwExceptionOnCloned;
        boolean boolean10 = atmosphereConfig0.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test12927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12927");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        boolean boolean10 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig5.atmosphereHandlerConfig;
        atmosphereConfig5.setSupportSession(false);
        boolean boolean16 = atmosphereConfig5.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test12928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12928");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        atmosphereConfig6.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig6.properties;
        boolean boolean12 = atmosphereConfig6.throwExceptionOnCloned;
        boolean boolean15 = atmosphereConfig6.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        boolean boolean19 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test12929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12929");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        atmosphereConfig8.throwExceptionOnCloned = true;
        boolean boolean12 = atmosphereConfig8.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig8.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig20.setframework(atmosphereFramework21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig8.setshutdownHooks(shutdownHookList24);
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig28.getAtmosphereHandlerConfig();
        boolean boolean30 = atmosphereConfig28.throwExceptionOnCloned;
        atmosphereConfig28.destroy();
        atmosphereConfig28.initComplete();
        java.lang.String str35 = atmosphereConfig28.getInitParameter("hi!", "");
        boolean boolean36 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        java.lang.String str38 = atmosphereConfig28.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40, shutdownHookArray39);
        atmosphereConfig28.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40);
        atmosphereConfig8.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList40);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig8.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig8.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig8.framework;
        atmosphereConfig8.throwExceptionOnCloned = false;
        boolean boolean51 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig52.getshutdownHooks();
        boolean boolean57 = atmosphereConfig52.getInitParameter("", true);
        atmosphereConfig52.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig52.shutdownHook(shutdownHook59);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig52.properties();
        atmosphereConfig8.properties = strMap61;
        atmosphereConfig8.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig0.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig8.shutdownHook(shutdownHook66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(shutdownHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
    }

    @Test
    public void test12930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12930");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
    }

    @Test
    public void test12931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12931");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory12 = atmosphereConfig11.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
    }

    @Test
    public void test12932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12932");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.shutdownHook(shutdownHook11);
        org.slf4j.Logger logger13 = atmosphereConfig12.getlogger();
        boolean boolean14 = atmosphereConfig12.isSupportSession();
        boolean boolean15 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig16.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21, startupHookArray20);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig12.framework();
        java.lang.String str27 = atmosphereConfig12.getInitParameter("");
        atmosphereConfig12.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig12);
        boolean boolean30 = atmosphereConfig29.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(startupHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test12933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12933");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList32);
        boolean boolean34 = atmosphereConfig4.throwExceptionOnCloned;
        boolean boolean35 = atmosphereConfig4.supportSession;
        int int38 = atmosphereConfig4.getInitParameter("hi!", (int) ' ');
        boolean boolean39 = atmosphereConfig4.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 32 + "'", int38 == 32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test12934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12934");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig3.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig3.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig19.getlogger();
        boolean boolean21 = atmosphereConfig19.isSupportSession();
        boolean boolean22 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig23.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        atmosphereConfig7.startUpHook = startupHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig42.getshutdownHooks();
        atmosphereConfig37.setshutdownHooks(shutdownHookList44);
        atmosphereConfig7.shutdownHooks = shutdownHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        int int51 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig47.supportSession = false;
        boolean boolean54 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig55.getshutdownHooks();
        atmosphereConfig47.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig59.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig59.properties();
        atmosphereConfig47.properties = strMap62;
        atmosphereConfig7.setproperties(strMap62);
        atmosphereConfig0.properties = strMap62;
        boolean boolean68 = atmosphereConfig0.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig0.properties;
        boolean boolean70 = atmosphereConfig0.isSupportSession();
        org.slf4j.Logger logger71 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig72.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig72.shutdownHook(shutdownHook75);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig76.shutdownHook(shutdownHook77);
        org.slf4j.Logger logger79 = atmosphereConfig78.getlogger();
        boolean boolean80 = atmosphereConfig78.isSupportSession();
        boolean boolean81 = atmosphereConfig78.isThrowExceptionOnCloned();
        org.slf4j.Logger logger82 = atmosphereConfig78.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = atmosphereConfig78.properties();
        atmosphereConfig78.initComplete();
        boolean boolean85 = atmosphereConfig78.sessionTimeoutRemovalAllowed;
        atmosphereConfig78.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList87 = atmosphereConfig78.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList88 = atmosphereConfig78.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList88;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook90 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig91 = atmosphereConfig0.shutdownHook(shutdownHook90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration92 = atmosphereConfig91.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(logger71);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(logger79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(logger82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(shutdownHookList87);
        org.junit.Assert.assertNotNull(shutdownHookList88);
        org.junit.Assert.assertNotNull(atmosphereConfig91);
    }

    @Test
    public void test12935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12935");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig5.throwExceptionOnCloned = true;
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig11.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig17.setframework(atmosphereFramework18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList21);
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig0.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.getshutdownHooks();
        boolean boolean32 = atmosphereConfig27.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig33.getshutdownHooks();
        atmosphereConfig33.setThrowExceptionOnCloned(false);
        java.lang.String str39 = atmosphereConfig33.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.properties;
        atmosphereConfig27.setproperties(strMap40);
        atmosphereConfig26.properties = strMap40;
        atmosphereConfig25.properties = strMap40;
        atmosphereConfig25.throwExceptionOnCloned = false;
        boolean boolean46 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test12936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12936");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList7, startupHookArray6);
        atmosphereConfig0.startUpHook = startupHookList7;
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.framework = atmosphereFramework14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int20 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig16.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig16.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig16.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties;
        atmosphereConfig16.setproperties(strMap26);
        boolean boolean30 = atmosphereConfig16.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig31.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.startupHook(startupHook36);
        boolean boolean38 = atmosphereConfig35.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig35.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        boolean boolean42 = atmosphereConfig40.throwExceptionOnCloned;
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        atmosphereConfig40.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig35.setshutdownHooks(shutdownHookList47);
        atmosphereConfig16.shutdownHooks = shutdownHookList47;
        atmosphereConfig0.shutdownHooks = shutdownHookList47;
        atmosphereConfig0.destroy();
        boolean boolean54 = atmosphereConfig0.getInitParameter("hi!", false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test12937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12937");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        boolean boolean5 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        atmosphereConfig11.initComplete();
        java.lang.String str18 = atmosphereConfig11.getInitParameter("hi!", "");
        boolean boolean19 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        boolean boolean22 = atmosphereConfig11.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig23.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.getproperties();
        atmosphereConfig11.setproperties(strMap26);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig11.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig11.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList29;
        boolean boolean31 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
    }

    @Test
    public void test12938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12938");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        java.lang.String str12 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean13 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
    }

    @Test
    public void test12939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12939");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        boolean boolean10 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig11.getframework();
        atmosphereConfig11.supportSession = true;
        atmosphereConfig11.setSupportSession(true);
        boolean boolean19 = atmosphereConfig11.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig20.throwExceptionOnCloned = true;
        boolean boolean24 = atmosphereConfig20.isSupportSession();
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        boolean boolean26 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        boolean boolean27 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig20.shutdownHooks;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig20.atmosphereHandlerConfig;
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig11.framework = atmosphereFramework31;
        boolean boolean33 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        atmosphereConfig11.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        int int42 = atmosphereConfig38.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig38.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig38.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig46.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties;
        atmosphereConfig38.setproperties(strMap48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig50.startUpHook;
        atmosphereConfig38.setstartUpHook(startupHookList52);
        atmosphereConfig38.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig38.startupHook(startupHook56);
        java.lang.String str60 = atmosphereConfig38.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig38.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(startupHookList61);
    }

    @Test
    public void test12940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12940");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test12941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12941");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig9.throwExceptionOnCloned;
        atmosphereConfig9.destroy();
        atmosphereConfig9.initComplete();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig9.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        java.lang.String str20 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.slf4j.Logger logger28 = atmosphereConfig25.getlogger();
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig25.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList32;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig0.framework();
        atmosphereConfig0.setSupportSession(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(atmosphereFramework35);
    }

    @Test
    public void test12942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12942");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig20.setframework(atmosphereFramework21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.getproperties();
        atmosphereConfig9.setproperties(strMap23);
        atmosphereConfig0.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig0.framework;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean32 = atmosphereConfig30.throwExceptionOnCloned;
        atmosphereConfig30.destroy();
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig30.shutdownHook(shutdownHook36);
        atmosphereConfig30.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig30.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig30.framework = atmosphereFramework40;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig30.supportSession = false;
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig0.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig47.framework = atmosphereFramework48;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
    }

    @Test
    public void test12943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12943");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str26 = atmosphereConfig20.getInitParameter("");
        atmosphereConfig20.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig20.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig20.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig18.populate(atmosphereConfig20);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test12944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12944");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean16 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig17.throwExceptionOnCloned;
        atmosphereConfig17.destroy();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig17.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30, startupHookArray29);
        atmosphereConfig25.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30);
        atmosphereConfig17.startUpHook = startupHookList30;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig17.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig0.populate(atmosphereConfig17);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster36 = atmosphereConfig17.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
    }

    @Test
    public void test12945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12945");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.framework = atmosphereFramework6;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.startupHook(startupHook16);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider18 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test12946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12946");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig5.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig5.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig11.getproperties();
        atmosphereConfig0.setproperties(strMap14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig17.initComplete();
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig29.getAtmosphereHandlerConfig();
        boolean boolean31 = atmosphereConfig29.throwExceptionOnCloned;
        atmosphereConfig29.destroy();
        atmosphereConfig29.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig29.framework = atmosphereFramework34;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig29.framework = atmosphereFramework36;
        boolean boolean40 = atmosphereConfig29.getInitParameter("hi!", true);
        atmosphereConfig29.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig29.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig29.getproperties();
        atmosphereConfig29.supportSession = false;
        java.lang.String str49 = atmosphereConfig29.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig50);
    }

    @Test
    public void test12947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12947");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.slf4j.Logger logger5 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig10.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        boolean boolean19 = atmosphereConfig17.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.properties();
        atmosphereConfig0.properties = strMap20;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(logger5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
    }

    @Test
    public void test12948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12948");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig14.atmosphereHandlerConfig;
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        int int21 = atmosphereConfig6.getInitParameter("", (int) (byte) 10);
        atmosphereConfig6.throwExceptionOnCloned = false;
        boolean boolean24 = atmosphereConfig6.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig6.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test12949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12949");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig21.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig21.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig0.framework;
        atmosphereConfig0.supportSession = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test12950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12950");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        atmosphereConfig0.setproperties(strMap15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig20.initComplete();
        atmosphereConfig20.sessionTimeoutRemovalAllowed = true;
        boolean boolean31 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        boolean boolean32 = atmosphereConfig20.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig20.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig39.shutdownHook(shutdownHook40);
        atmosphereConfig41.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig41.startupHook(startupHook43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig44.properties;
        atmosphereConfig20.properties = strMap45;
        atmosphereConfig0.properties = strMap45;
        boolean boolean48 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean49 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test12951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12951");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig4.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig4.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.throwExceptionOnCloned;
        atmosphereConfig10.destroy();
        atmosphereConfig10.initComplete();
        java.lang.String str17 = atmosphereConfig10.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig10.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig4.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig4.startupHook(startupHook22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig23.properties();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test12952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12952");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray4 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5, startupHookArray4);
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig13.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig13.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.setframework(atmosphereFramework20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.getproperties();
        atmosphereConfig8.setproperties(strMap22);
        atmosphereConfig0.setproperties(strMap22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        int int29 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        boolean boolean30 = atmosphereConfig25.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig25.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        int int37 = atmosphereConfig33.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig33.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig33.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig33.atmosphereHandlerConfig;
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig0.startupHook(startupHook44);
        boolean boolean46 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(startupHookArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test12953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12953");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        int int8 = atmosphereConfig4.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig4.startUpHook = startupHookList11;
        atmosphereConfig0.startUpHook = startupHookList11;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        boolean boolean18 = atmosphereConfig17.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig17.getframework();
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory22 = atmosphereConfig17.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
    }

    @Test
    public void test12954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12954");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig9.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig20.setframework(atmosphereFramework21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.getproperties();
        atmosphereConfig9.setproperties(strMap23);
        atmosphereConfig0.setproperties(strMap23);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig0.getshutdownHooks();
        boolean boolean30 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        boolean boolean33 = atmosphereConfig31.throwExceptionOnCloned;
        atmosphereConfig31.destroy();
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig31.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig39.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44);
        atmosphereConfig31.startUpHook = startupHookList44;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig31.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig31.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList49);
        boolean boolean51 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(startupHookList53);
    }

    @Test
    public void test12955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12955");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig12.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig12.setshutdownHooks(shutdownHookList19);
        boolean boolean21 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig12.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig23.getAtmosphereHandlerConfig();
        atmosphereConfig23.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig23.destroy();
        boolean boolean31 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig23.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig23.atmosphereHandlerConfig;
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig35.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig39.shutdownHook(shutdownHook40);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig39.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig39.startupHook(startupHook43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig39.startUpHook;
        atmosphereConfig12.startUpHook = startupHookList45;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig12.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig4.populate(atmosphereConfig48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig48.setframework(atmosphereFramework51);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test12956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12956");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean7 = atmosphereConfig5.throwExceptionOnCloned;
        atmosphereConfig5.destroy();
        atmosphereConfig5.initComplete();
        java.lang.String str12 = atmosphereConfig5.getInitParameter("hi!", "");
        boolean boolean13 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean14 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig5.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
    }

    @Test
    public void test12957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12957");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig6.framework = atmosphereFramework10;
        boolean boolean12 = atmosphereConfig6.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig6.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig6.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig6.getframework();
        boolean boolean16 = atmosphereConfig6.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig6.properties;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test12958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12958");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig12.atmosphereHandlerConfig;
        boolean boolean16 = atmosphereConfig12.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList17);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.startupHook(startupHook22);
        atmosphereConfig23.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        boolean boolean28 = atmosphereConfig26.throwExceptionOnCloned;
        atmosphereConfig26.destroy();
        atmosphereConfig26.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig26.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig34.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39, startupHookArray38);
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList39);
        atmosphereConfig26.startUpHook = startupHookList39;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig26.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig23.populate(atmosphereConfig26);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig23.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(startupHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test12959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12959");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        boolean boolean14 = atmosphereConfig4.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig4.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig4.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        int int21 = atmosphereConfig17.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig17.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig17.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig4.populate(atmosphereConfig17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext28 = atmosphereConfig25.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
    }

    @Test
    public void test12960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12960");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap1 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", 0);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean12 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test12961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12961");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig11.destroy();
        boolean boolean19 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig11.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.shutdownHook(shutdownHook28);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig27.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig27.startupHook(startupHook31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig27.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList33;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory35 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(startupHookList33);
    }

    @Test
    public void test12962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12962");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = true;
        atmosphereConfig0.setSupportSession(true);
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        int int15 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig11.supportSession = false;
        boolean boolean18 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        atmosphereConfig11.destroy();
        boolean boolean20 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig11.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig11.startupHook(startupHook24);
        boolean boolean26 = atmosphereConfig25.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test12963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12963");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig18.populate(atmosphereConfig25);
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig25.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig25.getframework();
        java.lang.String str35 = atmosphereConfig25.getInitParameter("");
        boolean boolean36 = atmosphereConfig25.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test12964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12964");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        boolean boolean15 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test12965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12965");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.isThrowExceptionOnCloned();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean7 = atmosphereConfig5.throwExceptionOnCloned;
        atmosphereConfig5.destroy();
        atmosphereConfig5.initComplete();
        java.lang.String str12 = atmosphereConfig5.getInitParameter("hi!", "");
        boolean boolean13 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean16 = atmosphereConfig5.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig22.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig28.setframework(atmosphereFramework29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig28.getproperties();
        atmosphereConfig17.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig17.framework;
        boolean boolean34 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig17.startupHook(startupHook35);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.atmosphereHandlerConfig;
        atmosphereConfig5.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        boolean boolean42 = atmosphereConfig1.getInitParameter("hi!", false);
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory45 = atmosphereConfig1.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test12966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12966");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties;
        atmosphereConfig0.setproperties(strMap10);
        boolean boolean14 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.setSupportSession(true);
        boolean boolean19 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig25.getstartUpHook();
        atmosphereConfig25.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig25.startupHook(startupHook30);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.startupHook(startupHook37);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory39 = atmosphereConfig38.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
    }

    @Test
    public void test12967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12967");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        int int9 = atmosphereConfig0.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        int int18 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig14.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig14.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig14.getproperties();
        atmosphereConfig14.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.throwExceptionOnCloned;
        atmosphereConfig23.destroy();
        atmosphereConfig23.initComplete();
        java.lang.String str30 = atmosphereConfig23.getInitParameter("hi!", "");
        boolean boolean31 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        java.lang.String str33 = atmosphereConfig23.getInitParameter("hi!");
        boolean boolean34 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig14.populate(atmosphereConfig23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        boolean boolean38 = atmosphereConfig36.throwExceptionOnCloned;
        atmosphereConfig36.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig36.getAtmosphereHandlerConfig();
        atmosphereConfig36.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig35.populate(atmosphereConfig36);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        java.lang.String str48 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        atmosphereConfig0.supportSession = false;
        boolean boolean53 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test12968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12968");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = null;
        atmosphereConfig0.framework = atmosphereFramework2;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory6 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(startupHookList4);
    }

    @Test
    public void test12969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12969");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        int int11 = atmosphereConfig0.getInitParameter("hi!", 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        boolean boolean14 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.destroy();
        atmosphereConfig12.initComplete();
        java.lang.String str19 = atmosphereConfig12.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.startupHook(startupHook25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        atmosphereConfig26.setframework(atmosphereFramework27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig26.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig26.shutdownHooks;
        atmosphereConfig12.shutdownHooks = shutdownHookList30;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig12.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig34.getframework();
        boolean boolean38 = atmosphereConfig34.getInitParameter("", true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test12970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12970");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.framework = atmosphereFramework5;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        boolean boolean11 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.shutdownHooks;
        boolean boolean15 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework();
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
    }

    @Test
    public void test12971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12971");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.setSupportSession(false);
        java.lang.String str10 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean11 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig13.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList20, startupHookArray19);
        atmosphereConfig13.startUpHook = startupHookList20;
        org.slf4j.Logger logger23 = atmosphereConfig13.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig13.getshutdownHooks();
        atmosphereConfig13.destroy();
        atmosphereConfig13.supportSession = true;
        atmosphereConfig13.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList29;
        org.slf4j.Logger logger31 = atmosphereConfig0.getlogger();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(startupHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(logger31);
    }

    @Test
    public void test12972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12972");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig32.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig32.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig40.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig45.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig45.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.startupHook(startupHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.setframework(atmosphereFramework52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig51.getproperties();
        atmosphereConfig40.setproperties(strMap54);
        atmosphereConfig32.setproperties(strMap54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig32.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.startUpHook;
        atmosphereConfig32.startUpHook = startupHookList60;
        boolean boolean62 = atmosphereConfig32.supportSession;
        boolean boolean63 = atmosphereConfig32.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig0.populate(atmosphereConfig32);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig64.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig64.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig67.getAtmosphereHandlerConfig();
        boolean boolean69 = atmosphereConfig67.throwExceptionOnCloned;
        atmosphereConfig67.destroy();
        atmosphereConfig67.initComplete();
        java.lang.String str74 = atmosphereConfig67.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig75.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig75.shutdownHook(shutdownHook78);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig79.startupHook(startupHook80);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = null;
        atmosphereConfig81.setframework(atmosphereFramework82);
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig81.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList85 = atmosphereConfig81.shutdownHooks;
        atmosphereConfig67.shutdownHooks = shutdownHookList85;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook87 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig67.shutdownHook(shutdownHook87);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList89 = atmosphereConfig67.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = atmosphereConfig67.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList91 = atmosphereConfig67.getstartUpHook();
        atmosphereConfig64.setstartUpHook(startupHookList91);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework93 = atmosphereConfig64.framework();
        boolean boolean94 = atmosphereConfig64.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(shutdownHookList66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(shutdownHookList85);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(startupHookList91);
        org.junit.Assert.assertNull(atmosphereFramework93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test12973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12973");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        boolean boolean14 = atmosphereConfig13.isThrowExceptionOnCloned();
        java.lang.String str16 = atmosphereConfig13.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig17.startUpHook;
        atmosphereConfig13.startUpHook = startupHookList19;
        atmosphereConfig0.startUpHook = startupHookList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        atmosphereConfig22.destroy();
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig22.shutdownHook(shutdownHook28);
        atmosphereConfig22.supportSession = true;
        atmosphereConfig22.setSessionTimeoutRemovalAllowed(true);
        boolean boolean34 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig35.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList40, startupHookArray39);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList40);
        atmosphereConfig35.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig35.atmosphereHandlerConfig;
        atmosphereConfig35.initComplete();
        atmosphereConfig35.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig35.properties;
        atmosphereConfig22.setproperties(strMap47);
        atmosphereConfig0.properties = strMap47;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test12974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12974");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        atmosphereConfig4.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig10.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig14.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig16.getlogger();
        boolean boolean18 = atmosphereConfig16.isSupportSession();
        boolean boolean19 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        atmosphereConfig4.startUpHook = startupHookList25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig30.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig30.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray34 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35, startupHookArray34);
        atmosphereConfig30.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig30.framework = atmosphereFramework38;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig30.getstartUpHook();
        atmosphereConfig4.startUpHook = startupHookList40;
        atmosphereConfig4.destroy();
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig4.framework = atmosphereFramework44;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig4.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
    }

    @Test
    public void test12975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12975");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        int int14 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig10.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig10.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig10.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig4.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig20.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig20.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig28.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig28.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig33.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig33.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig37.startupHook(startupHook38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig39.setframework(atmosphereFramework40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.getproperties();
        atmosphereConfig28.setproperties(strMap42);
        atmosphereConfig20.setproperties(strMap42);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig20.properties();
        atmosphereConfig4.properties = strMap45;
        boolean boolean49 = atmosphereConfig4.getInitParameter("", false);
        boolean boolean50 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig4.shutdownHook(shutdownHook51);
        boolean boolean53 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test12976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12976");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.initComplete();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.shutdownHook(shutdownHook14);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
    }

    @Test
    public void test12977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12977");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig14.setframework(atmosphereFramework15);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        boolean boolean23 = atmosphereConfig21.throwExceptionOnCloned;
        atmosphereConfig21.destroy();
        atmosphereConfig21.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig21.framework = atmosphereFramework26;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig21.framework = atmosphereFramework28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig21.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList31);
        int int35 = atmosphereConfig0.getInitParameter("", (int) (byte) 1);
        boolean boolean36 = atmosphereConfig0.throwExceptionOnCloned;
        java.lang.String str39 = atmosphereConfig0.getInitParameter("", "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test12978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12978");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        boolean boolean8 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
    }

    @Test
    public void test12979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12979");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig7.getproperties();
        boolean boolean11 = atmosphereConfig7.getInitParameter("", true);
        int int14 = atmosphereConfig7.getInitParameter("", 52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig15.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.shutdownHook(shutdownHook20);
        atmosphereConfig19.setThrowExceptionOnCloned(false);
        atmosphereConfig19.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.shutdownHook(shutdownHook30);
        org.slf4j.Logger logger32 = atmosphereConfig31.getlogger();
        boolean boolean33 = atmosphereConfig31.isSupportSession();
        boolean boolean34 = atmosphereConfig31.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig35.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig35.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray39 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList40, startupHookArray39);
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList40);
        atmosphereConfig31.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList40);
        atmosphereConfig19.startUpHook = startupHookList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig19.setshutdownHooks(shutdownHookList47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig49.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig49.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig54.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig54.getshutdownHooks();
        atmosphereConfig49.setshutdownHooks(shutdownHookList56);
        atmosphereConfig19.shutdownHooks = shutdownHookList56;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig19.getproperties();
        atmosphereConfig7.properties = strMap59;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig7.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(startupHookList61);
    }

    @Test
    public void test12980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12980");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig8.shutdownHook(shutdownHook11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig12.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig14.getlogger();
        boolean boolean16 = atmosphereConfig14.isSupportSession();
        boolean boolean17 = atmosphereConfig14.isThrowExceptionOnCloned();
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig14.properties();
        atmosphereConfig14.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.populate(atmosphereConfig14);
        atmosphereConfig21.setThrowExceptionOnCloned(false);
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig21.framework();
        atmosphereConfig21.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig21.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        boolean boolean33 = atmosphereConfig31.throwExceptionOnCloned;
        atmosphereConfig31.destroy();
        atmosphereConfig31.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig31.framework = atmosphereFramework36;
        int int40 = atmosphereConfig31.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig31.framework;
        boolean boolean42 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        atmosphereConfig31.destroy();
        atmosphereConfig31.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig31.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig31.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig31.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig31.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig54.shutdownHook(shutdownHook55);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig56.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig58.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig58.shutdownHook(shutdownHook61);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig62.shutdownHook(shutdownHook63);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig62.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig62.startupHook(startupHook66);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig67.startUpHook;
        atmosphereConfig56.setstartUpHook(startupHookList68);
        atmosphereConfig56.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig71.getAtmosphereHandlerConfig();
        atmosphereConfig71.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig75.getAtmosphereHandlerConfig();
        int int79 = atmosphereConfig75.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = atmosphereConfig75.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray81 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList82 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList82, startupHookArray81);
        atmosphereConfig75.startUpHook = startupHookList82;
        atmosphereConfig71.startUpHook = startupHookList82;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList86 = atmosphereConfig71.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig71.getAtmosphereHandlerConfig();
        atmosphereConfig56.atmosphereHandlerConfig = atmosphereHandlerConfigList87;
        boolean boolean89 = atmosphereConfig56.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList91 = atmosphereConfig90.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework92 = null;
        atmosphereConfig90.framework = atmosphereFramework92;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList94 = atmosphereConfig90.startUpHook;
        atmosphereConfig56.startUpHook = startupHookList94;
        atmosphereConfig31.setstartUpHook(startupHookList94);
        atmosphereConfig21.setstartUpHook(startupHookList94);
        java.util.Map<java.lang.String, java.lang.Object> strMap98 = atmosphereConfig21.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 35 + "'", int40 == 35);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNull(atmosphereFramework80);
        org.junit.Assert.assertNotNull(startupHookArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList91);
        org.junit.Assert.assertNotNull(startupHookList94);
        org.junit.Assert.assertNotNull(strMap98);
    }

    @Test
    public void test12981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12981");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig11.atmosphereHandlerConfig;
        boolean boolean15 = atmosphereConfig11.supportSession;
        boolean boolean16 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList29);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.shutdownHook(shutdownHook33);
        boolean boolean37 = atmosphereConfig34.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig38.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        int int46 = atmosphereConfig42.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig42.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49, startupHookArray48);
        atmosphereConfig42.startUpHook = startupHookList49;
        atmosphereConfig38.startUpHook = startupHookList49;
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig34.shutdownHook(shutdownHook54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration56 = atmosphereConfig55.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(startupHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
    }

    @Test
    public void test12982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12982");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig13.framework = atmosphereFramework14;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test12983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12983");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        java.lang.String str39 = atmosphereConfig37.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig37.atmosphereHandlerConfig;
        atmosphereConfig37.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig42.throwExceptionOnCloned = false;
        atmosphereConfig42.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig42.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig42.initComplete();
        atmosphereConfig42.initComplete();
        atmosphereConfig42.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig42.shutdownHooks;
        atmosphereConfig37.setshutdownHooks(shutdownHookList53);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig37.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig37.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig57.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig57.shutdownHook(shutdownHook60);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig61.shutdownHook(shutdownHook62);
        org.slf4j.Logger logger64 = atmosphereConfig63.getlogger();
        boolean boolean65 = atmosphereConfig63.isSupportSession();
        boolean boolean66 = atmosphereConfig63.isThrowExceptionOnCloned();
        org.slf4j.Logger logger67 = atmosphereConfig63.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig63.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig63.properties;
        boolean boolean70 = atmosphereConfig63.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig63.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig63.properties;
        atmosphereConfig37.setproperties(strMap72);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig37.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(logger64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(logger67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test12984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12984");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig10.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15, startupHookArray14);
        atmosphereConfig10.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig6.framework();
        atmosphereConfig6.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        int int26 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig22.supportSession = false;
        atmosphereConfig22.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig22.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig6.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig22.setframework(atmosphereFramework33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig22.getshutdownHooks();
        atmosphereConfig22.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(shutdownHookList35);
    }

    @Test
    public void test12985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12985");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList16);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.throwExceptionOnCloned;
        atmosphereConfig20.destroy();
        atmosphereConfig20.initComplete();
        java.lang.String str27 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        java.lang.String str30 = atmosphereConfig20.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray31 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32, shutdownHookArray31);
        atmosphereConfig20.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.shutdownHook(shutdownHook36);
        boolean boolean38 = atmosphereConfig37.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig39.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig43.startupHook(startupHook44);
        org.slf4j.Logger logger46 = atmosphereConfig43.getlogger();
        atmosphereConfig43.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig43.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig51.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.shutdownHook(shutdownHook54);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig55.startupHook(startupHook56);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        atmosphereConfig57.setframework(atmosphereFramework58);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig57.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig57.getshutdownHooks();
        atmosphereConfig43.shutdownHooks = shutdownHookList61;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig37.populate(atmosphereConfig43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig37.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig37.shutdownHook(shutdownHook65);
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig69.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig69.shutdownHook(shutdownHook72);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig73.startupHook(startupHook74);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = null;
        atmosphereConfig75.setframework(atmosphereFramework76);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig75.startupHook(startupHook78);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        atmosphereConfig79.setframework(atmosphereFramework80);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig37.populate(atmosphereConfig79);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = atmosphereConfig37.getframework();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration84 = atmosphereConfig37.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(shutdownHookArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(logger46);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNull(atmosphereFramework83);
    }

    @Test
    public void test12986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12986");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        int int4 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.supportSession = false;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig12.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties();
        atmosphereConfig0.properties = strMap15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig21.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig27.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig27.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig27.startUpHook;
        atmosphereConfig17.setstartUpHook(startupHookList32);
        atmosphereConfig0.setstartUpHook(startupHookList32);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        int int43 = atmosphereConfig39.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig44.throwExceptionOnCloned = true;
        boolean boolean48 = atmosphereConfig44.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig44.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig50.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig50.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig54.startupHook(startupHook55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        atmosphereConfig56.setframework(atmosphereFramework57);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig56.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig56.getshutdownHooks();
        atmosphereConfig44.setshutdownHooks(shutdownHookList60);
        atmosphereConfig39.setshutdownHooks(shutdownHookList60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig39.startupHook(startupHook63);
        org.slf4j.Logger logger65 = atmosphereConfig64.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig66.getAtmosphereHandlerConfig();
        boolean boolean68 = atmosphereConfig66.throwExceptionOnCloned;
        boolean boolean69 = atmosphereConfig66.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = null;
        atmosphereConfig66.framework = atmosphereFramework70;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig66.shutdownHook(shutdownHook72);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = atmosphereConfig73.shutdownHooks;
        atmosphereConfig64.shutdownHooks = shutdownHookList74;
        atmosphereConfig0.shutdownHooks = shutdownHookList74;
        java.lang.String str79 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.setSupportSession(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(shutdownHookList60);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(logger65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(shutdownHookList74);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
    }

    @Test
    public void test12987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12987");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig19.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig25.setframework(atmosphereFramework26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig18.populate(atmosphereConfig25);
        boolean boolean30 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig18.getframework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig18.shutdownHook(shutdownHook32);
        java.lang.String str36 = atmosphereConfig33.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test12988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12988");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig6.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig6.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.shutdownHook(shutdownHook11);
        org.slf4j.Logger logger13 = atmosphereConfig12.getlogger();
        boolean boolean14 = atmosphereConfig12.isSupportSession();
        boolean boolean15 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig16.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig16.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21, startupHookArray20);
        atmosphereConfig16.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        atmosphereConfig12.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig12.framework();
        java.lang.String str27 = atmosphereConfig12.getInitParameter("");
        atmosphereConfig12.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig12);
        int int32 = atmosphereConfig29.getInitParameter("", (int) (byte) 1);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig29.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig29.getstartUpHook();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(startupHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(startupHookList34);
    }

    @Test
    public void test12989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12989");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("");
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig12.throwExceptionOnCloned = true;
        boolean boolean16 = atmosphereConfig12.isSupportSession();
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        boolean boolean18 = atmosphereConfig12.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig12.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig12.framework;
        org.slf4j.Logger logger21 = atmosphereConfig12.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig12.getstartUpHook();
        boolean boolean23 = atmosphereConfig12.throwExceptionOnCloned;
        atmosphereConfig12.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig12.properties;
        atmosphereConfig11.properties = strMap25;
        atmosphereConfig11.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(logger21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test12990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12990");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig4.atmosphereHandlerConfig;
        boolean boolean8 = atmosphereConfig4.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig4.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig10.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15, startupHookArray14);
        atmosphereConfig10.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig18.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig23.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig23.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig27.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig29.setframework(atmosphereFramework30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig29.getproperties();
        atmosphereConfig18.setproperties(strMap32);
        atmosphereConfig10.setproperties(strMap32);
        atmosphereConfig10.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig10.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        boolean boolean41 = atmosphereConfig39.throwExceptionOnCloned;
        java.lang.String str44 = atmosphereConfig39.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig39.getshutdownHooks();
        atmosphereConfig38.setshutdownHooks(shutdownHookList45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig47.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig47.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig51.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig51.getstartUpHook();
        atmosphereConfig51.initComplete();
        int int58 = atmosphereConfig51.getInitParameter("hi!", (int) (short) 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig59.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig59.getshutdownHooks();
        boolean boolean62 = atmosphereConfig59.isSupportSession();
        boolean boolean63 = atmosphereConfig59.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig51.populate(atmosphereConfig59);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig51.getshutdownHooks();
        atmosphereConfig38.shutdownHooks = shutdownHookList65;
        atmosphereConfig4.shutdownHooks = shutdownHookList65;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig4.startupHook(startupHook68);
        atmosphereConfig4.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig71.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList72);
        int int76 = atmosphereConfig4.getInitParameter("", (int) 'a');
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig77.getAtmosphereHandlerConfig();
        int int81 = atmosphereConfig77.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig77.supportSession = false;
        atmosphereConfig77.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList86 = atmosphereConfig77.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig77.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook88 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig77.shutdownHook(shutdownHook88);
        boolean boolean92 = atmosphereConfig89.getInitParameter("", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList93 = atmosphereConfig89.startUpHook;
        atmosphereConfig4.setstartUpHook(startupHookList93);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 97 + "'", int76 == 97);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(startupHookList86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(startupHookList93);
    }

    @Test
    public void test12991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12991");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        org.slf4j.Logger logger7 = atmosphereConfig6.getlogger();
        boolean boolean8 = atmosphereConfig6.isSupportSession();
        boolean boolean9 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig10.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig10.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray14 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15, startupHookArray14);
        atmosphereConfig10.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        atmosphereConfig6.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig6.framework();
        java.lang.String str21 = atmosphereConfig6.getInitParameter("");
        java.lang.String str24 = atmosphereConfig6.getInitParameter("hi!", "");
        atmosphereConfig6.supportSession = true;
        atmosphereConfig6.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig6.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig6.properties();
        java.lang.Class<?> wildcardClass31 = strMap30.getClass();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test12992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12992");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("", (int) (byte) -1);
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        int int17 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig13.supportSession = false;
        boolean boolean20 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig21.getshutdownHooks();
        atmosphereConfig13.setshutdownHooks(shutdownHookList23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig25.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties();
        atmosphereConfig13.properties = strMap28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig34.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig34.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig38.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig40.setframework(atmosphereFramework41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig40.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig40.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig40.startUpHook;
        atmosphereConfig30.setstartUpHook(startupHookList45);
        atmosphereConfig13.setstartUpHook(startupHookList45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig6.populate(atmosphereConfig13);
        java.lang.String str51 = atmosphereConfig6.getInitParameter("hi!", "hi!");
        int int54 = atmosphereConfig6.getInitParameter("hi!", (int) '4');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig6.framework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNull(atmosphereFramework55);
    }

    @Test
    public void test12993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12993");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.throwExceptionOnCloned;
        atmosphereConfig11.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig11.destroy();
        boolean boolean19 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig11.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList21;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        int int27 = atmosphereConfig23.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig23.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray29 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList30, startupHookArray29);
        atmosphereConfig23.startUpHook = startupHookList30;
        org.slf4j.Logger logger33 = atmosphereConfig23.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig23.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig23.startupHook(startupHook35);
        boolean boolean37 = atmosphereConfig36.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig36.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.populate(atmosphereConfig39);
        boolean boolean41 = atmosphereConfig40.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(startupHookArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(logger33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test12994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12994");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig9.setshutdownHooks(shutdownHookList16);
        boolean boolean18 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig9.shutdownHooks;
        atmosphereConfig6.shutdownHooks = shutdownHookList21;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig6.startupHook(startupHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig26.startUpHook;
        atmosphereConfig26.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig26.shutdownHook(shutdownHook31);
        boolean boolean33 = atmosphereConfig32.throwExceptionOnCloned;
        int int36 = atmosphereConfig32.getInitParameter("hi!", (int) (byte) -1);
        boolean boolean37 = atmosphereConfig32.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig6.populate(atmosphereConfig32);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster39 = atmosphereConfig38.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
    }

    @Test
    public void test12995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12995");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.slf4j.Logger logger7 = atmosphereConfig4.getlogger();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.sessionTimeoutRemovalAllowed = true;
        boolean boolean12 = atmosphereConfig4.supportSession;
        boolean boolean13 = atmosphereConfig4.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig4.shutdownHook(shutdownHook14);
        boolean boolean16 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig17.throwExceptionOnCloned;
        atmosphereConfig17.destroy();
        atmosphereConfig17.initComplete();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray24 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList25, atmosphereHandlerConfigArray24);
        atmosphereConfig17.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        boolean boolean28 = atmosphereConfig17.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig17.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig4.populate(atmosphereConfig17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig17.startupHook(startupHook31);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test12996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12996");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.shutdownHook(shutdownHook5);
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig4.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig4.framework = atmosphereFramework10;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig4.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(startupHookList13);
    }

    @Test
    public void test12997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12997");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean10 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        int int16 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig12.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig12.startUpHook = startupHookList19;
        org.slf4j.Logger logger22 = atmosphereConfig12.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig12.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig12.startupHook(startupHook24);
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str29 = atmosphereConfig25.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig25.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList30;
        boolean boolean32 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test12998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12998");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.shutdownHook(shutdownHook3);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig4.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig6.setframework(atmosphereFramework7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        boolean boolean11 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig6.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig6.getInitParameter("", true);
        boolean boolean16 = atmosphereConfig6.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig17.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        org.slf4j.Logger logger24 = atmosphereConfig23.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig23.startupHook(startupHook25);
        java.lang.String str28 = atmosphereConfig23.getInitParameter("");
        boolean boolean31 = atmosphereConfig23.getInitParameter("", false);
        boolean boolean32 = atmosphereConfig23.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig23.framework;
        boolean boolean34 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig6.populate(atmosphereConfig23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig35.framework();
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNull(atmosphereFramework36);
    }

    @Test
    public void test12999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test12999");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties;
        atmosphereConfig0.properties = strMap9;
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        boolean boolean17 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test13000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest25.test13000");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.slf4j.Logger logger3 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig4.getshutdownHooks();
        atmosphereConfig4.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig4.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig4.isSessionTimeoutRemovalAllowed();
        atmosphereConfig4.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig4.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.populate(atmosphereConfig4);
        org.slf4j.Logger logger19 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        java.lang.String str23 = atmosphereConfig0.getInitParameter("");
        java.lang.String str26 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig27.getAtmosphereHandlerConfig();
        boolean boolean29 = atmosphereConfig27.throwExceptionOnCloned;
        atmosphereConfig27.destroy();
        atmosphereConfig27.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig27.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.startupHook(startupHook35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig34.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig34.setframework(atmosphereFramework38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig34.getproperties();
        atmosphereConfig0.properties = strMap40;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig0.shutdownHooks;
        boolean boolean47 = atmosphereConfig0.getInitParameter("hi!", false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(logger3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }
}

