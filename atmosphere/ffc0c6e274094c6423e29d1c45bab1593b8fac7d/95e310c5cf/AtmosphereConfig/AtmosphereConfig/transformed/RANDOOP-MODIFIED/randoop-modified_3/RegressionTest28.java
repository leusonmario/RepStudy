import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest28 {

    public static boolean debug = false;

    @Test
    public void test14001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14001");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.startupHook(startupHook16);
        java.lang.String str20 = atmosphereConfig17.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig17.setframework(atmosphereFramework21);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster23 = atmosphereConfig17.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test14002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14002");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean18 = atmosphereConfig1.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        atmosphereConfig20.setSupportSession(false);
        boolean boolean24 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        atmosphereConfig20.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig20.setframework(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig28.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig34.properties = strMap37;
        atmosphereConfig34.throwExceptionOnCloned = true;
        atmosphereConfig34.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig28.populate(atmosphereConfig34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties();
        atmosphereConfig45.properties = strMap48;
        atmosphereConfig45.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        atmosphereConfig45.setstartUpHook(startupHookList53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig57.properties();
        atmosphereConfig56.properties = strMap59;
        atmosphereConfig45.setproperties(strMap59);
        boolean boolean64 = atmosphereConfig45.getInitParameter("", false);
        java.lang.String str67 = atmosphereConfig45.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig45.getAtmosphereHandlerConfig();
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig71.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig71.getstartUpHook();
        atmosphereConfig20.startUpHook = startupHookList73;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework75);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig77.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig77.properties();
        atmosphereConfig76.properties = strMap79;
        boolean boolean81 = atmosphereConfig76.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook82 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig83 = atmosphereConfig76.shutdownHook(shutdownHook82);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook84 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig83.startupHook(startupHook84);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig20.populate(atmosphereConfig85);
        java.lang.String str89 = atmosphereConfig20.getInitParameter("hi!", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = atmosphereConfig20.getproperties();
        atmosphereConfig1.properties = strMap90;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework92 = atmosphereConfig1.getframework();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNotNull(shutdownHookList72);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig83);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(atmosphereFramework92);
    }

    @Test
    public void test14003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14003");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig10.shutdownHook(shutdownHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig19.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        atmosphereConfig22.properties = strMap25;
        boolean boolean27 = atmosphereConfig22.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig22.shutdownHook(shutdownHook28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig19.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig22.setframework(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig22.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties();
        atmosphereConfig36.properties = strMap39;
        atmosphereConfig36.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        atmosphereConfig36.setstartUpHook(startupHookList44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig47.properties = strMap50;
        atmosphereConfig36.setproperties(strMap50);
        boolean boolean55 = atmosphereConfig36.getInitParameter("", false);
        java.lang.String str58 = atmosphereConfig36.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig36.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig36.getstartUpHook();
        atmosphereConfig34.startUpHook = startupHookList60;
        atmosphereConfig0.startUpHook = startupHookList60;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig0.shutdownHooks;
        boolean boolean66 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig0.startupHook(startupHook67);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = atmosphereConfig68.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNull(atmosphereFramework69);
    }

    @Test
    public void test14004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14004");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig11.framework();
        atmosphereConfig11.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig16.framework();
        int int21 = atmosphereConfig16.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23);
        boolean boolean26 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig11.populate(atmosphereConfig16);
        boolean boolean28 = atmosphereConfig11.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        atmosphereConfig30.properties = strMap33;
        atmosphereConfig30.supportSession = false;
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig30.setThrowExceptionOnCloned(true);
        boolean boolean41 = atmosphereConfig30.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        atmosphereConfig43.properties = strMap46;
        atmosphereConfig43.throwExceptionOnCloned = true;
        atmosphereConfig43.sessionTimeoutRemovalAllowed = true;
        boolean boolean52 = atmosphereConfig43.isThrowExceptionOnCloned();
        boolean boolean53 = atmosphereConfig43.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig54.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig54.properties;
        atmosphereConfig54.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig60.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig60.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig60.getstartUpHook();
        atmosphereConfig54.startUpHook = startupHookList63;
        atmosphereConfig43.setstartUpHook(startupHookList63);
        atmosphereConfig30.startUpHook = startupHookList63;
        atmosphereConfig11.setstartUpHook(startupHookList63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig10.populate(atmosphereConfig11);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig11.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig11.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig72.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig72.shutdownHook(shutdownHook74);
        org.slf4j.Logger logger76 = atmosphereConfig72.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig72.startupHook(startupHook77);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList80 = atmosphereConfig79.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = atmosphereConfig79.framework();
        atmosphereConfig79.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig79.shutdownHooks;
        atmosphereConfig72.setshutdownHooks(shutdownHookList83);
        java.lang.String str86 = atmosphereConfig72.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList87 = atmosphereConfig72.getstartUpHook();
        atmosphereConfig11.setstartUpHook(startupHookList87);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(logger76);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(startupHookList80);
        org.junit.Assert.assertNull(atmosphereFramework81);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(startupHookList87);
    }

    @Test
    public void test14005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14005");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = null;
        atmosphereConfig0.framework = atmosphereFramework3;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig5.framework;
        java.lang.String str10 = atmosphereConfig5.getInitParameter("");
        java.lang.String str12 = atmosphereConfig5.getInitParameter("");
        boolean boolean13 = atmosphereConfig5.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig5.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
    }

    @Test
    public void test14006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14006");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.getframework();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.lang.String str13 = atmosphereConfig1.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig1.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig1.shutdownHooks;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
    }

    @Test
    public void test14007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14007");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        boolean boolean17 = atmosphereConfig16.isSupportSession();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig19.shutdownHook(shutdownHook21);
        org.slf4j.Logger logger23 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig19.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig16.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig1.populate(atmosphereConfig16);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        atmosphereConfig31.properties = strMap32;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.shutdownHook(shutdownHook34);
        boolean boolean36 = atmosphereConfig31.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig31.startupHook(startupHook37);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
    }

    @Test
    public void test14008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14008");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig9.properties();
        atmosphereConfig5.setproperties(strMap17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig5.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList19);
        int int23 = atmosphereConfig1.getInitParameter("", (int) (short) 1);
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig1.shutdownHook(shutdownHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig28.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.getproperties();
        boolean boolean31 = atmosphereConfig28.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster32 = atmosphereConfig28.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test14009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14009");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.setframework(atmosphereFramework7);
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap12 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
    }

    @Test
    public void test14010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14010");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties();
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        boolean boolean12 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test14011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14011");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig14.shutdownHook(shutdownHook16);
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig14.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig14.framework = atmosphereFramework25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        org.slf4j.Logger logger31 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig27.properties = strMap34;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig27.properties();
        atmosphereConfig14.setproperties(strMap36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig14.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        boolean boolean45 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig40.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig14.shutdownHooks = shutdownHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig14);
        atmosphereConfig50.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        atmosphereConfig53.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig53.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig50.populate(atmosphereConfig53);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig50.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig50.framework = atmosphereFramework60;
        java.lang.String str63 = atmosphereConfig50.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework64);
        atmosphereConfig65.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig65.startupHook(startupHook68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig70.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig70.properties();
        atmosphereConfig69.properties = strMap72;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig74.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = atmosphereConfig74.shutdownHook(shutdownHook76);
        org.slf4j.Logger logger78 = atmosphereConfig74.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList80 = atmosphereConfig79.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig79.properties();
        atmosphereConfig74.properties = strMap81;
        atmosphereConfig74.setThrowExceptionOnCloned(true);
        boolean boolean85 = atmosphereConfig74.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList86 = atmosphereConfig74.getstartUpHook();
        atmosphereConfig69.startUpHook = startupHookList86;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList88 = atmosphereConfig69.getAtmosphereHandlerConfig();
        atmosphereConfig69.sessionTimeoutRemovalAllowed = false;
        boolean boolean91 = atmosphereConfig69.isSupportSession();
        boolean boolean92 = atmosphereConfig69.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = atmosphereConfig69.getproperties();
        atmosphereConfig50.properties = strMap93;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(shutdownHookList75);
        org.junit.Assert.assertNotNull(atmosphereConfig77);
        org.junit.Assert.assertNotNull(logger78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(startupHookList86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test14012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14012");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig4.framework;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList10);
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str15 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean16 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList17);
    }

    @Test
    public void test14013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14013");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig1.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList2;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig0.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext8 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList2);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
    }

    @Test
    public void test14014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14014");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig1.properties();
        boolean boolean12 = atmosphereConfig1.supportSession;
        boolean boolean15 = atmosphereConfig1.getInitParameter("", false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig1.atmosphereHandlerConfig;
        atmosphereConfig1.setSupportSession(true);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
    }

    @Test
    public void test14015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14015");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig1.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        int int13 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig8.framework = atmosphereFramework14;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig8.properties();
        boolean boolean17 = atmosphereConfig8.isSupportSession();
        boolean boolean18 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        atmosphereConfig8.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig8.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig1.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig23.shutdownHooks;
        atmosphereConfig23.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig23.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig23.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig23.properties();
        atmosphereConfig1.properties = strMap29;
        int int33 = atmosphereConfig1.getInitParameter("", 52);
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig37.properties = strMap40;
        atmosphereConfig37.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig37.shutdownHooks;
        atmosphereConfig1.shutdownHooks = shutdownHookList44;
        boolean boolean46 = atmosphereConfig1.throwExceptionOnCloned;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test14016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14016");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig1.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str10 = atmosphereConfig7.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig7.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig7.properties();
        atmosphereConfig1.properties = strMap12;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig1.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig1.atmosphereHandlerConfig;
        int int18 = atmosphereConfig1.getInitParameter("hi!", (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test14017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14017");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean18 = atmosphereConfig1.throwExceptionOnCloned;
        org.slf4j.Logger logger19 = atmosphereConfig1.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig1.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig1.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig1.setframework(atmosphereFramework23);
        boolean boolean27 = atmosphereConfig1.getInitParameter("hi!", true);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test14018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14018");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        org.slf4j.Logger logger12 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig8.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig1.populate(atmosphereConfig8);
        boolean boolean18 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig17.shutdownHook(shutdownHook19);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
    }

    @Test
    public void test14019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14019");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig10.shutdownHook(shutdownHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig19.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig0.getstartUpHook();
        org.slf4j.Logger logger24 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig0.shutdownHook(shutdownHook25);
        boolean boolean27 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test14020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14020");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig9.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig9.startupHook(startupHook11);
        atmosphereConfig12.initComplete();
        atmosphereConfig12.destroy();
        java.lang.String str17 = atmosphereConfig12.getInitParameter("hi!", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig12.properties();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test14021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14021");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        boolean boolean12 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        boolean boolean15 = atmosphereConfig9.getInitParameter("", true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test14022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14022");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.initComplete();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        atmosphereConfig11.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig11.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig21.shutdownHook(shutdownHook29);
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig30.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig30.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig30.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider37 = atmosphereConfig30.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(startupHookList36);
    }

    @Test
    public void test14023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14023");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig10.setThrowExceptionOnCloned(true);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        atmosphereConfig18.setstartUpHook(startupHookList26);
        atmosphereConfig10.startUpHook = startupHookList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig1.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        atmosphereConfig31.setThrowExceptionOnCloned(false);
        int int36 = atmosphereConfig31.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig31.framework = atmosphereFramework37;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig31.properties();
        boolean boolean40 = atmosphereConfig31.isSupportSession();
        boolean boolean41 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        atmosphereConfig31.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig31.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig29.populate(atmosphereConfig31);
        int int47 = atmosphereConfig29.getInitParameter("hi!", (int) '#');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig50.properties();
        atmosphereConfig49.properties = strMap52;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig49.startupHook(startupHook54);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = null;
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList56;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig29.populate(atmosphereConfig49);
        boolean boolean59 = atmosphereConfig58.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig58.framework;
        atmosphereConfig58.setSupportSession(false);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 35 + "'", int47 == 35);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(atmosphereFramework60);
    }

    @Test
    public void test14024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14024");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        java.lang.String str11 = atmosphereConfig1.getInitParameter("", "hi!");
        atmosphereConfig1.initComplete();
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test14025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14025");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.shutdownHook(shutdownHook8);
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig6.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList14, startupHookArray13);
        atmosphereConfig6.startUpHook = startupHookList14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig6.getstartUpHook();
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig6.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig6.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        atmosphereConfig24.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        atmosphereConfig30.setThrowExceptionOnCloned(false);
        int int35 = atmosphereConfig30.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig30.framework = atmosphereFramework36;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig30.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig30.getframework();
        boolean boolean40 = atmosphereConfig30.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig30.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig30.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig24.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig6.populate(atmosphereConfig43);
        atmosphereConfig44.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig0.populate(atmosphereConfig44);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig0.startupHook(startupHook48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig50.framework();
        int int55 = atmosphereConfig50.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray56 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57, shutdownHookArray56);
        atmosphereConfig50.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList57);
        boolean boolean60 = atmosphereConfig50.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str64 = atmosphereConfig61.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig50.populate(atmosphereConfig61);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = null;
        atmosphereConfig50.setshutdownHooks(shutdownHookList66);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig70.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig70.properties();
        atmosphereConfig69.properties = strMap72;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig69.startupHook(startupHook74);
        boolean boolean76 = atmosphereConfig75.isSupportSession();
        boolean boolean77 = atmosphereConfig75.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig78.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig78.properties();
        atmosphereConfig75.setproperties(strMap80);
        int int84 = atmosphereConfig75.getInitParameter("hi!", (int) (short) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = atmosphereConfig75.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList86 = atmosphereConfig75.getshutdownHooks();
        java.lang.String str88 = atmosphereConfig75.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList89 = atmosphereConfig75.getshutdownHooks();
        atmosphereConfig50.shutdownHooks = shutdownHookList89;
        atmosphereConfig49.setshutdownHooks(shutdownHookList89);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(startupHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(shutdownHookList86);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(shutdownHookList89);
    }

    @Test
    public void test14026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14026");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        int int18 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig13.framework = atmosphereFramework19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig13.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig13.shutdownHook(shutdownHook22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig13.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig25.shutdownHook(shutdownHook27);
        org.slf4j.Logger logger29 = atmosphereConfig25.getlogger();
        java.lang.String str32 = atmosphereConfig25.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig34.properties = strMap37;
        atmosphereConfig34.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig34.getAtmosphereHandlerConfig();
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig1.getproperties();
        boolean boolean46 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig49.properties();
        atmosphereConfig48.properties = strMap51;
        atmosphereConfig48.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        atmosphereConfig48.setframework(atmosphereFramework55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        atmosphereConfig48.setframework(atmosphereFramework57);
        atmosphereConfig48.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig48.setframework(atmosphereFramework61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig1.populate(atmosphereConfig48);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig48.framework;
        boolean boolean65 = atmosphereConfig48.supportSession;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test14027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14027");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        java.lang.String str5 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig7.properties;
        atmosphereConfig0.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        atmosphereConfig13.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig13.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration22 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(shutdownHookList20);
    }

    @Test
    public void test14028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14028");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig7.getproperties();
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(false);
        boolean boolean34 = atmosphereConfig7.isThrowExceptionOnCloned();
        boolean boolean35 = atmosphereConfig7.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig37.properties = strMap40;
        boolean boolean42 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig37.shutdownHook(shutdownHook43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig44.properties;
        boolean boolean46 = atmosphereConfig44.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig49.properties();
        atmosphereConfig48.properties = strMap51;
        boolean boolean53 = atmosphereConfig48.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig48.startupHook(startupHook54);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig58.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig58.properties();
        atmosphereConfig57.properties = strMap60;
        atmosphereConfig57.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig57.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig65.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig65.properties();
        atmosphereConfig65.setThrowExceptionOnCloned(true);
        java.lang.String str71 = atmosphereConfig65.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig65.getshutdownHooks();
        atmosphereConfig57.shutdownHooks = shutdownHookList72;
        atmosphereConfig48.shutdownHooks = shutdownHookList72;
        atmosphereConfig44.shutdownHooks = shutdownHookList72;
        java.lang.String str77 = atmosphereConfig44.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig44.getshutdownHooks();
        atmosphereConfig7.shutdownHooks = shutdownHookList78;
        boolean boolean80 = atmosphereConfig7.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(shutdownHookList72);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test14029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14029");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig8.supportSession;
        boolean boolean10 = atmosphereConfig8.supportSession;
        boolean boolean11 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test14030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14030");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig14.shutdownHook(shutdownHook16);
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig14.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig14.framework = atmosphereFramework25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        org.slf4j.Logger logger31 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig27.properties = strMap34;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig27.properties();
        atmosphereConfig14.setproperties(strMap36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig14.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        boolean boolean45 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig40.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig14.shutdownHooks = shutdownHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig53.properties();
        atmosphereConfig52.properties = strMap55;
        atmosphereConfig52.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        atmosphereConfig52.setstartUpHook(startupHookList60);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework62);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig64.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig64.properties();
        atmosphereConfig63.properties = strMap66;
        atmosphereConfig52.setproperties(strMap66);
        boolean boolean71 = atmosphereConfig52.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig72.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig72.properties();
        atmosphereConfig52.setproperties(strMap74);
        boolean boolean78 = atmosphereConfig52.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig52.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList79;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(shutdownHookList79);
    }

    @Test
    public void test14031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14031");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig5.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig5.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig5);
        org.slf4j.Logger logger10 = atmosphereConfig9.getlogger();
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(true);
        org.slf4j.Logger logger13 = atmosphereConfig9.getlogger();
        boolean boolean14 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig9.shutdownHook(shutdownHook15);
        atmosphereConfig16.throwExceptionOnCloned = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory19 = atmosphereConfig16.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test14032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14032");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig1.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        int int13 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig8.framework = atmosphereFramework14;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig8.properties();
        boolean boolean17 = atmosphereConfig8.isSupportSession();
        boolean boolean18 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        atmosphereConfig8.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig8.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig1.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig23.shutdownHooks;
        atmosphereConfig23.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig23.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig23.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig23.properties();
        atmosphereConfig1.properties = strMap29;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework32);
        atmosphereConfig33.setThrowExceptionOnCloned(false);
        boolean boolean36 = atmosphereConfig33.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig33.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        int int45 = atmosphereConfig40.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        atmosphereConfig40.framework = atmosphereFramework46;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig40.properties();
        boolean boolean49 = atmosphereConfig40.isSupportSession();
        boolean boolean50 = atmosphereConfig40.sessionTimeoutRemovalAllowed;
        atmosphereConfig40.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig40.atmosphereHandlerConfig;
        atmosphereConfig40.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig33.populate(atmosphereConfig40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig55.shutdownHooks;
        atmosphereConfig55.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = atmosphereConfig55.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig55.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig55.properties();
        atmosphereConfig33.properties = strMap61;
        int int65 = atmosphereConfig33.getInitParameter("", 52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig33.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList66);
        boolean boolean70 = atmosphereConfig1.getInitParameter("", true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNull(atmosphereFramework59);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(startupHookList66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test14033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14033");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.shutdownHook(shutdownHook12);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test14034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14034");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.setframework(atmosphereFramework9);
        java.lang.String str13 = atmosphereConfig1.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig1.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig1.getAtmosphereHandlerConfig();
        boolean boolean17 = atmosphereConfig1.supportSession;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test14035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14035");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig11.framework;
        java.lang.String str16 = atmosphereConfig11.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.properties;
        atmosphereConfig11.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig24.properties = strMap27;
        atmosphereConfig24.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig24.getshutdownHooks();
        atmosphereConfig11.setshutdownHooks(shutdownHookList31);
        atmosphereConfig1.setshutdownHooks(shutdownHookList31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        boolean boolean37 = atmosphereConfig1.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
    }

    @Test
    public void test14036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14036");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        org.slf4j.Logger logger6 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        org.slf4j.Logger logger9 = atmosphereConfig8.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig8.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig12.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSupportSession();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig18.setproperties(strMap23);
        atmosphereConfig8.properties = strMap23;
        atmosphereConfig8.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig8.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
    }

    @Test
    public void test14037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14037");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        org.slf4j.Logger logger6 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        int int11 = atmosphereConfig0.getInitParameter("", (int) (byte) 100);
        atmosphereConfig0.destroy();
        boolean boolean13 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookList16);
    }

    @Test
    public void test14038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14038");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean23 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig0.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.shutdownHook(shutdownHook26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig0.getproperties();
        org.slf4j.Logger logger29 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(logger29);
    }

    @Test
    public void test14039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14039");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig1.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig1.shutdownHooks = shutdownHookList22;
        org.slf4j.Logger logger24 = atmosphereConfig1.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig1.framework;
        java.lang.String str27 = atmosphereConfig1.getInitParameter("");
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test14040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14040");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig11.framework();
        int int16 = atmosphereConfig11.getInitParameter("hi!", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.startUpHook = startupHookList17;
        java.lang.String str21 = atmosphereConfig1.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig1.framework = atmosphereFramework22;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig1.startupHook(startupHook24);
        boolean boolean26 = atmosphereConfig1.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test14041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14041");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework;
        int int12 = atmosphereConfig0.getInitParameter("hi!", (int) ' ');
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        boolean boolean15 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 32 + "'", int12 == 32);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test14042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14042");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties();
        atmosphereConfig4.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        atmosphereConfig10.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig4.populate(atmosphereConfig10);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig4.getproperties();
        atmosphereConfig0.setproperties(strMap20);
        int int24 = atmosphereConfig0.getInitParameter("", 35);
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 35 + "'", int24 == 35);
    }

    @Test
    public void test14043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14043");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig1.atmosphereHandlerConfig;
        boolean boolean11 = atmosphereConfig1.supportSession;
        boolean boolean12 = atmosphereConfig1.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig15.properties = strMap18;
        atmosphereConfig15.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig15.framework = atmosphereFramework22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig24.setThrowExceptionOnCloned(true);
        java.lang.String str30 = atmosphereConfig24.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        atmosphereConfig32.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        atmosphereConfig32.setstartUpHook(startupHookList40);
        atmosphereConfig24.startUpHook = startupHookList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig15.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        int int50 = atmosphereConfig45.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig45.framework = atmosphereFramework51;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig45.properties();
        boolean boolean54 = atmosphereConfig45.isSupportSession();
        boolean boolean55 = atmosphereConfig45.sessionTimeoutRemovalAllowed;
        atmosphereConfig45.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig45.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig43.populate(atmosphereConfig45);
        int int61 = atmosphereConfig43.getInitParameter("hi!", (int) '#');
        boolean boolean64 = atmosphereConfig43.getInitParameter("hi!", false);
        atmosphereConfig43.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig66.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig66.shutdownHook(shutdownHook68);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList70 = atmosphereConfig69.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig69.properties();
        atmosphereConfig43.setproperties(strMap71);
        atmosphereConfig1.properties = strMap71;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 35 + "'", int61 == 35);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList70);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test14044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14044");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig1.properties();
        boolean boolean12 = atmosphereConfig1.supportSession;
        boolean boolean15 = atmosphereConfig1.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig17.getshutdownHooks();
        java.lang.String str27 = atmosphereConfig17.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig1.shutdownHooks = shutdownHookList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig30.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig30.shutdownHook(shutdownHook32);
        org.slf4j.Logger logger34 = atmosphereConfig30.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig30.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig37.framework();
        atmosphereConfig37.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig37.shutdownHooks;
        atmosphereConfig30.setshutdownHooks(shutdownHookList41);
        java.lang.String str44 = atmosphereConfig30.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig30.getstartUpHook();
        atmosphereConfig1.setstartUpHook(startupHookList45);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig1.startUpHook;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(logger34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(startupHookList47);
    }

    @Test
    public void test14045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14045");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        org.slf4j.Logger logger14 = atmosphereConfig10.getlogger();
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig10.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(shutdownHookList22);
    }

    @Test
    public void test14046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14046");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean14 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.supportSession = true;
        java.lang.String str19 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean20 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        int int25 = atmosphereConfig0.getInitParameter("", (int) (byte) 0);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test14047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14047");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig1.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig1.shutdownHooks = shutdownHookList22;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig1.atmosphereHandlerConfig;
        boolean boolean25 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = atmosphereConfig1.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test14048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14048");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        org.slf4j.Logger logger6 = atmosphereConfig0.getlogger();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        int int11 = atmosphereConfig0.getInitParameter("", (int) (byte) 100);
        atmosphereConfig0.destroy();
        boolean boolean13 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test14049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14049");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig8.framework();
        int int13 = atmosphereConfig8.getInitParameter("hi!", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        atmosphereConfig7.setproperties(strMap14);
        boolean boolean16 = atmosphereConfig7.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig17.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig22.framework();
        int int27 = atmosphereConfig22.getInitParameter("hi!", 0);
        boolean boolean28 = atmosphereConfig22.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig22.framework = atmosphereFramework29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig17.populate(atmosphereConfig22);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig17.properties;
        boolean boolean33 = atmosphereConfig17.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig17.shutdownHooks;
        atmosphereConfig7.setshutdownHooks(shutdownHookList34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig7.getproperties();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test14050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14050");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.startUpHook = startupHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig15.properties = strMap18;
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig15.getshutdownHooks();
        boolean boolean23 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.lang.String str26 = atmosphereConfig15.getInitParameter("", "hi!");
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.lang.String str30 = atmosphereConfig15.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig15.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig1.framework;
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        atmosphereConfig1.setSupportSession(false);
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        boolean boolean40 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig41.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig41.shutdownHook(shutdownHook43);
        org.slf4j.Logger logger45 = atmosphereConfig41.getlogger();
        java.lang.String str47 = atmosphereConfig41.getInitParameter("hi!");
        atmosphereConfig41.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig52.properties();
        atmosphereConfig51.properties = strMap54;
        boolean boolean56 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        boolean boolean57 = atmosphereConfig51.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig58.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig58.shutdownHook(shutdownHook60);
        org.slf4j.Logger logger62 = atmosphereConfig58.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig58.shutdownHook(shutdownHook63);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        atmosphereConfig58.framework = atmosphereFramework65;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig51.populate(atmosphereConfig58);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework68);
        atmosphereConfig69.setThrowExceptionOnCloned(false);
        int int74 = atmosphereConfig69.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework75 = null;
        atmosphereConfig69.framework = atmosphereFramework75;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig69.properties();
        boolean boolean78 = atmosphereConfig69.isSupportSession();
        boolean boolean79 = atmosphereConfig69.sessionTimeoutRemovalAllowed;
        atmosphereConfig69.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig69.atmosphereHandlerConfig;
        atmosphereConfig58.atmosphereHandlerConfig = atmosphereHandlerConfigList81;
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList81;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList81;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(logger45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(shutdownHookList59);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(logger62);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
    }

    @Test
    public void test14051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14051");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        atmosphereConfig25.setThrowExceptionOnCloned(false);
        int int30 = atmosphereConfig25.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig25.framework = atmosphereFramework31;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig25.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig25.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig35.framework;
        java.lang.String str40 = atmosphereConfig35.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig35.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig42.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig42.properties;
        atmosphereConfig35.setproperties(strMap45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig49.properties();
        atmosphereConfig48.properties = strMap51;
        atmosphereConfig48.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig48.getshutdownHooks();
        atmosphereConfig35.setshutdownHooks(shutdownHookList55);
        atmosphereConfig25.setshutdownHooks(shutdownHookList55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework58);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig60.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig60.properties();
        atmosphereConfig59.properties = strMap62;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig59.startupHook(startupHook64);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig59.getshutdownHooks();
        atmosphereConfig25.shutdownHooks = shutdownHookList66;
        atmosphereConfig23.shutdownHooks = shutdownHookList66;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig23.properties();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(shutdownHookList66);
        org.junit.Assert.assertNotNull(strMap69);
    }

    @Test
    public void test14052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14052");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.framework();
        int int14 = atmosphereConfig9.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray15 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16, shutdownHookArray15);
        atmosphereConfig9.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16);
        atmosphereConfig1.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList16);
        atmosphereConfig1.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig1.getshutdownHooks();
        int int25 = atmosphereConfig1.getInitParameter("", (int) (short) 10);
        boolean boolean26 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig1.getframework();
        org.slf4j.Logger logger28 = atmosphereConfig1.getlogger();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(logger28);
    }

    @Test
    public void test14053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14053");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        boolean boolean18 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig13.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig13.getproperties();
        atmosphereConfig1.setproperties(strMap22);
        boolean boolean24 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean25 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig1.startupHook(startupHook26);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration28 = atmosphereConfig27.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
    }

    @Test
    public void test14054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14054");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig11.framework();
        int int16 = atmosphereConfig11.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18, shutdownHookArray17);
        atmosphereConfig11.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList18);
        boolean boolean21 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str25 = atmosphereConfig22.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig11.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties();
        atmosphereConfig28.properties = strMap31;
        org.slf4j.Logger logger33 = atmosphereConfig28.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig28.framework = atmosphereFramework34;
        boolean boolean36 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        atmosphereConfig28.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = null;
        atmosphereConfig28.startUpHook = startupHookList39;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig11.populate(atmosphereConfig28);
        atmosphereConfig41.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = null;
        atmosphereConfig41.setstartUpHook(startupHookList44);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig41.atmosphereHandlerConfig;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(logger33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
    }

    @Test
    public void test14055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14055");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig1.shutdownHook(shutdownHook8);
        atmosphereConfig9.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig9.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig9.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig16.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig25.shutdownHook(shutdownHook27);
        org.slf4j.Logger logger29 = atmosphereConfig25.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.properties();
        atmosphereConfig25.properties = strMap32;
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        boolean boolean36 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig25.getstartUpHook();
        atmosphereConfig20.startUpHook = startupHookList37;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig20.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig9.shutdownHooks = shutdownHookList42;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        int int50 = atmosphereConfig45.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig45.framework = atmosphereFramework51;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig45.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig45.shutdownHook(shutdownHook54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig45.properties;
        atmosphereConfig9.properties = strMap56;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig9.shutdownHook(shutdownHook58);
        atmosphereConfig59.initComplete();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
    }

    @Test
    public void test14056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14056");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig8.properties = strMap11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig14.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig14.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig6.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig18.framework;
        java.lang.String str23 = atmosphereConfig18.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig18.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties;
        atmosphereConfig18.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig18.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.populate(atmosphereConfig18);
        atmosphereConfig18.initComplete();
        org.slf4j.Logger logger34 = atmosphereConfig18.getlogger();
        boolean boolean35 = atmosphereConfig18.supportSession;
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(logger34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test14057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14057");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = atmosphereConfig0.getframework();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("");
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.framework = atmosphereFramework9;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.junit.Assert.assertNull(atmosphereFramework1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test14058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14058");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig15.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig15.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.startupHook(startupHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.properties();
        atmosphereConfig29.properties = strMap32;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig29.startupHook(startupHook34);
        boolean boolean36 = atmosphereConfig35.isSupportSession();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig38.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig38.shutdownHook(shutdownHook40);
        org.slf4j.Logger logger42 = atmosphereConfig38.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig38.setframework(atmosphereFramework43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46, startupHookArray45);
        atmosphereConfig38.startUpHook = startupHookList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig35.populate(atmosphereConfig38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig20.populate(atmosphereConfig35);
        boolean boolean53 = atmosphereConfig50.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig50.getAtmosphereHandlerConfig();
        atmosphereConfig15.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        atmosphereConfig15.setSessionTimeoutRemovalAllowed(false);
        boolean boolean58 = atmosphereConfig15.isSupportSession();
        atmosphereConfig15.initComplete();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(logger42);
        org.junit.Assert.assertNotNull(startupHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test14059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14059");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.setSupportSession(false);
        boolean boolean10 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.setframework(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.getframework();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test14060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14060");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test14061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14061");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        atmosphereConfig6.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig9.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList13;
        java.lang.String str17 = atmosphereConfig6.getInitParameter("hi!", "");
        atmosphereConfig6.destroy();
        atmosphereConfig6.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test14062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14062");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig10.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig10.framework = atmosphereFramework21;
        atmosphereConfig10.supportSession = true;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
    }

    @Test
    public void test14063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14063");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig1.shutdownHook(shutdownHook10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig13.getlogger();
        java.lang.String str20 = atmosphereConfig13.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        atmosphereConfig22.properties = strMap25;
        atmosphereConfig22.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        java.lang.String str34 = atmosphereConfig1.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig35.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig39.getAtmosphereHandlerConfig();
        boolean boolean41 = atmosphereConfig39.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig39.framework;
        org.slf4j.Logger logger43 = atmosphereConfig39.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig39.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig39.getstartUpHook();
        atmosphereConfig35.setstartUpHook(startupHookList45);
        boolean boolean47 = atmosphereConfig35.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig48.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig48.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig54.properties();
        atmosphereConfig53.properties = strMap56;
        atmosphereConfig53.throwExceptionOnCloned = true;
        atmosphereConfig53.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig53.getproperties();
        atmosphereConfig51.properties = strMap62;
        atmosphereConfig35.setproperties(strMap62);
        atmosphereConfig35.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig66.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig66.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig66.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = atmosphereConfig70.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig70.shutdownHook(shutdownHook72);
        java.lang.String str76 = atmosphereConfig70.getInitParameter("hi!", "");
        boolean boolean77 = atmosphereConfig70.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig70.shutdownHook(shutdownHook78);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray80 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList81, startupHookArray80);
        atmosphereConfig79.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList81);
        atmosphereConfig66.startUpHook = startupHookList81;
        atmosphereConfig35.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList81);
        atmosphereConfig1.startUpHook = startupHookList81;
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig1.properties();
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(logger43);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(shutdownHookList71);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(startupHookArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(strMap87);
    }

    @Test
    public void test14064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14064");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig1.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig1.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig1.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig1.getproperties();
        atmosphereConfig1.initComplete();
        boolean boolean19 = atmosphereConfig1.getInitParameter("", true);
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test14065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14065");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig1.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig1.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig1.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig1.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig1.properties;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test14066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14066");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        atmosphereConfig9.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig9.framework;
        boolean boolean19 = atmosphereConfig9.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig21.startupHook(startupHook26);
        boolean boolean28 = atmosphereConfig27.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig27.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig27.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig9.populate(atmosphereConfig27);
        java.lang.Class<?> wildcardClass32 = atmosphereConfig31.getClass();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test14067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14067");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        atmosphereConfig7.destroy();
        org.slf4j.Logger logger32 = atmosphereConfig7.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig7.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
    }

    @Test
    public void test14068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14068");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig1.atmosphereHandlerConfig;
        boolean boolean11 = atmosphereConfig1.supportSession;
        boolean boolean12 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory13 = atmosphereConfig1.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test14069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14069");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig17.framework;
        org.slf4j.Logger logger21 = atmosphereConfig17.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig17.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig17.getstartUpHook();
        atmosphereConfig13.setstartUpHook(startupHookList23);
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig13.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(logger21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test14070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14070");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        boolean boolean6 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig1.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig9.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig9.shutdownHook(shutdownHook11);
        org.slf4j.Logger logger13 = atmosphereConfig9.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig9.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17, startupHookArray16);
        atmosphereConfig9.startUpHook = startupHookList17;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig9.framework = atmosphereFramework20;
        boolean boolean22 = atmosphereConfig9.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig1.populate(atmosphereConfig9);
        boolean boolean24 = atmosphereConfig23.supportSession;
        boolean boolean25 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertNotNull(startupHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test14071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14071");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig5.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig5.framework();
        org.slf4j.Logger logger11 = atmosphereConfig5.getlogger();
        atmosphereConfig5.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList22);
        atmosphereConfig0.setshutdownHooks(shutdownHookList22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        atmosphereConfig27.setThrowExceptionOnCloned(false);
        int int32 = atmosphereConfig27.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig27.framework = atmosphereFramework33;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig27.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.populate(atmosphereConfig27);
        boolean boolean40 = atmosphereConfig27.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str44 = atmosphereConfig41.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig41.framework;
        atmosphereConfig41.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig41.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig49.framework();
        int int54 = atmosphereConfig49.getInitParameter("hi!", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig49.properties;
        atmosphereConfig48.setproperties(strMap55);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig48.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig58.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig58.framework();
        int int63 = atmosphereConfig58.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65, shutdownHookArray64);
        atmosphereConfig58.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = atmosphereConfig68.startUpHook;
        atmosphereConfig68.setSupportSession(false);
        boolean boolean72 = atmosphereConfig68.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig68.getproperties();
        atmosphereConfig58.properties = strMap73;
        atmosphereConfig48.setproperties(strMap73);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig48.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig48.properties();
        atmosphereConfig27.properties = strMap77;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(startupHookList69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test14072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14072");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig1.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig17.startupHook(startupHook22);
        boolean boolean24 = atmosphereConfig23.isSupportSession();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig26.shutdownHook(shutdownHook28);
        org.slf4j.Logger logger30 = atmosphereConfig26.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig26.setframework(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34, startupHookArray33);
        atmosphereConfig26.startUpHook = startupHookList34;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig23.populate(atmosphereConfig26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework38);
        atmosphereConfig39.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig39.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        atmosphereConfig43.properties = strMap46;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig43.getstartUpHook();
        atmosphereConfig37.setstartUpHook(startupHookList48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig37.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig37.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig37.shutdownHook(shutdownHook52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig54.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig54.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig54.startUpHook;
        atmosphereConfig53.startUpHook = startupHookList57;
        atmosphereConfig1.startUpHook = startupHookList57;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig1.framework;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(logger30);
        org.junit.Assert.assertNotNull(startupHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNull(atmosphereFramework60);
    }

    @Test
    public void test14073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14073");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig24.properties = strMap27;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig24.startupHook(startupHook29);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig24.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig32.framework();
        int int37 = atmosphereConfig32.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig32.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39);
        atmosphereConfig24.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig0.getframework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster45 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(atmosphereFramework44);
    }

    @Test
    public void test14074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14074");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        atmosphereConfig5.properties = strMap8;
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig5.getstartUpHook();
        java.lang.String str15 = atmosphereConfig5.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        atmosphereConfig17.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig21.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        boolean boolean26 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig23.setshutdownHooks(shutdownHookList27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig23.getstartUpHook();
        atmosphereConfig5.startUpHook = startupHookList29;
        boolean boolean31 = atmosphereConfig5.isSupportSession();
        atmosphereConfig5.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test14075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14075");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig7.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        atmosphereConfig10.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig10.getproperties();
        atmosphereConfig7.setproperties(strMap19);
        java.lang.String str22 = atmosphereConfig7.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig7.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig7.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig7.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        atmosphereConfig26.setSupportSession(false);
        boolean boolean30 = atmosphereConfig26.sessionTimeoutRemovalAllowed;
        boolean boolean31 = atmosphereConfig26.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig26.atmosphereHandlerConfig;
        atmosphereConfig7.atmosphereHandlerConfig = atmosphereHandlerConfigList32;
        boolean boolean34 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig7.shutdownHooks;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookList35);
    }

    @Test
    public void test14076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14076");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig1.framework = atmosphereFramework6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.properties();
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig1.getframework();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(atmosphereFramework12);
    }

    @Test
    public void test14077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14077");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig1.shutdownHook(shutdownHook10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig13.getlogger();
        java.lang.String str20 = atmosphereConfig13.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        atmosphereConfig22.properties = strMap25;
        atmosphereConfig22.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList29;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = null;
        atmosphereConfig1.startUpHook = startupHookList32;
        boolean boolean34 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        atmosphereConfig35.setSupportSession(false);
        boolean boolean39 = atmosphereConfig35.sessionTimeoutRemovalAllowed;
        atmosphereConfig35.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig35.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig43.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig43.shutdownHook(shutdownHook45);
        java.lang.String str49 = atmosphereConfig43.getInitParameter("hi!", "");
        boolean boolean50 = atmosphereConfig43.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig43.shutdownHook(shutdownHook51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig52.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig56.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig56.properties();
        atmosphereConfig55.properties = strMap58;
        boolean boolean60 = atmosphereConfig55.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig55.shutdownHook(shutdownHook61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig52.populate(atmosphereConfig55);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig63.getstartUpHook();
        atmosphereConfig42.startUpHook = startupHookList64;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig42.getproperties();
        atmosphereConfig42.setSessionTimeoutRemovalAllowed(false);
        boolean boolean69 = atmosphereConfig42.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig1.populate(atmosphereConfig42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig71.getAtmosphereHandlerConfig();
        boolean boolean73 = atmosphereConfig71.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = atmosphereConfig71.framework;
        java.lang.String str76 = atmosphereConfig71.getInitParameter("");
        java.lang.String str78 = atmosphereConfig71.getInitParameter("");
        boolean boolean79 = atmosphereConfig71.isThrowExceptionOnCloned();
        boolean boolean80 = atmosphereConfig71.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig71.properties();
        boolean boolean82 = atmosphereConfig71.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig71.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList84 = atmosphereConfig71.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = atmosphereConfig70.populate(atmosphereConfig71);
        boolean boolean86 = atmosphereConfig70.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(atmosphereFramework74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertNotNull(shutdownHookList84);
        org.junit.Assert.assertNotNull(atmosphereConfig85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test14078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14078");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        int int8 = atmosphereConfig0.getInitParameter("hi!", (int) 'a');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig27.shutdownHooks = shutdownHookList42;
        atmosphereConfig18.shutdownHooks = shutdownHookList42;
        atmosphereConfig10.setshutdownHooks(shutdownHookList42);
        atmosphereConfig0.setshutdownHooks(shutdownHookList42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig48.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig51.shutdownHooks;
        atmosphereConfig50.setshutdownHooks(shutdownHookList52);
        boolean boolean54 = atmosphereConfig50.isSupportSession();
        boolean boolean55 = atmosphereConfig50.isSupportSession();
        java.lang.String str57 = atmosphereConfig50.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig48.shutdownHooks = shutdownHookList58;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig48.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig48.setframework(atmosphereFramework61);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig48.framework = atmosphereFramework63;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig48.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig48.getstartUpHook();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 97 + "'", int8 == 97);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(startupHookList66);
    }

    @Test
    public void test14079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14079");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig1.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        int int13 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig8.framework = atmosphereFramework14;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig8.properties();
        boolean boolean17 = atmosphereConfig8.isSupportSession();
        boolean boolean18 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        atmosphereConfig8.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig8.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig1.populate(atmosphereConfig8);
        boolean boolean23 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig24.getframework();
        java.lang.String str27 = atmosphereConfig24.getInitParameter("");
        int int30 = atmosphereConfig24.getInitParameter("", (-1));
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig24.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework33);
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework37);
        atmosphereConfig38.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework41);
        atmosphereConfig42.setThrowExceptionOnCloned(false);
        int int47 = atmosphereConfig42.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        atmosphereConfig42.framework = atmosphereFramework48;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig42.properties();
        atmosphereConfig38.setproperties(strMap50);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig38.startUpHook;
        atmosphereConfig34.setstartUpHook(startupHookList52);
        int int56 = atmosphereConfig34.getInitParameter("", (int) (short) 1);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig34.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig34.properties;
        atmosphereConfig32.properties = strMap58;
        atmosphereConfig1.properties = strMap58;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test14080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14080");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        int int10 = atmosphereConfig5.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig5.framework = atmosphereFramework11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig5.properties();
        atmosphereConfig1.setproperties(strMap13);
        boolean boolean15 = atmosphereConfig1.isThrowExceptionOnCloned();
        atmosphereConfig1.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig1.getstartUpHook();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig1.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig1.framework;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext24 = atmosphereConfig1.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(atmosphereFramework23);
    }

    @Test
    public void test14081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14081");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = atmosphereConfig0.getframework();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNull(atmosphereFramework1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test14082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14082");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig9.properties();
        atmosphereConfig5.setproperties(strMap17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig5.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        org.slf4j.Logger logger25 = atmosphereConfig21.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig21.setframework(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig21.startUpHook = startupHookList29;
        atmosphereConfig1.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        atmosphereConfig33.startUpHook = startupHookList35;
        atmosphereConfig1.setstartUpHook(startupHookList35);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig1.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig42.properties();
        atmosphereConfig41.properties = strMap44;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig41.startupHook(startupHook46);
        boolean boolean48 = atmosphereConfig47.isSupportSession();
        boolean boolean49 = atmosphereConfig47.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig50.properties();
        atmosphereConfig47.setproperties(strMap52);
        atmosphereConfig47.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig39.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig39.shutdownHook(shutdownHook57);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
    }

    @Test
    public void test14083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14083");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig5.framework();
        int int10 = atmosphereConfig5.getInitParameter("hi!", 0);
        boolean boolean11 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig5.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig16.setThrowExceptionOnCloned(true);
        java.lang.String str22 = atmosphereConfig16.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig16.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList23;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig25.shutdownHook(shutdownHook27);
        java.lang.String str31 = atmosphereConfig25.getInitParameter("hi!", "");
        boolean boolean32 = atmosphereConfig25.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig25.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig34.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig37.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig37.getproperties();
        atmosphereConfig36.properties = strMap41;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework43);
        atmosphereConfig44.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework47);
        atmosphereConfig48.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework51);
        atmosphereConfig52.setThrowExceptionOnCloned(false);
        int int57 = atmosphereConfig52.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        atmosphereConfig52.framework = atmosphereFramework58;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig52.properties();
        atmosphereConfig48.setproperties(strMap60);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig48.startUpHook;
        atmosphereConfig44.setstartUpHook(startupHookList62);
        atmosphereConfig44.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig44.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig36.populate(atmosphereConfig44);
        boolean boolean68 = atmosphereConfig44.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig69.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig69.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig69.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = atmosphereConfig69.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig69.properties();
        atmosphereConfig44.setproperties(strMap74);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig76.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig76.shutdownHooks;
        atmosphereConfig44.setshutdownHooks(shutdownHookList78);
        atmosphereConfig44.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = atmosphereConfig44.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList81;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory85 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(atmosphereFramework73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNotNull(startupHookList81);
    }

    @Test
    public void test14084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14084");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.initComplete();
        int int8 = atmosphereConfig0.getInitParameter("", 0);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test14085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14085");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        atmosphereConfig13.throwExceptionOnCloned = false;
        atmosphereConfig13.initComplete();
        boolean boolean18 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test14086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14086");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.initComplete();
        java.lang.String str23 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean26 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties();
        atmosphereConfig28.properties = strMap31;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig28.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSupportSession();
        boolean boolean36 = atmosphereConfig34.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig34.setframework(atmosphereFramework37);
        atmosphereConfig34.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig34.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig34.properties();
        atmosphereConfig0.properties = strMap42;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test14087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14087");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        boolean boolean10 = atmosphereConfig7.isSupportSession();
        org.slf4j.Logger logger11 = atmosphereConfig7.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.startUpHook;
        atmosphereConfig7.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        atmosphereConfig16.setstartUpHook(startupHookList24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig16.setproperties(strMap30);
        boolean boolean35 = atmosphereConfig16.getInitParameter("", false);
        java.lang.String str38 = atmosphereConfig16.getInitParameter("hi!", "hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig16.properties();
        boolean boolean40 = atmosphereConfig16.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig16.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig16.getAtmosphereHandlerConfig();
        int int45 = atmosphereConfig16.getInitParameter("", (int) '#');
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig16.getstartUpHook();
        atmosphereConfig7.setstartUpHook(startupHookList47);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 35 + "'", int45 == 35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(startupHookList47);
    }

    @Test
    public void test14088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14088");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test14089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14089");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        boolean boolean8 = atmosphereConfig1.throwExceptionOnCloned;
        int int11 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.framework = atmosphereFramework12;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory14 = atmosphereConfig1.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test14090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14090");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.framework = atmosphereFramework9;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig11.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig11.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig11.setframework(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig11.startUpHook = startupHookList19;
        atmosphereConfig11.destroy();
        boolean boolean23 = atmosphereConfig11.isThrowExceptionOnCloned();
        org.slf4j.Logger logger24 = atmosphereConfig11.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str28 = atmosphereConfig25.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig25.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        boolean boolean32 = atmosphereConfig30.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig25.populate(atmosphereConfig30);
        boolean boolean34 = atmosphereConfig30.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig36.shutdownHooks;
        atmosphereConfig35.setshutdownHooks(shutdownHookList37);
        boolean boolean39 = atmosphereConfig35.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig35.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig35.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig35.shutdownHook(shutdownHook42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig43.getproperties();
        atmosphereConfig30.properties = strMap44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig11.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig49.properties();
        atmosphereConfig48.properties = strMap51;
        org.slf4j.Logger logger53 = atmosphereConfig48.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig48.framework = atmosphereFramework54;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig48.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        atmosphereConfig58.setThrowExceptionOnCloned(false);
        atmosphereConfig58.setSupportSession(false);
        boolean boolean63 = atmosphereConfig58.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig58.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig58.shutdownHooks;
        atmosphereConfig48.shutdownHooks = shutdownHookList65;
        atmosphereConfig30.setshutdownHooks(shutdownHookList65);
        atmosphereConfig1.shutdownHooks = shutdownHookList65;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig69.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig69.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig69.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig69.getproperties();
        boolean boolean74 = atmosphereConfig69.supportSession;
        atmosphereConfig69.destroy();
        atmosphereConfig69.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig69.getAtmosphereHandlerConfig();
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList77;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig1.atmosphereHandlerConfig;
        java.lang.String str82 = atmosphereConfig1.getInitParameter("", "hi!");
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(logger53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
    }

    @Test
    public void test14091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14091");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean8 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig1.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.setframework(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str17 = atmosphereConfig14.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig14.framework;
        atmosphereConfig14.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig14.shutdownHook(shutdownHook20);
        atmosphereConfig21.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig1.populate(atmosphereConfig21);
        atmosphereConfig1.setSupportSession(false);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
    }

    @Test
    public void test14092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14092");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.slf4j.Logger logger6 = atmosphereConfig1.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig9.properties = strMap12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig9.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig15.isSupportSession();
        boolean boolean17 = atmosphereConfig15.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig18.shutdownHook(shutdownHook20);
        org.slf4j.Logger logger22 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig18.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig18.startUpHook = startupHookList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig15.populate(atmosphereConfig18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        atmosphereConfig31.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.startupHook(startupHook34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig35.getstartUpHook();
        atmosphereConfig29.setstartUpHook(startupHookList40);
        atmosphereConfig1.startUpHook = startupHookList40;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig1.setframework(atmosphereFramework43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig1.startupHook(startupHook45);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider47 = atmosphereConfig1.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
    }

    @Test
    public void test14093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14093");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.getshutdownHooks();
        java.lang.String str18 = atmosphereConfig9.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework;
        java.lang.String str26 = atmosphereConfig0.getInitParameter("");
        boolean boolean27 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test14094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14094");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = null;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        atmosphereConfig10.supportSession = false;
        java.lang.String str22 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig8.populate(atmosphereConfig10);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig8.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig26.startupHook(startupHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig26.properties;
        atmosphereConfig8.properties = strMap33;
        org.slf4j.Logger logger35 = atmosphereConfig8.getlogger();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(logger35);
    }

    @Test
    public void test14095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14095");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.startUpHook = startupHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig15.properties = strMap18;
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig15.getshutdownHooks();
        boolean boolean23 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.lang.String str26 = atmosphereConfig15.getInitParameter("", "hi!");
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.lang.String str30 = atmosphereConfig15.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig15.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig33.setThrowExceptionOnCloned(true);
        java.lang.String str39 = atmosphereConfig33.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig33.getshutdownHooks();
        java.lang.String str42 = atmosphereConfig33.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig33.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig33.startupHook(startupHook44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        atmosphereConfig46.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig46.properties();
        atmosphereConfig33.setproperties(strMap50);
        atmosphereConfig33.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig54.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig54.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList58;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList58;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig1.startupHook(startupHook62);
        boolean boolean64 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test14096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14096");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.setframework(atmosphereFramework12);
        boolean boolean14 = atmosphereConfig1.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig1.startupHook(startupHook15);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test14097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14097");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        boolean boolean8 = atmosphereConfig1.throwExceptionOnCloned;
        boolean boolean9 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        int int16 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig11.properties();
        boolean boolean20 = atmosphereConfig11.isSupportSession();
        boolean boolean21 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        atmosphereConfig11.initComplete();
        atmosphereConfig11.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig1.framework;
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = null;
        atmosphereConfig1.startUpHook = startupHookList29;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNull(atmosphereFramework26);
    }

    @Test
    public void test14098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14098");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.lang.String str12 = atmosphereConfig1.getInitParameter("");
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str17 = atmosphereConfig14.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig14.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig19.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig14.populate(atmosphereConfig19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig14.getshutdownHooks();
        atmosphereConfig1.setshutdownHooks(shutdownHookList24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig28.shutdownHook(shutdownHook30);
        java.lang.String str34 = atmosphereConfig28.getInitParameter("hi!", "");
        boolean boolean35 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig28.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig28.startUpHook;
        boolean boolean39 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig41.shutdownHooks;
        atmosphereConfig40.setshutdownHooks(shutdownHookList42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        atmosphereConfig40.setstartUpHook(startupHookList45);
        atmosphereConfig28.startUpHook = startupHookList45;
        boolean boolean48 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig1.populate(atmosphereConfig28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig49.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig51.framework = atmosphereFramework52;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
    }

    @Test
    public void test14099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14099");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.framework = atmosphereFramework12;
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig1.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.shutdownHook(shutdownHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig18.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig18.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig18.setframework(atmosphereFramework21);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
    }

    @Test
    public void test14100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14100");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig8.framework();
        int int13 = atmosphereConfig8.getInitParameter("hi!", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        atmosphereConfig7.setproperties(strMap14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig7.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig17.framework();
        int int22 = atmosphereConfig17.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24, shutdownHookArray23);
        atmosphereConfig17.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        atmosphereConfig27.setSupportSession(false);
        boolean boolean31 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig27.getproperties();
        atmosphereConfig17.properties = strMap32;
        atmosphereConfig7.setproperties(strMap32);
        boolean boolean35 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test14101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14101");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig12.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.shutdownHook(shutdownHook17);
        org.slf4j.Logger logger19 = atmosphereConfig15.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig15.startupHook(startupHook20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.getstartUpHook();
        atmosphereConfig12.setstartUpHook(startupHookList22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig12.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        atmosphereConfig26.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig26.framework = atmosphereFramework33;
        boolean boolean35 = atmosphereConfig26.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig37.properties = strMap40;
        boolean boolean42 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig37.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig47.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig47.shutdownHook(shutdownHook49);
        org.slf4j.Logger logger51 = atmosphereConfig47.getlogger();
        java.lang.String str54 = atmosphereConfig47.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework55);
        atmosphereConfig56.setThrowExceptionOnCloned(false);
        int int61 = atmosphereConfig56.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig56.framework = atmosphereFramework62;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig56.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig56.startUpHook;
        atmosphereConfig47.setstartUpHook(startupHookList65);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = atmosphereConfig47.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig47.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = null;
        atmosphereConfig47.framework = atmosphereFramework69;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = atmosphereConfig47.shutdownHooks;
        atmosphereConfig44.setshutdownHooks(shutdownHookList71);
        atmosphereConfig26.shutdownHooks = shutdownHookList71;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig26.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList74);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig12.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(logger51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertNull(atmosphereFramework67);
        org.junit.Assert.assertNotNull(shutdownHookList68);
        org.junit.Assert.assertNotNull(shutdownHookList71);
        org.junit.Assert.assertNotNull(startupHookList74);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test14102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14102");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.slf4j.Logger logger8 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig7.shutdownHook(shutdownHook9);
        java.lang.String str12 = atmosphereConfig7.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig7.setframework(atmosphereFramework13);
        boolean boolean15 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig17.framework = atmosphereFramework24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig27.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig27.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig27.startUpHook;
        atmosphereConfig17.setstartUpHook(startupHookList37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig17.properties();
        atmosphereConfig7.setproperties(strMap39);
        boolean boolean41 = atmosphereConfig7.supportSession;
        atmosphereConfig7.initComplete();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test14103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14103");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        boolean boolean17 = atmosphereConfig16.isSupportSession();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig19.shutdownHook(shutdownHook21);
        org.slf4j.Logger logger23 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig19.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig16.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig1.populate(atmosphereConfig16);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig16.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        atmosphereConfig33.setSupportSession(false);
        boolean boolean37 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        atmosphereConfig33.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig33.setframework(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig41.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig47.properties = strMap50;
        atmosphereConfig47.throwExceptionOnCloned = true;
        atmosphereConfig47.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig41.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig59.properties();
        atmosphereConfig58.properties = strMap61;
        atmosphereConfig58.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig65.startUpHook;
        atmosphereConfig58.setstartUpHook(startupHookList66);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig70.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig70.properties();
        atmosphereConfig69.properties = strMap72;
        atmosphereConfig58.setproperties(strMap72);
        boolean boolean77 = atmosphereConfig58.getInitParameter("", false);
        java.lang.String str80 = atmosphereConfig58.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList81 = atmosphereConfig58.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList81;
        atmosphereConfig33.atmosphereHandlerConfig = atmosphereHandlerConfigList81;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList85 = atmosphereConfig84.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList86 = atmosphereConfig84.getstartUpHook();
        atmosphereConfig33.startUpHook = startupHookList86;
        atmosphereConfig16.setstartUpHook(startupHookList86);
        boolean boolean89 = atmosphereConfig16.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList90 = atmosphereConfig16.getshutdownHooks();
        boolean boolean91 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(startupHookList66);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList81);
        org.junit.Assert.assertNotNull(shutdownHookList85);
        org.junit.Assert.assertNotNull(startupHookList86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(shutdownHookList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test14104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14104");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        boolean boolean10 = atmosphereConfig7.getInitParameter("hi!", true);
        atmosphereConfig7.supportSession = false;
        atmosphereConfig7.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test14105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14105");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        atmosphereConfig1.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig1.framework;
        boolean boolean8 = atmosphereConfig1.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration9 = atmosphereConfig1.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test14106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14106");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig10.setframework(atmosphereFramework18);
        int int22 = atmosphereConfig10.getInitParameter("", 97);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig10.properties;
        atmosphereConfig0.properties = strMap23;
        boolean boolean25 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test14107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14107");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig1.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig1.properties();
        boolean boolean7 = atmosphereConfig1.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory8 = atmosphereConfig1.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test14108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14108");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean8 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig1.shutdownHooks;
        boolean boolean15 = atmosphereConfig1.supportSession;
        boolean boolean16 = atmosphereConfig1.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig1.properties();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test14109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14109");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.shutdownHook(shutdownHook17);
        java.lang.String str21 = atmosphereConfig15.getInitParameter("hi!", "");
        boolean boolean22 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig15.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        atmosphereConfig13.startUpHook = startupHookList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig30.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig30.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        atmosphereConfig35.throwExceptionOnCloned = true;
        atmosphereConfig35.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig35.getproperties();
        atmosphereConfig33.properties = strMap44;
        atmosphereConfig13.properties = strMap44;
        java.lang.Class<?> wildcardClass47 = atmosphereConfig13.getClass();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test14110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14110");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig6.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList9;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig11.framework();
        atmosphereConfig11.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig16.framework();
        int int21 = atmosphereConfig16.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig16.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23);
        boolean boolean26 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig11.populate(atmosphereConfig16);
        boolean boolean28 = atmosphereConfig16.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig31.properties = strMap34;
        atmosphereConfig31.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig31.shutdownHook(shutdownHook38);
        atmosphereConfig39.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig39.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig39.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig0.startupHook(startupHook44);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
    }

    @Test
    public void test14111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14111");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        org.slf4j.Logger logger6 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig15.properties = strMap18;
        atmosphereConfig15.throwExceptionOnCloned = true;
        atmosphereConfig15.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig9.populate(atmosphereConfig15);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig9.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig9.startUpHook;
        atmosphereConfig8.setstartUpHook(startupHookList26);
        atmosphereConfig8.throwExceptionOnCloned = false;
        atmosphereConfig8.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(startupHookList26);
    }

    @Test
    public void test14112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14112");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig22.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig29.getframework();
        boolean boolean31 = atmosphereConfig29.sessionTimeoutRemovalAllowed;
        boolean boolean32 = atmosphereConfig29.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig29.setframework(atmosphereFramework33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig29.getAtmosphereHandlerConfig();
        atmosphereConfig29.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig39.properties();
        atmosphereConfig38.properties = strMap41;
        atmosphereConfig38.throwExceptionOnCloned = true;
        atmosphereConfig38.sessionTimeoutRemovalAllowed = true;
        boolean boolean47 = atmosphereConfig38.isThrowExceptionOnCloned();
        boolean boolean48 = atmosphereConfig38.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig38.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig38.getproperties();
        atmosphereConfig29.properties = strMap50;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig29.getshutdownHooks();
        atmosphereConfig26.shutdownHooks = shutdownHookList52;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig26.getstartUpHook();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(startupHookList54);
    }

    @Test
    public void test14113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14113");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean18 = atmosphereConfig1.throwExceptionOnCloned;
        org.slf4j.Logger logger19 = atmosphereConfig1.getlogger();
        boolean boolean20 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        atmosphereConfig1.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig25.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig32.shutdownHooks;
        atmosphereConfig31.setshutdownHooks(shutdownHookList33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig31.getshutdownHooks();
        atmosphereConfig25.setshutdownHooks(shutdownHookList38);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig25.shutdownHook(shutdownHook40);
        java.lang.String str44 = atmosphereConfig41.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig1.populate(atmosphereConfig41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig47.properties = strMap50;
        boolean boolean52 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        atmosphereConfig47.setSupportSession(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig47.shutdownHooks;
        atmosphereConfig41.shutdownHooks = shutdownHookList55;
        atmosphereConfig41.setThrowExceptionOnCloned(true);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookList55);
    }

    @Test
    public void test14114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14114");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test14115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14115");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.initComplete();
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig10.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig19.shutdownHook(shutdownHook20);
        java.lang.String str23 = atmosphereConfig21.getInitParameter("");
        atmosphereConfig21.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        java.lang.String str31 = atmosphereConfig25.getInitParameter("");
        atmosphereConfig25.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig25.atmosphereHandlerConfig;
        atmosphereConfig25.initComplete();
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig25.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig38.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig38.shutdownHook(shutdownHook40);
        java.lang.String str44 = atmosphereConfig38.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig38.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig46.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig48.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig48.shutdownHook(shutdownHook50);
        java.lang.String str54 = atmosphereConfig48.getInitParameter("hi!", "");
        boolean boolean55 = atmosphereConfig48.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig48.shutdownHook(shutdownHook56);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig57.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig61.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig61.properties();
        atmosphereConfig60.properties = strMap63;
        boolean boolean65 = atmosphereConfig60.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig60.shutdownHook(shutdownHook66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig57.populate(atmosphereConfig60);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = null;
        atmosphereConfig60.setframework(atmosphereFramework69);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig60.shutdownHook(shutdownHook71);
        boolean boolean73 = atmosphereConfig60.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig60.getproperties();
        atmosphereConfig46.setproperties(strMap74);
        atmosphereConfig25.setproperties(strMap74);
        atmosphereConfig21.setproperties(strMap74);
        atmosphereConfig0.properties = strMap74;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test14116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14116");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig10.setThrowExceptionOnCloned(true);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        atmosphereConfig18.setstartUpHook(startupHookList26);
        atmosphereConfig10.startUpHook = startupHookList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig1.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        atmosphereConfig31.setThrowExceptionOnCloned(false);
        int int36 = atmosphereConfig31.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig31.framework = atmosphereFramework37;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig31.properties();
        boolean boolean40 = atmosphereConfig31.isSupportSession();
        boolean boolean41 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        atmosphereConfig31.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig31.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig29.populate(atmosphereConfig31);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig29.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig29.shutdownHooks;
        java.lang.Class<?> wildcardClass47 = atmosphereConfig29.getClass();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test14117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14117");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig4.framework;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList10);
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.throwExceptionOnCloned = true;
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig18.getproperties();
        atmosphereConfig16.properties = strMap27;
        atmosphereConfig0.setproperties(strMap27);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig35.shutdownHook(shutdownHook37);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("hi!", "");
        boolean boolean42 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig35.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46, startupHookArray45);
        atmosphereConfig44.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46);
        atmosphereConfig31.startUpHook = startupHookList46;
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46);
        boolean boolean51 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig53.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig53.shutdownHook(shutdownHook55);
        java.lang.String str59 = atmosphereConfig53.getInitParameter("hi!", "");
        boolean boolean60 = atmosphereConfig53.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig53.shutdownHook(shutdownHook61);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig62.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig62.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig62.framework;
        boolean boolean68 = atmosphereConfig62.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig62.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework70);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig72.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig72.properties();
        atmosphereConfig71.properties = strMap74;
        org.slf4j.Logger logger76 = atmosphereConfig71.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        atmosphereConfig71.framework = atmosphereFramework77;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig71.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework80);
        atmosphereConfig81.setThrowExceptionOnCloned(false);
        atmosphereConfig81.setSupportSession(false);
        boolean boolean86 = atmosphereConfig81.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList87 = atmosphereConfig81.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList88 = atmosphereConfig81.shutdownHooks;
        atmosphereConfig71.shutdownHooks = shutdownHookList88;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList90 = atmosphereConfig71.atmosphereHandlerConfig;
        atmosphereConfig62.atmosphereHandlerConfig = atmosphereHandlerConfigList90;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList90;
        boolean boolean93 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(startupHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(logger76);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(startupHookList87);
        org.junit.Assert.assertNotNull(shutdownHookList88);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test14118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14118");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        int int8 = atmosphereConfig0.getInitParameter("hi!", (int) 'a');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig27.shutdownHooks = shutdownHookList42;
        atmosphereConfig18.shutdownHooks = shutdownHookList42;
        atmosphereConfig10.setshutdownHooks(shutdownHookList42);
        atmosphereConfig0.setshutdownHooks(shutdownHookList42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig48.framework;
        atmosphereConfig48.setSupportSession(true);
        boolean boolean52 = atmosphereConfig48.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 97 + "'", int8 == 97);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test14119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14119");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig15.properties = strMap18;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig15.startupHook(startupHook20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig15.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig15.properties;
        atmosphereConfig0.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig0.setframework(atmosphereFramework25);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig27 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test14120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14120");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.setframework(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig8.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        atmosphereConfig14.throwExceptionOnCloned = true;
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig8.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig26.properties();
        atmosphereConfig25.properties = strMap28;
        atmosphereConfig25.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        atmosphereConfig25.setstartUpHook(startupHookList33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties();
        atmosphereConfig36.properties = strMap39;
        atmosphereConfig25.setproperties(strMap39);
        boolean boolean44 = atmosphereConfig25.getInitParameter("", false);
        java.lang.String str47 = atmosphereConfig25.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig51.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig51.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList53;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig57.properties();
        atmosphereConfig56.properties = strMap59;
        boolean boolean61 = atmosphereConfig56.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig56.shutdownHook(shutdownHook62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig63.startupHook(startupHook64);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig0.populate(atmosphereConfig65);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig66.startupHook(startupHook67);
        boolean boolean69 = atmosphereConfig68.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test14121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14121");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        boolean boolean9 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig1.setframework(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test14122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14122");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
    }

    @Test
    public void test14123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14123");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.getframework();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig1.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig1.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig1.framework;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
    }

    @Test
    public void test14124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14124");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.slf4j.Logger logger7 = atmosphereConfig1.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.getproperties();
        boolean boolean9 = atmosphereConfig1.supportSession;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test14125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14125");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.initComplete();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        atmosphereConfig11.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig11.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig21.shutdownHook(shutdownHook29);
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig30.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig30.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig37.properties = strMap40;
        atmosphereConfig37.throwExceptionOnCloned = true;
        boolean boolean44 = atmosphereConfig37.sessionTimeoutRemovalAllowed;
        boolean boolean45 = atmosphereConfig37.throwExceptionOnCloned;
        java.lang.String str47 = atmosphereConfig37.getInitParameter("hi!");
        atmosphereConfig37.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig37.setframework(atmosphereFramework50);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig37.framework;
        atmosphereConfig37.throwExceptionOnCloned = false;
        boolean boolean55 = atmosphereConfig37.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig37.getshutdownHooks();
        atmosphereConfig30.setshutdownHooks(shutdownHookList56);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(atmosphereFramework52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(shutdownHookList56);
    }

    @Test
    public void test14126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14126");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test14127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14127");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.lang.String str11 = atmosphereConfig5.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig5.getstartUpHook();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(startupHookList12);
    }

    @Test
    public void test14128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14128");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig10.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        boolean boolean16 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig10.framework = atmosphereFramework17;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test14129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14129");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.shutdownHook(shutdownHook14);
        atmosphereConfig15.sessionTimeoutRemovalAllowed = true;
        boolean boolean20 = atmosphereConfig15.getInitParameter("hi!", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig15.startUpHook;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
    }

    @Test
    public void test14130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14130");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.startupHook(startupHook3);
        atmosphereConfig4.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig8.properties = strMap11;
        boolean boolean13 = atmosphereConfig8.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig8.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig17.startupHook(startupHook22);
        boolean boolean24 = atmosphereConfig23.isSupportSession();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig26.shutdownHook(shutdownHook28);
        org.slf4j.Logger logger30 = atmosphereConfig26.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig26.setframework(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray33 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList34, startupHookArray33);
        atmosphereConfig26.startUpHook = startupHookList34;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig23.populate(atmosphereConfig26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig8.populate(atmosphereConfig23);
        boolean boolean41 = atmosphereConfig38.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig38.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig38.startUpHook;
        atmosphereConfig38.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig38.shutdownHooks;
        atmosphereConfig38.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig50.properties();
        atmosphereConfig49.properties = strMap52;
        atmosphereConfig49.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig49.framework = atmosphereFramework56;
        atmosphereConfig49.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig49.framework = atmosphereFramework60;
        atmosphereConfig49.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig64.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig64.properties();
        atmosphereConfig64.setSupportSession(false);
        atmosphereConfig64.setSupportSession(false);
        atmosphereConfig64.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig72.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig72.shutdownHook(shutdownHook74);
        java.lang.String str78 = atmosphereConfig72.getInitParameter("hi!", "");
        boolean boolean79 = atmosphereConfig72.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig72.shutdownHook(shutdownHook80);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList82 = atmosphereConfig81.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig81.atmosphereHandlerConfig;
        atmosphereConfig64.atmosphereHandlerConfig = atmosphereHandlerConfigList83;
        atmosphereConfig64.setThrowExceptionOnCloned(true);
        boolean boolean87 = atmosphereConfig64.throwExceptionOnCloned;
        boolean boolean90 = atmosphereConfig64.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList91 = atmosphereConfig64.getstartUpHook();
        atmosphereConfig49.startUpHook = startupHookList91;
        atmosphereConfig38.startUpHook = startupHookList91;
        atmosphereConfig4.startUpHook = startupHookList91;
        java.util.Map<java.lang.String, java.lang.Object> strMap95 = atmosphereConfig4.getproperties();
        boolean boolean96 = atmosphereConfig4.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(logger30);
        org.junit.Assert.assertNotNull(startupHookArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertNotNull(shutdownHookList82);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(startupHookList91);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test14131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14131");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        boolean boolean8 = atmosphereConfig0.supportSession;
        atmosphereConfig0.destroy();
        boolean boolean10 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(shutdownHookList13);
    }

    @Test
    public void test14132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14132");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        boolean boolean16 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        java.lang.String str19 = atmosphereConfig6.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        atmosphereConfig21.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        boolean boolean28 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig6.populate(atmosphereConfig27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig29.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig29.startupHook(startupHook32);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig29.shutdownHooks;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
    }

    @Test
    public void test14133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14133");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig12.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig12.setframework(atmosphereFramework19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig12.getproperties();
        atmosphereConfig0.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework;
        int int27 = atmosphereConfig0.getInitParameter("", (int) ' ');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig0.framework = atmosphereFramework28;
        boolean boolean30 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.startupHook(startupHook31);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider33 = atmosphereConfig32.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test14134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14134");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig9.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig9.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig1.populate(atmosphereConfig9);
        java.lang.String str24 = atmosphereConfig9.getInitParameter("hi!", "");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster25 = atmosphereConfig9.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test14135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14135");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        java.lang.String str15 = atmosphereConfig12.getInitParameter("", "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test14136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14136");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig1.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig1.shutdownHook(shutdownHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig1.shutdownHooks;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
    }

    @Test
    public void test14137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14137");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig1.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig1.setframework(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig1.framework;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory16 = atmosphereConfig1.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test14138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14138");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.shutdownHook(shutdownHook14);
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig0.setframework(atmosphereFramework18);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
    }

    @Test
    public void test14139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14139");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean8 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig1.shutdownHooks;
        boolean boolean15 = atmosphereConfig1.supportSession;
        boolean boolean16 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        atmosphereConfig20.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig20.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig20.getframework();
        atmosphereConfig20.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig20.atmosphereHandlerConfig;
        org.slf4j.Logger logger31 = atmosphereConfig20.getlogger();
        boolean boolean32 = atmosphereConfig20.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig1.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig20.shutdownHook(shutdownHook35);
        boolean boolean37 = atmosphereConfig36.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test14140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14140");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig7.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig7.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider33 = atmosphereConfig7.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(atmosphereFramework32);
    }

    @Test
    public void test14141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14141");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.initComplete();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        atmosphereConfig11.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig11.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig21.shutdownHook(shutdownHook29);
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.populate(atmosphereConfig30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig30.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig30.framework;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNull(atmosphereFramework35);
    }

    @Test
    public void test14142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14142");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig18.setThrowExceptionOnCloned(true);
        java.lang.String str24 = atmosphereConfig18.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig10.shutdownHooks = shutdownHookList25;
        atmosphereConfig1.shutdownHooks = shutdownHookList25;
        int int30 = atmosphereConfig1.getInitParameter("", (int) (byte) -1);
        java.lang.String str33 = atmosphereConfig1.getInitParameter("", "hi!");
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
    }

    @Test
    public void test14143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14143");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig12.startupHook(startupHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig12.getAtmosphereHandlerConfig();
        atmosphereConfig12.destroy();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
    }

    @Test
    public void test14144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14144");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig5.shutdownHook(shutdownHook9);
        int int13 = atmosphereConfig5.getInitParameter("", (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory14 = atmosphereConfig5.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
    }

    @Test
    public void test14145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14145");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig9.properties = strMap12;
        boolean boolean14 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig9.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig9.startupHook(startupHook17);
        int int21 = atmosphereConfig18.getInitParameter("", 32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig22.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig22.shutdownHook(shutdownHook24);
        java.lang.String str28 = atmosphereConfig22.getInitParameter("hi!", "");
        boolean boolean29 = atmosphereConfig22.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig22.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig22.startUpHook;
        boolean boolean33 = atmosphereConfig22.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        atmosphereConfig34.setshutdownHooks(shutdownHookList36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        atmosphereConfig34.setstartUpHook(startupHookList39);
        atmosphereConfig22.startUpHook = startupHookList39;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        atmosphereConfig43.setThrowExceptionOnCloned(false);
        int int48 = atmosphereConfig43.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig43.framework = atmosphereFramework49;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig43.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig43.startUpHook;
        atmosphereConfig22.startUpHook = startupHookList52;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig22.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig22.shutdownHooks;
        atmosphereConfig18.shutdownHooks = shutdownHookList56;
        atmosphereConfig0.shutdownHooks = shutdownHookList56;
        boolean boolean59 = atmosphereConfig0.supportSession;
        boolean boolean60 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test14146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14146");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig15.properties = strMap18;
        atmosphereConfig15.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        atmosphereConfig15.setstartUpHook(startupHookList23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        atmosphereConfig15.setproperties(strMap29);
        boolean boolean34 = atmosphereConfig15.getInitParameter("", false);
        java.lang.String str37 = atmosphereConfig15.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig15.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig15.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig40.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework48);
        atmosphereConfig49.setThrowExceptionOnCloned(false);
        int int54 = atmosphereConfig49.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        atmosphereConfig49.framework = atmosphereFramework55;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig49.properties();
        atmosphereConfig45.setproperties(strMap57);
        atmosphereConfig40.properties = strMap57;
        atmosphereConfig15.setproperties(strMap57);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig15.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList61);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig0.startupHook(startupHook64);
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
    }

    @Test
    public void test14147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14147");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig6.setshutdownHooks(shutdownHookList8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList11;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig19.shutdownHook(shutdownHook21);
        java.lang.String str25 = atmosphereConfig19.getInitParameter("hi!", "");
        boolean boolean26 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig19.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig19.startUpHook;
        boolean boolean30 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig32.shutdownHooks;
        atmosphereConfig31.setshutdownHooks(shutdownHookList33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        atmosphereConfig31.setstartUpHook(startupHookList36);
        atmosphereConfig19.startUpHook = startupHookList36;
        boolean boolean39 = atmosphereConfig19.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig19.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        atmosphereConfig43.properties = strMap46;
        atmosphereConfig43.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig50.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig50.shutdownHook(shutdownHook52);
        org.slf4j.Logger logger54 = atmosphereConfig50.getlogger();
        java.lang.String str57 = atmosphereConfig50.getInitParameter("hi!", "");
        boolean boolean58 = atmosphereConfig50.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig50.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig60.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig60.shutdownHook(shutdownHook62);
        org.slf4j.Logger logger64 = atmosphereConfig60.getlogger();
        atmosphereConfig60.supportSession = true;
        boolean boolean67 = atmosphereConfig60.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig70.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig70.properties();
        atmosphereConfig69.properties = strMap72;
        boolean boolean74 = atmosphereConfig69.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig69.shutdownHook(shutdownHook75);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig69.getshutdownHooks();
        atmosphereConfig60.setshutdownHooks(shutdownHookList77);
        atmosphereConfig50.setshutdownHooks(shutdownHookList77);
        atmosphereConfig43.shutdownHooks = shutdownHookList77;
        atmosphereConfig41.shutdownHooks = shutdownHookList77;
        atmosphereConfig18.setshutdownHooks(shutdownHookList77);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.throwExceptionOnCloned = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = atmosphereConfig18.getproperties();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(logger54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(logger64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test14148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14148");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = null;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList8;
        atmosphereConfig1.setSupportSession(true);
        java.lang.String str13 = atmosphereConfig1.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test14149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14149");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test14150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14150");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.startupHook(startupHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig9.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties;
        boolean boolean14 = atmosphereConfig9.getInitParameter("hi!", true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test14151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14151");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.startUpHook;
        java.lang.String str11 = atmosphereConfig0.getInitParameter("", "hi!");
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.startupHook(startupHook16);
        atmosphereConfig17.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig17.startUpHook;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList20);
    }

    @Test
    public void test14152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14152");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        boolean boolean23 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        atmosphereConfig22.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig22.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig22.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig22.framework = atmosphereFramework30;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory32 = atmosphereConfig22.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNull(atmosphereFramework29);
    }

    @Test
    public void test14153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14153");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.atmosphereHandlerConfig;
        java.lang.String str19 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.setframework(atmosphereFramework20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig24.properties = strMap27;
        atmosphereConfig24.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig24.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig24.getframework();
        atmosphereConfig24.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig24.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig24.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig43.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig43.getshutdownHooks();
        atmosphereConfig24.shutdownHooks = shutdownHookList45;
        atmosphereConfig0.setshutdownHooks(shutdownHookList45);
        boolean boolean48 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test14154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14154");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig4.framework;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList10);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig0.atmosphereHandlerConfig;
        java.lang.Class<?> wildcardClass16 = atmosphereHandlerConfigList15.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test14155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14155");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig11.shutdownHook(shutdownHook13);
        java.lang.String str17 = atmosphereConfig11.getInitParameter("hi!", "");
        boolean boolean18 = atmosphereConfig11.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig11.startUpHook;
        java.lang.String str22 = atmosphereConfig11.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig1.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig1.framework;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig1.setframework(atmosphereFramework28);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
    }

    @Test
    public void test14156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14156");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        int int10 = atmosphereConfig5.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig5.framework = atmosphereFramework11;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig5.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig5.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList16);
    }

    @Test
    public void test14157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14157");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        boolean boolean16 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        java.lang.String str19 = atmosphereConfig6.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        atmosphereConfig21.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        boolean boolean28 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig6.populate(atmosphereConfig27);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig32.shutdownHooks;
        atmosphereConfig31.setshutdownHooks(shutdownHookList33);
        boolean boolean35 = atmosphereConfig31.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig31.framework();
        org.slf4j.Logger logger37 = atmosphereConfig31.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig31.shutdownHook(shutdownHook38);
        java.lang.String str41 = atmosphereConfig39.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig39.shutdownHooks;
        atmosphereConfig27.setshutdownHooks(shutdownHookList42);
        boolean boolean44 = atmosphereConfig27.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(logger37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test14158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14158");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig1.framework = atmosphereFramework10;
        atmosphereConfig1.initComplete();
        boolean boolean15 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.supportSession = false;
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig17.framework = atmosphereFramework26;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig17.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig17.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig17.shutdownHook(shutdownHook31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework33);
        boolean boolean35 = atmosphereConfig34.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig34.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig34.setframework(atmosphereFramework37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig34.setframework(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig34.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig42.properties();
        atmosphereConfig42.setThrowExceptionOnCloned(true);
        java.lang.String str48 = atmosphereConfig42.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig42.getshutdownHooks();
        java.lang.String str51 = atmosphereConfig42.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig42.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig55.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig55.properties();
        atmosphereConfig54.properties = strMap57;
        atmosphereConfig54.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig54.setframework(atmosphereFramework61);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig54.getproperties();
        atmosphereConfig42.setproperties(strMap63);
        atmosphereConfig34.properties = strMap63;
        atmosphereConfig32.properties = strMap63;
        atmosphereConfig1.setproperties(strMap63);
        java.lang.Class<?> wildcardClass68 = strMap63.getClass();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test14159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14159");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.getframework();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig1.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig1.properties();
        java.lang.String str16 = atmosphereConfig1.getInitParameter("");
        boolean boolean17 = atmosphereConfig1.isThrowExceptionOnCloned();
        atmosphereConfig1.supportSession = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory20 = atmosphereConfig1.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test14160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14160");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        boolean boolean8 = atmosphereConfig1.throwExceptionOnCloned;
        boolean boolean9 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.properties;
        org.slf4j.Logger logger11 = atmosphereConfig1.getlogger();
        atmosphereConfig1.setSupportSession(true);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig16.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig16.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig16.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig16.setframework(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray23 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList24, startupHookArray23);
        atmosphereConfig16.startUpHook = startupHookList24;
        atmosphereConfig16.destroy();
        boolean boolean28 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig16.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig30.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig30.shutdownHook(shutdownHook32);
        org.slf4j.Logger logger34 = atmosphereConfig30.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig30.setframework(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList38, startupHookArray37);
        atmosphereConfig30.startUpHook = startupHookList38;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig30.framework = atmosphereFramework41;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig43.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig43.shutdownHook(shutdownHook45);
        org.slf4j.Logger logger47 = atmosphereConfig43.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig48.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig43.properties = strMap50;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig43.properties();
        atmosphereConfig30.setproperties(strMap52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig30.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig57.properties();
        atmosphereConfig56.properties = strMap59;
        boolean boolean61 = atmosphereConfig56.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig56.shutdownHook(shutdownHook62);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig56.getshutdownHooks();
        atmosphereConfig30.shutdownHooks = shutdownHookList64;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig16.populate(atmosphereConfig30);
        atmosphereConfig16.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig16.getproperties();
        atmosphereConfig1.properties = strMap69;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(startupHookArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(logger34);
        org.junit.Assert.assertNotNull(startupHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(logger47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(strMap69);
    }

    @Test
    public void test14161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14161");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
    }

    @Test
    public void test14162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14162");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        boolean boolean6 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig1.startupHook(startupHook8);
        boolean boolean10 = atmosphereConfig9.supportSession;
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig9.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig9.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.throwExceptionOnCloned = true;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        boolean boolean26 = atmosphereConfig17.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig17.shutdownHooks;
        atmosphereConfig9.setshutdownHooks(shutdownHookList27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        atmosphereConfig30.properties = strMap33;
        atmosphereConfig30.throwExceptionOnCloned = true;
        boolean boolean37 = atmosphereConfig30.sessionTimeoutRemovalAllowed;
        boolean boolean38 = atmosphereConfig30.throwExceptionOnCloned;
        java.lang.String str40 = atmosphereConfig30.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig30.startupHook(startupHook41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig42.framework;
        atmosphereConfig42.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig42.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig42.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig48.getframework();
        org.slf4j.Logger logger50 = atmosphereConfig48.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig51.shutdownHooks;
        atmosphereConfig51.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig51.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = atmosphereConfig51.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig51.properties();
        atmosphereConfig48.properties = strMap57;
        atmosphereConfig42.setproperties(strMap57);
        atmosphereConfig9.properties = strMap57;
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(logger50);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertNull(atmosphereFramework56);
        org.junit.Assert.assertNotNull(strMap57);
    }

    @Test
    public void test14163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14163");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        boolean boolean17 = atmosphereConfig16.isSupportSession();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig19.shutdownHook(shutdownHook21);
        org.slf4j.Logger logger23 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig19.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig16.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig1.populate(atmosphereConfig16);
        boolean boolean34 = atmosphereConfig31.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig31.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig31.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig31.getframework();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNull(atmosphereFramework37);
    }

    @Test
    public void test14164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14164");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        atmosphereConfig18.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        int int29 = atmosphereConfig24.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig24.framework = atmosphereFramework30;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig24.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig24.getframework();
        boolean boolean34 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig24.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig24.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig18.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.populate(atmosphereConfig37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        atmosphereConfig40.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        atmosphereConfig40.setstartUpHook(startupHookList48);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig52.properties();
        atmosphereConfig51.properties = strMap54;
        atmosphereConfig40.setproperties(strMap54);
        boolean boolean59 = atmosphereConfig40.getInitParameter("", false);
        java.lang.String str62 = atmosphereConfig40.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig40.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList64);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        int int70 = atmosphereConfig0.getInitParameter("", 10);
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = null;
        atmosphereConfig0.setframework(atmosphereFramework72);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
    }

    @Test
    public void test14165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14165");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig6.setshutdownHooks(shutdownHookList8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList11;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig0.getframework();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap20 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNull(atmosphereFramework19);
    }

    @Test
    public void test14166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14166");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean18 = atmosphereConfig1.throwExceptionOnCloned;
        org.slf4j.Logger logger19 = atmosphereConfig1.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig1.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig21.framework = atmosphereFramework22;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig21.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
    }

    @Test
    public void test14167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14167");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig5.framework();
        int int10 = atmosphereConfig5.getInitParameter("hi!", 0);
        boolean boolean11 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig5.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig16.setThrowExceptionOnCloned(true);
        java.lang.String str22 = atmosphereConfig16.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig16.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList23;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        atmosphereConfig26.setThrowExceptionOnCloned(false);
        atmosphereConfig26.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig26.framework = atmosphereFramework31;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig26.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig26.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig0.populate(atmosphereConfig26);
        boolean boolean38 = atmosphereConfig35.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        boolean boolean43 = atmosphereConfig40.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig40.startupHook(startupHook44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        atmosphereConfig47.setThrowExceptionOnCloned(false);
        int int52 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig47.framework = atmosphereFramework53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig47.properties();
        boolean boolean56 = atmosphereConfig47.isSupportSession();
        boolean boolean57 = atmosphereConfig47.sessionTimeoutRemovalAllowed;
        atmosphereConfig47.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig47.atmosphereHandlerConfig;
        atmosphereConfig47.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig40.populate(atmosphereConfig47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig62.shutdownHooks;
        atmosphereConfig62.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig62.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = atmosphereConfig62.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig62.properties();
        atmosphereConfig40.properties = strMap68;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig35.shutdownHooks = shutdownHookList70;
        java.lang.String str74 = atmosphereConfig35.getInitParameter("", "");
        atmosphereConfig35.destroy();
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig35.getshutdownHooks();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertNull(atmosphereFramework67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(shutdownHookList70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(shutdownHookList78);
    }

    @Test
    public void test14168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14168");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig1.startupHook(startupHook11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig1.getstartUpHook();
        boolean boolean16 = atmosphereConfig1.getInitParameter("", true);
        atmosphereConfig1.supportSession = true;
        boolean boolean19 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        boolean boolean20 = atmosphereConfig1.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test14169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14169");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        boolean boolean23 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig22.properties;
        int int28 = atmosphereConfig22.getInitParameter("", 10);
        boolean boolean29 = atmosphereConfig22.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig22.startUpHook;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
    }

    @Test
    public void test14170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14170");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig1.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap11 = atmosphereConfig1.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test14171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14171");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        org.slf4j.Logger logger14 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig10.setframework(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18, startupHookArray17);
        atmosphereConfig10.startUpHook = startupHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig7.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        atmosphereConfig23.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        atmosphereConfig23.setstartUpHook(startupHookList31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig34.properties = strMap37;
        atmosphereConfig23.setproperties(strMap37);
        boolean boolean42 = atmosphereConfig23.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig43.properties();
        atmosphereConfig23.setproperties(strMap45);
        atmosphereConfig21.properties = strMap45;
        boolean boolean48 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig49.properties();
        atmosphereConfig49.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig56.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig56.properties();
        atmosphereConfig55.properties = strMap58;
        atmosphereConfig55.throwExceptionOnCloned = true;
        atmosphereConfig55.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig49.populate(atmosphereConfig55);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig55.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig55.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig55.properties;
        atmosphereConfig21.setproperties(strMap67);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = atmosphereConfig21.framework;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(startupHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(startupHookList66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(atmosphereFramework69);
    }

    @Test
    public void test14172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14172");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        org.slf4j.Logger logger14 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig10.setframework(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18, startupHookArray17);
        atmosphereConfig10.startUpHook = startupHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig7.populate(atmosphereConfig10);
        atmosphereConfig21.supportSession = false;
        boolean boolean24 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        atmosphereConfig21.initComplete();
        boolean boolean26 = atmosphereConfig21.throwExceptionOnCloned;
        java.lang.Class<?> wildcardClass27 = atmosphereConfig21.getClass();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(startupHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test14173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14173");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        org.slf4j.Logger logger12 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig8.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig1.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework18);
        atmosphereConfig19.supportSession = false;
        atmosphereConfig19.setThrowExceptionOnCloned(true);
        atmosphereConfig19.destroy();
        atmosphereConfig19.initComplete();
        org.slf4j.Logger logger26 = atmosphereConfig19.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig19.startUpHook;
        atmosphereConfig19.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig19.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig17.populate(atmosphereConfig19);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig19.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig19.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig19.properties;
        atmosphereConfig19.supportSession = true;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test14174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14174");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        java.lang.String str5 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig7.properties;
        atmosphereConfig0.setproperties(strMap10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.shutdownHook(shutdownHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider15 = atmosphereConfig13.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test14175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14175");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        int int10 = atmosphereConfig5.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig5.framework = atmosphereFramework11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig5.properties();
        atmosphereConfig1.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.shutdownHook(shutdownHook17);
        java.lang.String str21 = atmosphereConfig15.getInitParameter("hi!", "");
        boolean boolean22 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig15.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig24.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig24.atmosphereHandlerConfig;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework28);
        atmosphereConfig29.setThrowExceptionOnCloned(false);
        atmosphereConfig29.setSupportSession(false);
        boolean boolean34 = atmosphereConfig29.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig29.getstartUpHook();
        atmosphereConfig1.startUpHook = startupHookList35;
        boolean boolean37 = atmosphereConfig1.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig1.getframework();
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(atmosphereFramework39);
    }

    @Test
    public void test14176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14176");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig1.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        int int13 = atmosphereConfig8.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig8.framework = atmosphereFramework14;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig8.properties();
        boolean boolean17 = atmosphereConfig8.isSupportSession();
        boolean boolean18 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        atmosphereConfig8.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig8.atmosphereHandlerConfig;
        atmosphereConfig8.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig1.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig23.shutdownHooks;
        atmosphereConfig23.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig23.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig23.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig23.properties();
        atmosphereConfig1.properties = strMap29;
        int int33 = atmosphereConfig1.getInitParameter("", 52);
        atmosphereConfig1.initComplete();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
    }

    @Test
    public void test14177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14177");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.setframework(atmosphereFramework12);
        atmosphereConfig1.supportSession = false;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test14178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14178");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig9.getstartUpHook();
        atmosphereConfig9.initComplete();
        java.lang.String str20 = atmosphereConfig9.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig9.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig9.framework();
        boolean boolean23 = atmosphereConfig9.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNull(atmosphereFramework29);
    }

    @Test
    public void test14179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14179");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        org.slf4j.Logger logger19 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig14.framework = atmosphereFramework20;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig14.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        atmosphereConfig24.setSupportSession(false);
        boolean boolean29 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig24.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig14.shutdownHooks = shutdownHookList31;
        atmosphereConfig1.shutdownHooks = shutdownHookList31;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig1.shutdownHook(shutdownHook36);
        boolean boolean38 = atmosphereConfig1.isThrowExceptionOnCloned();
        boolean boolean39 = atmosphereConfig1.isSupportSession();
        java.lang.String str42 = atmosphereConfig1.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test14180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14180");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean18 = atmosphereConfig13.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        atmosphereConfig20.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig20.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig20.getframework();
        atmosphereConfig20.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig20.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig20.properties();
        atmosphereConfig13.properties = strMap32;
        boolean boolean34 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider35 = atmosphereConfig13.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test14181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14181");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        boolean boolean12 = atmosphereConfig1.isThrowExceptionOnCloned();
        atmosphereConfig1.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig1.getproperties();
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test14182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14182");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
    }

    @Test
    public void test14183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14183");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        int int14 = atmosphereConfig0.getInitParameter("", (int) ' ');
        org.slf4j.Logger logger15 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig0.framework = atmosphereFramework16;
        atmosphereConfig0.initComplete();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig22.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig22.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig22.shutdownHook(shutdownHook26);
        boolean boolean28 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.populate(atmosphereConfig22);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        atmosphereConfig0.setproperties(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
    }

    @Test
    public void test14184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14184");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test14185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14185");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.framework();
        boolean boolean13 = atmosphereConfig1.getInitParameter("hi!", false);
        atmosphereConfig1.supportSession = true;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig1.shutdownHook(shutdownHook18);
        boolean boolean20 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test14186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14186");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.getshutdownHooks();
        java.lang.String str18 = atmosphereConfig9.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework;
        java.lang.String str26 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig0.startupHook(startupHook28);
        atmosphereConfig29.destroy();
        atmosphereConfig29.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
    }

    @Test
    public void test14187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14187");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        int int15 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig10.framework = atmosphereFramework16;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig10.properties();
        boolean boolean19 = atmosphereConfig10.isSupportSession();
        boolean boolean20 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean21 = atmosphereConfig10.isSupportSession();
        java.lang.String str24 = atmosphereConfig10.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig26.startupHook(startupHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig26.atmosphereHandlerConfig;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        boolean boolean37 = atmosphereConfig10.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig1.populate(atmosphereConfig10);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray39 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList40, atmosphereHandlerConfigArray39);
        atmosphereConfig38.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig38.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties();
        atmosphereConfig45.properties = strMap48;
        atmosphereConfig45.throwExceptionOnCloned = true;
        atmosphereConfig45.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig45.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig45.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig38.shutdownHooks = shutdownHookList56;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
    }

    @Test
    public void test14188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14188");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.startupHook(startupHook10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig7.properties;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test14189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14189");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        boolean boolean4 = atmosphereConfig0.supportSession;
        boolean boolean5 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test14190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14190");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig12.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig12.properties;
        atmosphereConfig10.properties = strMap20;
        atmosphereConfig10.throwExceptionOnCloned = true;
        atmosphereConfig10.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties();
        atmosphereConfig28.properties = strMap31;
        boolean boolean33 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig28.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig28.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig28.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig38.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig38.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        atmosphereConfig43.properties = strMap46;
        atmosphereConfig43.throwExceptionOnCloned = true;
        atmosphereConfig43.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig43.getproperties();
        atmosphereConfig41.properties = strMap52;
        atmosphereConfig28.properties = strMap52;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig28.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig28.shutdownHooks;
        atmosphereConfig10.setshutdownHooks(shutdownHookList56);
        boolean boolean58 = atmosphereConfig10.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test14191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14191");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig1.getstartUpHook();
        boolean boolean10 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.destroy();
        boolean boolean12 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig14.startupHook(startupHook19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig14.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig14.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig14.startupHook(startupHook24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig14.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig14.startupHook(startupHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.getshutdownHooks();
        atmosphereConfig1.setshutdownHooks(shutdownHookList29);
        boolean boolean31 = atmosphereConfig1.supportSession;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test14192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14192");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig1.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig1.shutdownHooks = shutdownHookList22;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig1.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        boolean boolean32 = atmosphereConfig27.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig27.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties();
        atmosphereConfig36.properties = strMap39;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig36.startupHook(startupHook41);
        boolean boolean43 = atmosphereConfig42.isSupportSession();
        boolean boolean44 = atmosphereConfig42.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig45.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig45.shutdownHook(shutdownHook47);
        org.slf4j.Logger logger49 = atmosphereConfig45.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig45.setframework(atmosphereFramework50);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray52 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList53, startupHookArray52);
        atmosphereConfig45.startUpHook = startupHookList53;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig42.populate(atmosphereConfig45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig27.populate(atmosphereConfig42);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig42.properties();
        atmosphereConfig1.setproperties(strMap58);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig1.shutdownHook(shutdownHook61);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(logger49);
        org.junit.Assert.assertNotNull(startupHookArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
    }

    @Test
    public void test14193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14193");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str5 = atmosphereConfig2.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig2.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig7.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig2.populate(atmosphereConfig7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig7.getstartUpHook();
        boolean boolean13 = atmosphereConfig7.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig7);
        boolean boolean15 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test14194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14194");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig10.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig10.getframework();
        atmosphereConfig10.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.framework();
        int int25 = atmosphereConfig20.getInitParameter("hi!", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig20.startUpHook;
        atmosphereConfig10.startUpHook = startupHookList26;
        java.lang.String str30 = atmosphereConfig10.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig1.setshutdownHooks(shutdownHookList31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig1.getframework();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNull(atmosphereFramework34);
    }

    @Test
    public void test14195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14195");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList3 = atmosphereConfig1.getAtmosphereHandlerConfig();
        boolean boolean4 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig1.shutdownHook(shutdownHook5);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
    }

    @Test
    public void test14196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14196");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        atmosphereConfig0.initComplete();
        java.lang.String str17 = atmosphereConfig0.getInitParameter("", "");
        org.slf4j.Logger logger18 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(logger18);
    }

    @Test
    public void test14197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14197");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        boolean boolean16 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig19.framework();
        int int24 = atmosphereConfig19.getInitParameter("hi!", 0);
        boolean boolean25 = atmosphereConfig19.isSupportSession();
        atmosphereConfig19.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties();
        atmosphereConfig28.properties = strMap31;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig28.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig34.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig19.populate(atmosphereConfig34);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig36.getproperties();
        atmosphereConfig18.setproperties(strMap37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig18.startUpHook;
        java.lang.String str41 = atmosphereConfig18.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test14198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14198");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        int int15 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig10.framework = atmosphereFramework16;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig10.properties();
        boolean boolean19 = atmosphereConfig10.isSupportSession();
        boolean boolean20 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean21 = atmosphereConfig10.isSupportSession();
        java.lang.String str24 = atmosphereConfig10.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig26.startupHook(startupHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig26.atmosphereHandlerConfig;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        boolean boolean37 = atmosphereConfig10.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig1.populate(atmosphereConfig10);
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig45.properties();
        atmosphereConfig44.properties = strMap47;
        atmosphereConfig44.throwExceptionOnCloned = true;
        atmosphereConfig44.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig44.getproperties();
        atmosphereConfig44.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig56.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig56.shutdownHook(shutdownHook58);
        org.slf4j.Logger logger60 = atmosphereConfig56.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig56.setframework(atmosphereFramework61);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray63 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList64, startupHookArray63);
        atmosphereConfig56.startUpHook = startupHookList64;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig56.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig56.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = atmosphereConfig56.getstartUpHook();
        atmosphereConfig44.setstartUpHook(startupHookList69);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig44.properties;
        atmosphereConfig1.properties = strMap71;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = atmosphereConfig1.framework();
        boolean boolean74 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(logger60);
        org.junit.Assert.assertNotNull(startupHookArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertNotNull(shutdownHookList68);
        org.junit.Assert.assertNotNull(startupHookList69);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(atmosphereFramework73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test14199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14199");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        boolean boolean6 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig1.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.framework();
        int int14 = atmosphereConfig9.getInitParameter("hi!", 0);
        boolean boolean15 = atmosphereConfig9.supportSession;
        boolean boolean16 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig17.shutdownHook(shutdownHook19);
        java.lang.String str23 = atmosphereConfig17.getInitParameter("hi!", "");
        boolean boolean24 = atmosphereConfig17.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig17.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig26.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig31.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig31.shutdownHook(shutdownHook33);
        java.lang.String str37 = atmosphereConfig31.getInitParameter("hi!", "");
        boolean boolean38 = atmosphereConfig31.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig31.startUpHook;
        atmosphereConfig26.startUpHook = startupHookList39;
        atmosphereConfig9.startUpHook = startupHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig9.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties();
        atmosphereConfig45.properties = strMap48;
        atmosphereConfig45.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig9.shutdownHooks = shutdownHookList52;
        atmosphereConfig1.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig1.shutdownHook(shutdownHook55);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList62 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList62);
    }

    @Test
    public void test14200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14200");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        atmosphereConfig5.properties = strMap8;
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig5.getstartUpHook();
        java.lang.String str15 = atmosphereConfig5.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig5.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig17.getframework();
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNull(atmosphereFramework18);
    }

    @Test
    public void test14201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14201");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        boolean boolean10 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig13.properties;
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig19.getstartUpHook();
        atmosphereConfig13.startUpHook = startupHookList22;
        atmosphereConfig1.setstartUpHook(startupHookList22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
    }

    @Test
    public void test14202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14202");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.setframework(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig1.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.startupHook(startupHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig13.getshutdownHooks();
        atmosphereConfig1.setshutdownHooks(shutdownHookList20);
        int int24 = atmosphereConfig1.getInitParameter("", (int) (byte) 100);
        atmosphereConfig1.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        atmosphereConfig27.supportSession = false;
        atmosphereConfig27.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig27.shutdownHook(shutdownHook32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig1.populate(atmosphereConfig33);
        boolean boolean35 = atmosphereConfig34.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test14203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14203");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.shutdownHook(shutdownHook11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig12.getproperties();
        boolean boolean14 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = true;
        boolean boolean25 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig29.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList30);
        boolean boolean32 = atmosphereConfig28.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig28.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig28.getAtmosphereHandlerConfig();
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig16.setframework(atmosphereFramework37);
        atmosphereConfig16.supportSession = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig16.shutdownHooks;
        atmosphereConfig12.shutdownHooks = shutdownHookList41;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(shutdownHookList41);
    }

    @Test
    public void test14204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14204");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        atmosphereConfig18.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        int int29 = atmosphereConfig24.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig24.framework = atmosphereFramework30;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig24.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig24.getframework();
        boolean boolean34 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig24.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig24.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig18.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.populate(atmosphereConfig37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        atmosphereConfig40.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        atmosphereConfig40.setstartUpHook(startupHookList48);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig52.properties();
        atmosphereConfig51.properties = strMap54;
        atmosphereConfig40.setproperties(strMap54);
        boolean boolean59 = atmosphereConfig40.getInitParameter("", false);
        java.lang.String str62 = atmosphereConfig40.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig40.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList64);
        boolean boolean66 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test14205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14205");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        int int14 = atmosphereConfig0.getInitParameter("", (int) ' ');
        org.slf4j.Logger logger15 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig0.setframework(atmosphereFramework16);
        java.lang.String str20 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean21 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.framework();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap23 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(atmosphereFramework22);
    }

    @Test
    public void test14206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14206");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.getframework();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig1.framework = atmosphereFramework14;
        boolean boolean18 = atmosphereConfig1.getInitParameter("hi!", true);
        boolean boolean19 = atmosphereConfig1.supportSession;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test14207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14207");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        atmosphereConfig5.properties = strMap8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig5.properties();
        boolean boolean11 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        atmosphereConfig13.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        atmosphereConfig13.setstartUpHook(startupHookList21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig24.properties = strMap27;
        atmosphereConfig13.setproperties(strMap27);
        boolean boolean32 = atmosphereConfig13.getInitParameter("", false);
        java.lang.String str35 = atmosphereConfig13.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig13.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig38.shutdownHooks;
        atmosphereConfig38.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        atmosphereConfig43.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        atmosphereConfig47.setThrowExceptionOnCloned(false);
        int int52 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig47.framework = atmosphereFramework53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig47.properties();
        atmosphereConfig43.setproperties(strMap55);
        atmosphereConfig38.properties = strMap55;
        atmosphereConfig13.setproperties(strMap55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig5.populate(atmosphereConfig13);
        atmosphereConfig13.setSupportSession(true);
        java.lang.String str64 = atmosphereConfig13.getInitParameter("", "");
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test14208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14208");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        boolean boolean15 = atmosphereConfig0.getInitParameter("hi!", false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test14209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14209");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        atmosphereConfig5.properties = strMap8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig5.properties();
        boolean boolean11 = atmosphereConfig5.isSessionTimeoutRemovalAllowed();
        boolean boolean12 = atmosphereConfig5.isThrowExceptionOnCloned();
        atmosphereConfig5.initComplete();
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test14210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14210");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.supportSession;
        int int8 = atmosphereConfig0.getInitParameter("hi!", (-1));
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig10.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig10.setproperties(strMap24);
        boolean boolean29 = atmosphereConfig10.getInitParameter("", false);
        java.lang.String str32 = atmosphereConfig10.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig10.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework43);
        atmosphereConfig44.setThrowExceptionOnCloned(false);
        int int49 = atmosphereConfig44.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig44.framework = atmosphereFramework50;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig44.properties();
        atmosphereConfig40.setproperties(strMap52);
        atmosphereConfig35.properties = strMap52;
        atmosphereConfig10.setproperties(strMap52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList56;
        org.slf4j.Logger logger58 = atmosphereConfig0.getlogger();
        int int61 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig0.properties;
        atmosphereConfig0.throwExceptionOnCloned = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.throwExceptionOnCloned = true;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(logger58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(startupHookList65);
    }

    @Test
    public void test14211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14211");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig5.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig5.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig9.startupHook(startupHook11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig9.properties;
        java.lang.String str16 = atmosphereConfig9.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test14212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14212");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        atmosphereConfig8.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        int int19 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig14.framework = atmosphereFramework20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig14.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig14.getframework();
        boolean boolean24 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig14.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig14.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig8.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        atmosphereConfig30.properties = strMap33;
        boolean boolean35 = atmosphereConfig30.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig30.startupHook(startupHook36);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties();
        atmosphereConfig39.properties = strMap42;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig39.startupHook(startupHook44);
        boolean boolean46 = atmosphereConfig45.isSupportSession();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig48.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig48.shutdownHook(shutdownHook50);
        org.slf4j.Logger logger52 = atmosphereConfig48.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig48.setframework(atmosphereFramework53);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray55 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList56, startupHookArray55);
        atmosphereConfig48.startUpHook = startupHookList56;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig45.populate(atmosphereConfig48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig30.populate(atmosphereConfig45);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig45.properties();
        atmosphereConfig0.setproperties(strMap61);
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.slf4j.Logger logger65 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(logger52);
        org.junit.Assert.assertNotNull(startupHookArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(logger65);
    }

    @Test
    public void test14213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14213");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig1.initComplete();
        atmosphereConfig1.supportSession = true;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test14214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14214");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        atmosphereConfig20.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        atmosphereConfig20.setstartUpHook(startupHookList28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig31.properties = strMap34;
        atmosphereConfig20.setproperties(strMap34);
        boolean boolean37 = atmosphereConfig20.throwExceptionOnCloned;
        org.slf4j.Logger logger38 = atmosphereConfig20.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig15.populate(atmosphereConfig20);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig15.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory41 = atmosphereConfig15.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test14215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14215");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        int int10 = atmosphereConfig5.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig5.framework = atmosphereFramework11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig5.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig14.framework;
        org.slf4j.Logger logger16 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig22.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig24.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig24.getshutdownHooks();
        atmosphereConfig14.shutdownHooks = shutdownHookList26;
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        atmosphereConfig30.properties = strMap33;
        atmosphereConfig30.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig30.framework = atmosphereFramework37;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        atmosphereConfig40.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig40.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig40.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig40.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig40.startUpHook;
        atmosphereConfig30.setstartUpHook(startupHookList50);
        atmosphereConfig0.setstartUpHook(startupHookList50);
        boolean boolean53 = atmosphereConfig0.isSupportSession();
        boolean boolean56 = atmosphereConfig0.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig57.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig57.shutdownHook(shutdownHook59);
        org.slf4j.Logger logger61 = atmosphereConfig57.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig57.setframework(atmosphereFramework62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList65, startupHookArray64);
        atmosphereConfig57.startUpHook = startupHookList65;
        atmosphereConfig57.destroy();
        boolean boolean69 = atmosphereConfig57.isThrowExceptionOnCloned();
        org.slf4j.Logger logger70 = atmosphereConfig57.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str74 = atmosphereConfig71.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework75 = atmosphereConfig71.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig76.getAtmosphereHandlerConfig();
        boolean boolean78 = atmosphereConfig76.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig71.populate(atmosphereConfig76);
        boolean boolean80 = atmosphereConfig76.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig82.shutdownHooks;
        atmosphereConfig81.setshutdownHooks(shutdownHookList83);
        boolean boolean85 = atmosphereConfig81.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework86 = atmosphereConfig81.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList87 = atmosphereConfig81.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook88 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig89 = atmosphereConfig81.shutdownHook(shutdownHook88);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = atmosphereConfig89.getproperties();
        atmosphereConfig76.properties = strMap90;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig92 = atmosphereConfig57.populate(atmosphereConfig76);
        boolean boolean93 = atmosphereConfig57.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = atmosphereConfig57.getproperties();
        atmosphereConfig0.properties = strMap94;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext96 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(logger61);
        org.junit.Assert.assertNotNull(startupHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(logger70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNull(atmosphereFramework75);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(atmosphereFramework86);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList87);
        org.junit.Assert.assertNotNull(atmosphereConfig89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(atmosphereConfig92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test14216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14216");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.getproperties();
        boolean boolean6 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test14217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14217");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig0.getInitParameter("", 1);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test14218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14218");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig5.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        boolean boolean10 = atmosphereConfig9.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.shutdownHooks;
        atmosphereConfig7.setshutdownHooks(shutdownHookList11);
        atmosphereConfig7.destroy();
        boolean boolean14 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig16.framework = atmosphereFramework23;
        java.lang.String str26 = atmosphereConfig16.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str30 = atmosphereConfig27.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig27.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig27.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig32.shutdownHook(shutdownHook36);
        boolean boolean38 = atmosphereConfig32.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig32.getshutdownHooks();
        atmosphereConfig16.shutdownHooks = shutdownHookList39;
        atmosphereConfig16.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig7.populate(atmosphereConfig16);
        atmosphereConfig16.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
    }

    @Test
    public void test14219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14219");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig8.properties = strMap11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig14.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig14.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig6.populate(atmosphereConfig14);
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig6.throwExceptionOnCloned = false;
        boolean boolean22 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        atmosphereConfig26.setshutdownHooks(shutdownHookList28);
        atmosphereConfig23.setshutdownHooks(shutdownHookList28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig31.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        atmosphereConfig23.properties = strMap33;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig23.getproperties();
        atmosphereConfig6.properties = strMap35;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig6.framework = atmosphereFramework37;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig6.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig6.getshutdownHooks();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
    }

    @Test
    public void test14220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14220");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = null;
        atmosphereConfig7.shutdownHooks = shutdownHookList8;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig7.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig7.setframework(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig7.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig20.properties();
        atmosphereConfig19.properties = strMap22;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig19.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties();
        atmosphereConfig36.properties = strMap39;
        atmosphereConfig36.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig36.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig44.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        atmosphereConfig44.setThrowExceptionOnCloned(true);
        java.lang.String str50 = atmosphereConfig44.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig44.getshutdownHooks();
        atmosphereConfig36.shutdownHooks = shutdownHookList51;
        atmosphereConfig27.shutdownHooks = shutdownHookList51;
        atmosphereConfig19.setshutdownHooks(shutdownHookList51);
        atmosphereConfig16.setshutdownHooks(shutdownHookList51);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework56);
        atmosphereConfig57.supportSession = false;
        atmosphereConfig57.setThrowExceptionOnCloned(true);
        atmosphereConfig57.destroy();
        atmosphereConfig57.initComplete();
        org.slf4j.Logger logger64 = atmosphereConfig57.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig57.startUpHook;
        atmosphereConfig16.setstartUpHook(startupHookList65);
        atmosphereConfig7.setstartUpHook(startupHookList65);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertNotNull(logger64);
        org.junit.Assert.assertNotNull(startupHookList65);
    }

    @Test
    public void test14221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14221");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", true);
        boolean boolean13 = atmosphereConfig0.supportSession;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        org.slf4j.Logger logger22 = atmosphereConfig17.getlogger();
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig17.setframework(atmosphereFramework25);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig17.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.properties();
        atmosphereConfig29.properties = strMap32;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig29.startupHook(startupHook34);
        boolean boolean36 = atmosphereConfig35.isSupportSession();
        boolean boolean37 = atmosphereConfig35.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig38.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig38.shutdownHook(shutdownHook40);
        org.slf4j.Logger logger42 = atmosphereConfig38.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig38.setframework(atmosphereFramework43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46, startupHookArray45);
        atmosphereConfig38.startUpHook = startupHookList46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig35.populate(atmosphereConfig38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework50);
        atmosphereConfig51.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig51.startupHook(startupHook54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig56.properties();
        atmosphereConfig55.properties = strMap58;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig55.getstartUpHook();
        atmosphereConfig49.setstartUpHook(startupHookList60);
        atmosphereConfig17.startUpHook = startupHookList60;
        atmosphereConfig0.startUpHook = startupHookList60;
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(logger42);
        org.junit.Assert.assertNotNull(startupHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(startupHookList60);
    }

    @Test
    public void test14222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14222");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        boolean boolean12 = atmosphereConfig9.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig9.setframework(atmosphereFramework13);
        boolean boolean15 = atmosphereConfig9.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.shutdownHooks;
        int int19 = atmosphereConfig9.getInitParameter("", (int) (byte) 100);
        boolean boolean20 = atmosphereConfig9.isSupportSession();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test14223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14223");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig6.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig6.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean19 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig0.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        int int29 = atmosphereConfig24.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig24.framework = atmosphereFramework30;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig24.properties();
        boolean boolean33 = atmosphereConfig24.isSupportSession();
        boolean boolean34 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties();
        atmosphereConfig36.properties = strMap39;
        boolean boolean41 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig36.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig43.startupHook(startupHook44);
        boolean boolean46 = atmosphereConfig45.supportSession;
        java.lang.String str49 = atmosphereConfig45.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig45.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig45.startUpHook;
        atmosphereConfig24.setstartUpHook(startupHookList51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig0.populate(atmosphereConfig24);
        org.slf4j.Logger logger54 = atmosphereConfig24.getlogger();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(logger54);
    }

    @Test
    public void test14224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14224");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        boolean boolean13 = atmosphereConfig10.getInitParameter("hi!", false);
        atmosphereConfig10.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test14225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14225");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig12);
        boolean boolean21 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        atmosphereConfig23.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig23.framework = atmosphereFramework30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig32.setThrowExceptionOnCloned(true);
        java.lang.String str38 = atmosphereConfig32.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        atmosphereConfig40.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        atmosphereConfig40.setstartUpHook(startupHookList48);
        atmosphereConfig32.startUpHook = startupHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig23.populate(atmosphereConfig32);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig32.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig32.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig32.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig32.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList55);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(startupHookList55);
    }

    @Test
    public void test14226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14226");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        boolean boolean8 = atmosphereConfig1.throwExceptionOnCloned;
        boolean boolean9 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        atmosphereConfig12.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig12.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig12.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.properties;
        atmosphereConfig1.setproperties(strMap18);
        int int22 = atmosphereConfig1.getInitParameter("hi!", (int) 'a');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig1.shutdownHooks;
        java.lang.String str25 = atmosphereConfig1.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test14227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14227");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean18 = atmosphereConfig13.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        atmosphereConfig20.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig20.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig20.getframework();
        atmosphereConfig20.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig20.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig20.properties();
        atmosphereConfig13.properties = strMap32;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        atmosphereConfig35.supportSession = false;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig35.framework = atmosphereFramework44;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(false);
        boolean boolean50 = atmosphereConfig35.getInitParameter("", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig35.atmosphereHandlerConfig;
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig53.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig53.getproperties();
        atmosphereConfig13.setproperties(strMap56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig58.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig58.shutdownHook(shutdownHook60);
        org.slf4j.Logger logger62 = atmosphereConfig58.getlogger();
        java.lang.String str65 = atmosphereConfig58.getInitParameter("hi!", "");
        boolean boolean66 = atmosphereConfig58.sessionTimeoutRemovalAllowed;
        boolean boolean67 = atmosphereConfig58.throwExceptionOnCloned;
        atmosphereConfig58.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig13.populate(atmosphereConfig58);
        boolean boolean71 = atmosphereConfig58.supportSession;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(shutdownHookList59);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(logger62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test14228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14228");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig12);
        boolean boolean23 = atmosphereConfig12.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig24.setThrowExceptionOnCloned(true);
        java.lang.String str30 = atmosphereConfig24.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig24.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig24.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig24.properties();
        atmosphereConfig12.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str39 = atmosphereConfig36.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig36.framework;
        atmosphereConfig36.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig36.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig44.framework();
        int int49 = atmosphereConfig44.getInitParameter("hi!", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig44.properties;
        atmosphereConfig43.setproperties(strMap50);
        atmosphereConfig12.properties = strMap50;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig12.getshutdownHooks();
        atmosphereConfig12.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig12.setframework(atmosphereFramework56);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext58 = atmosphereConfig12.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(shutdownHookList53);
    }

    @Test
    public void test14229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14229");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.shutdownHook(shutdownHook17);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster19 = atmosphereConfig15.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
    }

    @Test
    public void test14230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14230");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.slf4j.Logger logger6 = atmosphereConfig1.getlogger();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.setframework(atmosphereFramework9);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.setframework(atmosphereFramework12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig1.properties;
        boolean boolean15 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test14231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14231");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean18 = atmosphereConfig13.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        atmosphereConfig20.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig20.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig20.getframework();
        atmosphereConfig20.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig20.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig20.properties();
        atmosphereConfig13.properties = strMap32;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        atmosphereConfig35.supportSession = false;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig35.framework = atmosphereFramework44;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(false);
        boolean boolean50 = atmosphereConfig35.getInitParameter("", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig35.atmosphereHandlerConfig;
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        boolean boolean53 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig56.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig56.properties();
        atmosphereConfig55.properties = strMap58;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig55.startupHook(startupHook60);
        boolean boolean62 = atmosphereConfig61.isSupportSession();
        boolean boolean63 = atmosphereConfig61.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig64.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = atmosphereConfig64.shutdownHook(shutdownHook66);
        org.slf4j.Logger logger68 = atmosphereConfig64.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = null;
        atmosphereConfig64.setframework(atmosphereFramework69);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray71 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList72, startupHookArray71);
        atmosphereConfig64.startUpHook = startupHookList72;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig61.populate(atmosphereConfig64);
        atmosphereConfig75.supportSession = false;
        boolean boolean78 = atmosphereConfig75.isSessionTimeoutRemovalAllowed();
        atmosphereConfig75.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = atmosphereConfig75.startUpHook;
        atmosphereConfig13.startUpHook = startupHookList81;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList83 = atmosphereConfig13.getshutdownHooks();
        org.slf4j.Logger logger84 = atmosphereConfig13.getlogger();
        boolean boolean85 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(atmosphereConfig67);
        org.junit.Assert.assertNotNull(logger68);
        org.junit.Assert.assertNotNull(startupHookArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(startupHookList81);
        org.junit.Assert.assertNotNull(shutdownHookList83);
        org.junit.Assert.assertNotNull(logger84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test14232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14232");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = atmosphereConfig0.getframework();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("");
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        boolean boolean9 = atmosphereConfig0.getInitParameter("hi!", true);
        org.junit.Assert.assertNull(atmosphereFramework1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test14233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14233");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig7.getproperties();
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig7.properties;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test14234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14234");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        int int15 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig10.framework = atmosphereFramework16;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig10.properties();
        boolean boolean19 = atmosphereConfig10.isSupportSession();
        boolean boolean20 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean21 = atmosphereConfig10.isSupportSession();
        java.lang.String str24 = atmosphereConfig10.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig26.startupHook(startupHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig26.atmosphereHandlerConfig;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        boolean boolean37 = atmosphereConfig10.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig1.populate(atmosphereConfig10);
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig1.framework();
        boolean boolean42 = atmosphereConfig1.isSupportSession();
        atmosphereConfig1.supportSession = false;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test14235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14235");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.shutdownHook(shutdownHook21);
        atmosphereConfig22.initComplete();
        boolean boolean26 = atmosphereConfig22.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig27.framework();
        int int32 = atmosphereConfig27.getInitParameter("hi!", 0);
        boolean boolean33 = atmosphereConfig27.supportSession;
        boolean boolean34 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig35.shutdownHook(shutdownHook37);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("hi!", "");
        boolean boolean42 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig35.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46, startupHookArray45);
        atmosphereConfig44.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig49.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig49.shutdownHook(shutdownHook51);
        java.lang.String str55 = atmosphereConfig49.getInitParameter("hi!", "");
        boolean boolean56 = atmosphereConfig49.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig49.startUpHook;
        atmosphereConfig44.startUpHook = startupHookList57;
        atmosphereConfig27.startUpHook = startupHookList57;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig27.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig27.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig27.getproperties();
        atmosphereConfig22.properties = strMap62;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(startupHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test14236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14236");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig13.setshutdownHooks(shutdownHookList15);
        boolean boolean17 = atmosphereConfig13.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig13.framework();
        int int21 = atmosphereConfig13.getInitParameter("hi!", (int) 'a');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig23.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig31.properties = strMap34;
        atmosphereConfig31.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig31.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        atmosphereConfig40.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig40.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig48.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig48.setThrowExceptionOnCloned(true);
        java.lang.String str54 = atmosphereConfig48.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig48.getshutdownHooks();
        atmosphereConfig40.shutdownHooks = shutdownHookList55;
        atmosphereConfig31.shutdownHooks = shutdownHookList55;
        atmosphereConfig23.setshutdownHooks(shutdownHookList55);
        atmosphereConfig13.setshutdownHooks(shutdownHookList55);
        atmosphereConfig0.setshutdownHooks(shutdownHookList55);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
    }

    @Test
    public void test14237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14237");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig11.framework;
        java.lang.String str16 = atmosphereConfig11.getInitParameter("");
        java.lang.String str18 = atmosphereConfig11.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig1.populate(atmosphereConfig11);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig1.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig1.getstartUpHook();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(startupHookList21);
    }

    @Test
    public void test14238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14238");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig7.setproperties(strMap12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig7.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.shutdownHook(shutdownHook17);
        java.lang.String str21 = atmosphereConfig15.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig7.populate(atmosphereConfig15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig15.getframework();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration26 = atmosphereConfig15.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNull(atmosphereFramework25);
    }

    @Test
    public void test14239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14239");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook3 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = atmosphereConfig0.startupHook(startupHook3);
        boolean boolean5 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test14240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14240");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = atmosphereConfig0.getframework();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("");
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean12 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        int int23 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig18.framework = atmosphereFramework24;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig18.properties();
        atmosphereConfig14.setproperties(strMap26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig14.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        atmosphereConfig30.properties = strMap33;
        atmosphereConfig30.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig30.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig30.getframework();
        atmosphereConfig30.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig30.atmosphereHandlerConfig;
        org.slf4j.Logger logger41 = atmosphereConfig30.getlogger();
        boolean boolean42 = atmosphereConfig30.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig30.properties();
        atmosphereConfig14.setproperties(strMap43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig47.properties();
        atmosphereConfig46.properties = strMap49;
        boolean boolean51 = atmosphereConfig46.isSessionTimeoutRemovalAllowed();
        boolean boolean52 = atmosphereConfig46.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig53.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig53.shutdownHook(shutdownHook55);
        org.slf4j.Logger logger57 = atmosphereConfig53.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig53.shutdownHook(shutdownHook58);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig53.framework = atmosphereFramework60;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig46.populate(atmosphereConfig53);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig46.getstartUpHook();
        atmosphereConfig14.setstartUpHook(startupHookList63);
        atmosphereConfig0.startUpHook = startupHookList63;
        org.junit.Assert.assertNull(atmosphereFramework1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNull(atmosphereFramework38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(logger41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(logger57);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(startupHookList63);
    }

    @Test
    public void test14241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14241");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig12.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig12.setframework(atmosphereFramework19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig12.getproperties();
        atmosphereConfig0.setproperties(strMap21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        atmosphereConfig0.setproperties(strMap23);
        java.lang.Class<?> wildcardClass25 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test14242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14242");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        java.lang.String str3 = atmosphereConfig1.getInitParameter("");
        boolean boolean4 = atmosphereConfig1.isThrowExceptionOnCloned();
        boolean boolean5 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.lang.String str8 = atmosphereConfig1.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        int int13 = atmosphereConfig10.getInitParameter("", (int) 'a');
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
    }

    @Test
    public void test14243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14243");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        int int8 = atmosphereConfig0.getInitParameter("hi!", (int) 'a');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig27.shutdownHooks = shutdownHookList42;
        atmosphereConfig18.shutdownHooks = shutdownHookList42;
        atmosphereConfig10.setshutdownHooks(shutdownHookList42);
        atmosphereConfig0.setshutdownHooks(shutdownHookList42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig48.framework;
        java.lang.String str51 = atmosphereConfig48.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig54.properties();
        atmosphereConfig53.properties = strMap56;
        atmosphereConfig53.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig53.framework = atmosphereFramework60;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig48.populate(atmosphereConfig53);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList63 = atmosphereConfig62.getshutdownHooks();
        atmosphereConfig62.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig62.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory67 = atmosphereConfig62.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 97 + "'", int8 == 97);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(shutdownHookList63);
        org.junit.Assert.assertNotNull(shutdownHookList66);
    }

    @Test
    public void test14244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14244");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        atmosphereConfig0.supportSession = true;
        boolean boolean21 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig0.framework = atmosphereFramework22;
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test14245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14245");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("hi!", 10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        boolean boolean16 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig20.startupHook(startupHook25);
        boolean boolean27 = atmosphereConfig26.isSupportSession();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig29.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig29.shutdownHook(shutdownHook31);
        org.slf4j.Logger logger33 = atmosphereConfig29.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig29.setframework(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig29.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig26.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig11.populate(atmosphereConfig26);
        boolean boolean44 = atmosphereConfig41.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig41.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig41.startUpHook;
        atmosphereConfig41.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig51.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig51.properties();
        atmosphereConfig50.properties = strMap53;
        atmosphereConfig50.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig50.getshutdownHooks();
        boolean boolean58 = atmosphereConfig50.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig41.populate(atmosphereConfig50);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig41.properties;
        atmosphereConfig6.setproperties(strMap60);
        org.slf4j.Logger logger62 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = atmosphereConfig6.getframework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(logger33);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(logger62);
        org.junit.Assert.assertNull(atmosphereFramework63);
    }

    @Test
    public void test14246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14246");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        boolean boolean7 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig5.properties();
        atmosphereConfig5.setSupportSession(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig5.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig5.properties();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test14247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14247");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str17 = atmosphereConfig14.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig14.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig14.populate(atmosphereConfig19);
        boolean boolean23 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig24.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig24.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig24.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig24.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig32.getproperties();
        atmosphereConfig19.properties = strMap33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig0.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig37.properties = strMap40;
        org.slf4j.Logger logger42 = atmosphereConfig37.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig37.framework = atmosphereFramework43;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig37.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        atmosphereConfig47.setThrowExceptionOnCloned(false);
        atmosphereConfig47.setSupportSession(false);
        boolean boolean52 = atmosphereConfig47.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig47.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig47.shutdownHooks;
        atmosphereConfig37.shutdownHooks = shutdownHookList54;
        atmosphereConfig19.setshutdownHooks(shutdownHookList54);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig19.getshutdownHooks();
        boolean boolean58 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(logger42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test14248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14248");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        boolean boolean12 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.startupHook(startupHook13);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.startupHook(startupHook16);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory18 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test14249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14249");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig6.setshutdownHooks(shutdownHookList8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList11;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.shutdownHook(shutdownHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig0.properties();
        boolean boolean20 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        int int23 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test14250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14250");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        boolean boolean12 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig1.framework();
        boolean boolean14 = atmosphereConfig1.isSupportSession();
        org.slf4j.Logger logger15 = atmosphereConfig1.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig1.properties;
        boolean boolean19 = atmosphereConfig1.getInitParameter("hi!", false);
        java.lang.String str21 = atmosphereConfig1.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig1.properties();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test14251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14251");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig8.properties = strMap11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig14.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig14.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig6.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig17.startupHook(startupHook18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig19.getstartUpHook();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList22);
    }

    @Test
    public void test14252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14252");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig0.properties = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str19 = atmosphereConfig16.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig16.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig21.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig16.populate(atmosphereConfig21);
        org.slf4j.Logger logger26 = atmosphereConfig25.getlogger();
        atmosphereConfig25.setSessionTimeoutRemovalAllowed(true);
        org.slf4j.Logger logger29 = atmosphereConfig25.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig0.populate(atmosphereConfig25);
        atmosphereConfig30.destroy();
        org.slf4j.Logger logger32 = atmosphereConfig30.getlogger();
        java.lang.String str34 = atmosphereConfig30.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(logger26);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test14253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14253");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig18.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig18.framework;
        boolean boolean23 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig24.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig24.shutdownHook(shutdownHook26);
        org.slf4j.Logger logger28 = atmosphereConfig24.getlogger();
        java.lang.String str30 = atmosphereConfig24.getInitParameter("hi!");
        boolean boolean31 = atmosphereConfig24.isSupportSession();
        boolean boolean34 = atmosphereConfig24.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties();
        atmosphereConfig36.properties = strMap39;
        atmosphereConfig36.throwExceptionOnCloned = true;
        atmosphereConfig36.sessionTimeoutRemovalAllowed = true;
        boolean boolean45 = atmosphereConfig36.isThrowExceptionOnCloned();
        boolean boolean46 = atmosphereConfig36.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig36.framework = atmosphereFramework47;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig51.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig51.properties();
        atmosphereConfig50.properties = strMap53;
        boolean boolean57 = atmosphereConfig50.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig50.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        atmosphereConfig50.setframework(atmosphereFramework59);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig63.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig63.properties();
        atmosphereConfig62.properties = strMap65;
        boolean boolean67 = atmosphereConfig62.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig62.shutdownHook(shutdownHook68);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig62.startupHook(startupHook70);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig72.startUpHook;
        atmosphereConfig62.startUpHook = startupHookList73;
        atmosphereConfig50.setstartUpHook(startupHookList73);
        atmosphereConfig36.startUpHook = startupHookList73;
        atmosphereConfig24.startUpHook = startupHookList73;
        atmosphereConfig18.startUpHook = startupHookList73;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = atmosphereConfig18.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = null;
        atmosphereConfig18.setframework(atmosphereFramework82);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = atmosphereConfig12.populate(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(logger28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(atmosphereFramework58);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(shutdownHookList80);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertNotNull(atmosphereConfig84);
    }

    @Test
    public void test14254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14254");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        atmosphereConfig6.setThrowExceptionOnCloned(false);
        int int11 = atmosphereConfig6.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig6.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig6.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig6.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig16.getAtmosphereHandlerConfig();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig16.framework;
        java.lang.String str21 = atmosphereConfig16.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig16.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig23.properties;
        atmosphereConfig16.setproperties(strMap26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.properties();
        atmosphereConfig29.properties = strMap32;
        atmosphereConfig29.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig29.getshutdownHooks();
        atmosphereConfig16.setshutdownHooks(shutdownHookList36);
        atmosphereConfig6.setshutdownHooks(shutdownHookList36);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig40.startupHook(startupHook45);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig6.shutdownHooks = shutdownHookList47;
        atmosphereConfig0.setshutdownHooks(shutdownHookList47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig0.shutdownHook(shutdownHook51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration53 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
    }

    @Test
    public void test14255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14255");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean8 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig10.framework;
        java.lang.String str15 = atmosphereConfig10.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.properties;
        atmosphereConfig10.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        atmosphereConfig23.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList30);
        atmosphereConfig1.shutdownHooks = shutdownHookList30;
        boolean boolean33 = atmosphereConfig1.isThrowExceptionOnCloned();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.slf4j.Logger logger36 = atmosphereConfig1.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig1.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig1.getshutdownHooks();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(logger36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(shutdownHookList38);
    }

    @Test
    public void test14256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14256");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test14257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14257");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig5.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig5.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig5.framework();
        java.lang.String str15 = atmosphereConfig5.getInitParameter("", "hi!");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test14258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14258");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig5.shutdownHook(shutdownHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig5.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig5.getstartUpHook();
        java.lang.String str11 = atmosphereConfig5.getInitParameter("hi!");
        org.slf4j.Logger logger12 = atmosphereConfig5.getlogger();
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(logger12);
    }

    @Test
    public void test14259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14259");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.supportSession;
        boolean boolean5 = atmosphereConfig1.throwExceptionOnCloned;
        atmosphereConfig1.initComplete();
        java.lang.String str9 = atmosphereConfig1.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig1.getAtmosphereHandlerConfig();
        boolean boolean11 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig1.shutdownHook(shutdownHook14);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
    }

    @Test
    public void test14260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14260");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        org.slf4j.Logger logger12 = atmosphereConfig1.getlogger();
        boolean boolean13 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig15.properties = strMap18;
        atmosphereConfig15.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig15.framework = atmosphereFramework22;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig24.setThrowExceptionOnCloned(true);
        java.lang.String str30 = atmosphereConfig24.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        atmosphereConfig32.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        atmosphereConfig32.setstartUpHook(startupHookList40);
        atmosphereConfig24.startUpHook = startupHookList40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig15.populate(atmosphereConfig24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig24.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig24.getshutdownHooks();
        atmosphereConfig1.shutdownHooks = shutdownHookList45;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig1.startupHook(startupHook47);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster49 = atmosphereConfig1.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
    }

    @Test
    public void test14261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14261");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig12.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig12.properties;
        atmosphereConfig10.properties = strMap20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        atmosphereConfig27.setThrowExceptionOnCloned(false);
        int int32 = atmosphereConfig27.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig27.framework = atmosphereFramework33;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig27.properties();
        atmosphereConfig23.setproperties(strMap35);
        boolean boolean37 = atmosphereConfig23.isThrowExceptionOnCloned();
        atmosphereConfig23.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig10.populate(atmosphereConfig23);
        atmosphereConfig23.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig23.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig44.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig44.shutdownHook(shutdownHook46);
        org.slf4j.Logger logger48 = atmosphereConfig44.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig44.shutdownHook(shutdownHook49);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig53.properties();
        atmosphereConfig52.properties = strMap55;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig52.startupHook(startupHook57);
        boolean boolean59 = atmosphereConfig58.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig58.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig50.populate(atmosphereConfig58);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig61.startupHook(startupHook62);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList65 = atmosphereConfig64.getAtmosphereHandlerConfig();
        boolean boolean66 = atmosphereConfig64.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = atmosphereConfig64.framework;
        java.lang.String str69 = atmosphereConfig64.getInitParameter("");
        java.lang.String str71 = atmosphereConfig64.getInitParameter("");
        boolean boolean72 = atmosphereConfig64.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig64.shutdownHooks;
        atmosphereConfig61.setshutdownHooks(shutdownHookList73);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework75 = atmosphereConfig61.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig23.populate(atmosphereConfig61);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(logger48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(atmosphereFramework67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertNull(atmosphereFramework75);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
    }

    @Test
    public void test14262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14262");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig11.framework;
        java.lang.String str16 = atmosphereConfig11.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.properties;
        atmosphereConfig11.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig24.properties = strMap27;
        atmosphereConfig24.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig24.getshutdownHooks();
        atmosphereConfig11.setshutdownHooks(shutdownHookList31);
        atmosphereConfig1.setshutdownHooks(shutdownHookList31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig1.framework = atmosphereFramework34;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig1.setframework(atmosphereFramework36);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(shutdownHookList31);
    }

    @Test
    public void test14263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14263");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig5.shutdownHook(shutdownHook6);
        java.lang.String str10 = atmosphereConfig5.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig5.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.shutdownHook(shutdownHook15);
        java.lang.String str19 = atmosphereConfig13.getInitParameter("hi!", "");
        atmosphereConfig13.initComplete();
        java.lang.String str22 = atmosphereConfig13.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        atmosphereConfig23.setThrowExceptionOnCloned(true);
        java.lang.String str29 = atmosphereConfig23.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig23.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        atmosphereConfig32.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig32.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        atmosphereConfig41.startUpHook = startupHookList43;
        atmosphereConfig32.startUpHook = startupHookList43;
        atmosphereConfig23.startUpHook = startupHookList43;
        atmosphereConfig13.setstartUpHook(startupHookList43);
        boolean boolean48 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig13.setframework(atmosphereFramework49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig12.populate(atmosphereConfig13);
        boolean boolean54 = atmosphereConfig13.getInitParameter("", false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test14264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14264");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.startUpHook;
        java.lang.String str11 = atmosphereConfig0.getInitParameter("", "hi!");
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.supportSession = false;
        java.lang.String str18 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean19 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
    }

    @Test
    public void test14265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14265");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        boolean boolean8 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        boolean boolean15 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.shutdownHook(shutdownHook16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig10.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig10.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig20.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig20.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig26.properties();
        atmosphereConfig25.properties = strMap28;
        atmosphereConfig25.throwExceptionOnCloned = true;
        atmosphereConfig25.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig25.getproperties();
        atmosphereConfig23.properties = strMap34;
        atmosphereConfig10.properties = strMap34;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str42 = atmosphereConfig39.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig39.framework;
        atmosphereConfig39.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig39.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = null;
        atmosphereConfig46.shutdownHooks = shutdownHookList47;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig46.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig46.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig46.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig54.properties();
        atmosphereConfig53.properties = strMap56;
        atmosphereConfig53.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig53.shutdownHook(shutdownHook60);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig46.populate(atmosphereConfig61);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig62.properties;
        atmosphereConfig0.setproperties(strMap63);
        boolean boolean65 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str69 = atmosphereConfig66.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = atmosphereConfig66.framework;
        atmosphereConfig66.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig66.shutdownHook(shutdownHook72);
        org.slf4j.Logger logger74 = atmosphereConfig73.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework75 = null;
        atmosphereConfig73.setframework(atmosphereFramework75);
        boolean boolean77 = atmosphereConfig73.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList78 = atmosphereConfig73.getshutdownHooks();
        atmosphereConfig73.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = atmosphereConfig0.populate(atmosphereConfig73);
        atmosphereConfig80.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNull(atmosphereFramework70);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(logger74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(shutdownHookList78);
        org.junit.Assert.assertNotNull(atmosphereConfig80);
    }

    @Test
    public void test14266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14266");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        atmosphereConfig1.destroy();
        atmosphereConfig1.initComplete();
        org.slf4j.Logger logger8 = atmosphereConfig1.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig13.setframework(atmosphereFramework14);
        org.slf4j.Logger logger16 = atmosphereConfig13.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig13.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test14267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14267");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig10.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig10.populate(atmosphereConfig16);
        boolean boolean26 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        java.lang.String str29 = atmosphereConfig16.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        atmosphereConfig31.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig31.startupHook(startupHook34);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig35.shutdownHook(shutdownHook36);
        boolean boolean38 = atmosphereConfig37.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig16.populate(atmosphereConfig37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig16.setframework(atmosphereFramework40);
        int int44 = atmosphereConfig16.getInitParameter("", (int) (short) -1);
        boolean boolean45 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig47.properties = strMap50;
        atmosphereConfig47.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        atmosphereConfig47.setstartUpHook(startupHookList55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig59.properties();
        atmosphereConfig58.properties = strMap61;
        atmosphereConfig47.setproperties(strMap61);
        boolean boolean66 = atmosphereConfig47.getInitParameter("", false);
        java.lang.String str69 = atmosphereConfig47.getInitParameter("hi!", "hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig47.properties();
        boolean boolean71 = atmosphereConfig47.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig47.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig47.getAtmosphereHandlerConfig();
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList73;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework75);
        atmosphereConfig76.setThrowExceptionOnCloned(false);
        boolean boolean79 = atmosphereConfig76.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = atmosphereConfig76.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = atmosphereConfig76.getframework();
        atmosphereConfig76.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList84 = atmosphereConfig76.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList84;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(atmosphereFramework80);
        org.junit.Assert.assertNull(atmosphereFramework81);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList84);
    }

    @Test
    public void test14268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14268");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.startUpHook = startupHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig15.properties = strMap18;
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig15.getshutdownHooks();
        boolean boolean23 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.lang.String str26 = atmosphereConfig15.getInitParameter("", "hi!");
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.lang.String str30 = atmosphereConfig15.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig15.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig1.framework;
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        boolean boolean36 = atmosphereConfig1.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig1.getproperties();
        boolean boolean38 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test14269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14269");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig14.shutdownHook(shutdownHook16);
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig14.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig14.framework = atmosphereFramework25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        org.slf4j.Logger logger31 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig27.properties = strMap34;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig27.properties();
        atmosphereConfig14.setproperties(strMap36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig14.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        boolean boolean45 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig40.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig14.shutdownHooks = shutdownHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig14);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig0.framework = atmosphereFramework54;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig0.shutdownHook(shutdownHook56);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig60.shutdownHooks;
        atmosphereConfig59.setshutdownHooks(shutdownHookList61);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig63.getAtmosphereHandlerConfig();
        atmosphereConfig59.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        boolean boolean66 = atmosphereConfig59.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = atmosphereConfig59.framework;
        boolean boolean68 = atmosphereConfig59.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework69);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig71.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig71.properties();
        atmosphereConfig70.properties = strMap73;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = atmosphereConfig70.startupHook(startupHook75);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig70.properties;
        atmosphereConfig59.setproperties(strMap77);
        atmosphereConfig0.setproperties(strMap77);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(atmosphereFramework67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(atmosphereConfig76);
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test14270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14270");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.supportSession;
        int int8 = atmosphereConfig0.getInitParameter("hi!", (-1));
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig10.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig10.setproperties(strMap24);
        boolean boolean29 = atmosphereConfig10.getInitParameter("", false);
        java.lang.String str32 = atmosphereConfig10.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig10.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework43);
        atmosphereConfig44.setThrowExceptionOnCloned(false);
        int int49 = atmosphereConfig44.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig44.framework = atmosphereFramework50;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig44.properties();
        atmosphereConfig40.setproperties(strMap52);
        atmosphereConfig35.properties = strMap52;
        atmosphereConfig10.setproperties(strMap52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList56;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        atmosphereConfig0.setframework(atmosphereFramework58);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig0.shutdownHook(shutdownHook61);
        java.lang.String str64 = atmosphereConfig62.getInitParameter("");
        boolean boolean65 = atmosphereConfig62.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test14271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14271");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig10.startUpHook = startupHookList12;
        atmosphereConfig1.startUpHook = startupHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig1.framework = atmosphereFramework15;
        atmosphereConfig1.initComplete();
        boolean boolean18 = atmosphereConfig1.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig1.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig1.getstartUpHook();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(startupHookList20);
    }

    @Test
    public void test14272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14272");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig10.setThrowExceptionOnCloned(true);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig10.getshutdownHooks();
        java.lang.String str19 = atmosphereConfig10.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        atmosphereConfig22.properties = strMap25;
        atmosphereConfig22.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig22.setframework(atmosphereFramework29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig22.getproperties();
        atmosphereConfig10.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig7.populate(atmosphereConfig10);
        atmosphereConfig33.setSupportSession(false);
        atmosphereConfig33.setSupportSession(true);
        boolean boolean38 = atmosphereConfig33.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test14273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14273");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        int int8 = atmosphereConfig0.getInitParameter("hi!", 0);
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test14274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14274");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig0.setframework(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig8.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        atmosphereConfig14.throwExceptionOnCloned = true;
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig8.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig26.properties();
        atmosphereConfig25.properties = strMap28;
        atmosphereConfig25.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        atmosphereConfig25.setstartUpHook(startupHookList33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties();
        atmosphereConfig36.properties = strMap39;
        atmosphereConfig25.setproperties(strMap39);
        boolean boolean44 = atmosphereConfig25.getInitParameter("", false);
        java.lang.String str47 = atmosphereConfig25.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig8.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig51.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig51.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList53;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig57.properties();
        atmosphereConfig56.properties = strMap59;
        boolean boolean61 = atmosphereConfig56.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig56.shutdownHook(shutdownHook62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig63.startupHook(startupHook64);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig0.populate(atmosphereConfig65);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig66.startupHook(startupHook67);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig66.getshutdownHooks();
        boolean boolean70 = atmosphereConfig66.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig66.getstartUpHook();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(startupHookList71);
    }

    @Test
    public void test14275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14275");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig1.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig1.startupHook(startupHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig1.properties();
        org.slf4j.Logger logger21 = atmosphereConfig1.getlogger();
        atmosphereConfig1.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig1.getproperties();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(logger21);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test14276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14276");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.setframework(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        java.lang.String str13 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str18 = atmosphereConfig15.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig15.framework;
        atmosphereConfig15.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig15.shutdownHook(shutdownHook21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = null;
        atmosphereConfig22.shutdownHooks = shutdownHookList23;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig22.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig22.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.properties();
        atmosphereConfig29.properties = strMap32;
        atmosphereConfig29.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig29.shutdownHook(shutdownHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig22.populate(atmosphereConfig37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig38.properties;
        atmosphereConfig1.properties = strMap39;
        boolean boolean41 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig1.properties();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test14277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14277");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        boolean boolean18 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.shutdownHook(shutdownHook19);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig13.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig13.getproperties();
        atmosphereConfig1.setproperties(strMap22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig1.shutdownHook(shutdownHook25);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration27 = atmosphereConfig1.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
    }

    @Test
    public void test14278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14278");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig7.getproperties();
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig35.startupHook(startupHook40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        atmosphereConfig35.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig35.properties;
        atmosphereConfig7.properties = strMap45;
        atmosphereConfig7.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig7.properties();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test14279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14279");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.initComplete();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        atmosphereConfig11.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig11.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig21.shutdownHook(shutdownHook29);
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.populate(atmosphereConfig30);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig30.getproperties();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test14280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14280");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.initComplete();
        boolean boolean9 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig11.shutdownHook(shutdownHook12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test14281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14281");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig5.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig5.framework();
        org.slf4j.Logger logger11 = atmosphereConfig5.getlogger();
        atmosphereConfig5.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList22);
        atmosphereConfig0.setshutdownHooks(shutdownHookList22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        atmosphereConfig27.setThrowExceptionOnCloned(false);
        int int32 = atmosphereConfig27.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig27.framework = atmosphereFramework33;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig27.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.populate(atmosphereConfig27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties();
        atmosphereConfig39.properties = strMap42;
        boolean boolean44 = atmosphereConfig39.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig39.shutdownHook(shutdownHook45);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig39.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig39.getproperties();
        atmosphereConfig0.setproperties(strMap48);
        java.lang.Class<?> wildcardClass50 = strMap48.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test14282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14282");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.framework = atmosphereFramework12;
        atmosphereConfig1.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig1.framework();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework16);
    }

    @Test
    public void test14283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14283");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig12.getproperties();
        atmosphereConfig11.properties = strMap16;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework18);
        atmosphereConfig19.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        atmosphereConfig27.setThrowExceptionOnCloned(false);
        int int32 = atmosphereConfig27.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig27.framework = atmosphereFramework33;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig27.properties();
        atmosphereConfig23.setproperties(strMap35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig23.startUpHook;
        atmosphereConfig19.setstartUpHook(startupHookList37);
        atmosphereConfig19.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig19.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig11.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig11.startupHook(startupHook43);
        java.lang.String str47 = atmosphereConfig11.getInitParameter("hi!", "hi!");
        atmosphereConfig11.destroy();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test14284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14284");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig1.getshutdownHooks();
        atmosphereConfig1.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig9.properties = strMap12;
        atmosphereConfig9.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig9.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig18.setThrowExceptionOnCloned(true);
        java.lang.String str24 = atmosphereConfig18.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        atmosphereConfig26.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        atmosphereConfig26.setstartUpHook(startupHookList34);
        atmosphereConfig18.startUpHook = startupHookList34;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig9.populate(atmosphereConfig18);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        boolean boolean40 = atmosphereConfig1.supportSession;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test14285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14285");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.framework = atmosphereFramework9;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        boolean boolean16 = atmosphereConfig12.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig12.framework();
        org.slf4j.Logger logger18 = atmosphereConfig12.getlogger();
        atmosphereConfig12.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        atmosphereConfig21.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig21.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig27.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig27.getshutdownHooks();
        atmosphereConfig12.setshutdownHooks(shutdownHookList29);
        boolean boolean31 = atmosphereConfig12.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig12.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig12.shutdownHooks;
        atmosphereConfig1.shutdownHooks = shutdownHookList33;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework35);
        atmosphereConfig36.setThrowExceptionOnCloned(false);
        int int41 = atmosphereConfig36.getInitParameter("hi!", (int) (short) 0);
        boolean boolean42 = atmosphereConfig36.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig36.framework;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig36.startupHook(startupHook44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig1.populate(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
    }

    @Test
    public void test14286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14286");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig5.shutdownHook(shutdownHook6);
        java.lang.String str10 = atmosphereConfig5.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig5.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.shutdownHook(shutdownHook15);
        java.lang.String str19 = atmosphereConfig13.getInitParameter("hi!", "");
        atmosphereConfig13.initComplete();
        java.lang.String str22 = atmosphereConfig13.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        atmosphereConfig23.setThrowExceptionOnCloned(true);
        java.lang.String str29 = atmosphereConfig23.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig23.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        atmosphereConfig32.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig32.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        atmosphereConfig41.startUpHook = startupHookList43;
        atmosphereConfig32.startUpHook = startupHookList43;
        atmosphereConfig23.startUpHook = startupHookList43;
        atmosphereConfig13.setstartUpHook(startupHookList43);
        boolean boolean48 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig13.setframework(atmosphereFramework49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig12.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig13.framework = atmosphereFramework52;
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
    }

    @Test
    public void test14287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14287");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.shutdownHook(shutdownHook14);
        atmosphereConfig15.sessionTimeoutRemovalAllowed = true;
        boolean boolean20 = atmosphereConfig15.getInitParameter("hi!", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig15.shutdownHooks;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shutdownHookList21);
    }

    @Test
    public void test14288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14288");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
    }

    @Test
    public void test14289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14289");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        int int13 = atmosphereConfig10.getInitParameter("", 32);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        atmosphereConfig10.initComplete();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test14290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14290");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.setframework(atmosphereFramework9);
        java.lang.String str13 = atmosphereConfig1.getInitParameter("", "hi!");
        boolean boolean14 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.destroy();
        boolean boolean16 = atmosphereConfig1.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.shutdownHook(shutdownHook17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig1.getproperties();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test14291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14291");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str17 = atmosphereConfig14.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig14.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig14.populate(atmosphereConfig19);
        boolean boolean23 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig24.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig24.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig24.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig24.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig32.getproperties();
        atmosphereConfig19.properties = strMap33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig0.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig35.framework;
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig35.startupHook(startupHook39);
        boolean boolean41 = atmosphereConfig35.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory43 = atmosphereConfig35.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(shutdownHookList42);
    }

    @Test
    public void test14292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest28.test14292");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.supportSession;
        boolean boolean5 = atmosphereConfig1.throwExceptionOnCloned;
        atmosphereConfig1.initComplete();
        java.lang.String str9 = atmosphereConfig1.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig1.getshutdownHooks();
        java.lang.Class<?> wildcardClass12 = atmosphereConfig1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }
}

