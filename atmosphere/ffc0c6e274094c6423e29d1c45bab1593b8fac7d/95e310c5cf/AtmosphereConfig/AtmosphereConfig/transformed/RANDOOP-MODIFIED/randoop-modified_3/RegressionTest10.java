import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test05001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05001");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test05002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05002");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.supportSession;
        atmosphereConfig0.destroy();
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig9.setshutdownHooks(shutdownHookList11);
        boolean boolean13 = atmosphereConfig9.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig9.framework();
        org.slf4j.Logger logger15 = atmosphereConfig9.getlogger();
        atmosphereConfig9.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig17.setSupportSession(false);
        boolean boolean21 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        atmosphereConfig17.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig17.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig25.shutdownHook(shutdownHook27);
        java.lang.String str31 = atmosphereConfig25.getInitParameter("hi!", "");
        boolean boolean32 = atmosphereConfig25.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig25.shutdownHook(shutdownHook33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig34.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig37.properties = strMap40;
        boolean boolean42 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig37.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig34.populate(atmosphereConfig37);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.getstartUpHook();
        atmosphereConfig24.startUpHook = startupHookList46;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig50.properties();
        atmosphereConfig49.properties = strMap52;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig49.startupHook(startupHook54);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig49.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig59.properties();
        atmosphereConfig58.properties = strMap61;
        atmosphereConfig58.throwExceptionOnCloned = true;
        atmosphereConfig58.sessionTimeoutRemovalAllowed = true;
        boolean boolean67 = atmosphereConfig58.isThrowExceptionOnCloned();
        boolean boolean68 = atmosphereConfig58.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig69.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig69.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig69.properties;
        atmosphereConfig69.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig75.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig75.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig75.getstartUpHook();
        atmosphereConfig69.startUpHook = startupHookList78;
        atmosphereConfig58.setstartUpHook(startupHookList78);
        atmosphereConfig49.startUpHook = startupHookList78;
        atmosphereConfig24.setstartUpHook(startupHookList78);
        atmosphereConfig9.setstartUpHook(startupHookList78);
        atmosphereConfig0.setstartUpHook(startupHookList78);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(startupHookList78);
    }

    @Test
    public void test05003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05003");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig21.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig21.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        atmosphereConfig30.properties = strMap33;
        atmosphereConfig30.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig30.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig38.setThrowExceptionOnCloned(true);
        java.lang.String str44 = atmosphereConfig38.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig38.getshutdownHooks();
        atmosphereConfig30.shutdownHooks = shutdownHookList45;
        atmosphereConfig21.shutdownHooks = shutdownHookList45;
        atmosphereConfig13.setshutdownHooks(shutdownHookList45);
        atmosphereConfig10.setshutdownHooks(shutdownHookList45);
        atmosphereConfig1.setshutdownHooks(shutdownHookList45);
        org.slf4j.Logger logger51 = atmosphereConfig1.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster52 = atmosphereConfig1.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(logger51);
    }

    @Test
    public void test05004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05004");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig1.shutdownHook(shutdownHook10);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties;
        boolean boolean14 = atmosphereConfig11.isSupportSession();
        boolean boolean15 = atmosphereConfig11.throwExceptionOnCloned;
        boolean boolean16 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.setframework(atmosphereFramework17);
        atmosphereConfig11.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig11.properties;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test05005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05005");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig6.shutdownHook(shutdownHook7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig6.getstartUpHook();
        boolean boolean10 = atmosphereConfig6.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05006");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.supportSession = false;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        boolean boolean25 = atmosphereConfig0.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster26 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test05007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05007");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        int int10 = atmosphereConfig0.getInitParameter("", (int) (byte) 10);
        org.slf4j.Logger logger11 = atmosphereConfig0.getlogger();
        java.lang.String str14 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        java.lang.String str16 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
    }

    @Test
    public void test05008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05008");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        int int10 = atmosphereConfig5.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig5.framework = atmosphereFramework11;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig5.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig5.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList14;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig18.framework();
        int int23 = atmosphereConfig18.getInitParameter("hi!", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig18.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList24);
        boolean boolean26 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        java.lang.String str33 = atmosphereConfig27.getInitParameter("hi!", "");
        boolean boolean34 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig27.shutdownHook(shutdownHook35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig36.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties;
        atmosphereConfig0.properties = strMap38;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test05009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05009");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig7.framework();
        atmosphereConfig7.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig35.startupHook(startupHook40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig35.properties;
        atmosphereConfig7.properties = strMap43;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig7.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig46.framework();
        int int51 = atmosphereConfig46.getInitParameter("hi!", 0);
        boolean boolean52 = atmosphereConfig46.supportSession;
        boolean boolean53 = atmosphereConfig46.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList55 = atmosphereConfig54.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig54.shutdownHook(shutdownHook56);
        java.lang.String str60 = atmosphereConfig54.getInitParameter("hi!", "");
        boolean boolean61 = atmosphereConfig54.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig54.shutdownHook(shutdownHook62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList65, startupHookArray64);
        atmosphereConfig63.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig68.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig68.shutdownHook(shutdownHook70);
        java.lang.String str74 = atmosphereConfig68.getInitParameter("hi!", "");
        boolean boolean75 = atmosphereConfig68.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList76 = atmosphereConfig68.startUpHook;
        atmosphereConfig63.startUpHook = startupHookList76;
        atmosphereConfig46.startUpHook = startupHookList76;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig46.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList80 = atmosphereConfig46.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList80;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = atmosphereConfig7.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(shutdownHookList55);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(startupHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(startupHookList76);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(startupHookList80);
    }

    @Test
    public void test05010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05010");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.getproperties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory12 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test05011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05011");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.getframework();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig1.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig1.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig1.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig1.setframework(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test05012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05012");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        boolean boolean8 = atmosphereConfig1.throwExceptionOnCloned;
        boolean boolean9 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        atmosphereConfig12.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig12.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig12.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.properties;
        atmosphereConfig1.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig1.shutdownHook(shutdownHook20);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster22 = atmosphereConfig1.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
    }

    @Test
    public void test05013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05013");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig9.properties();
        atmosphereConfig5.setproperties(strMap17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig5.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        org.slf4j.Logger logger25 = atmosphereConfig21.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig21.setframework(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig21.startUpHook = startupHookList29;
        atmosphereConfig1.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        atmosphereConfig33.startUpHook = startupHookList35;
        atmosphereConfig1.setstartUpHook(startupHookList35);
        atmosphereConfig1.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig1.getframework();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        boolean boolean45 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test05014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05014");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig12.setframework(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig12.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig12.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = atmosphereConfig12.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
    }

    @Test
    public void test05015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05015");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig9.properties();
        atmosphereConfig5.setproperties(strMap17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig5.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList19);
        int int23 = atmosphereConfig1.getInitParameter("", (int) (short) 1);
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig1.shutdownHook(shutdownHook27);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig28.framework();
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNull(atmosphereFramework30);
    }

    @Test
    public void test05016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05016");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig7.properties = strMap10;
        atmosphereConfig7.throwExceptionOnCloned = true;
        boolean boolean14 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        boolean boolean15 = atmosphereConfig7.throwExceptionOnCloned;
        java.lang.String str17 = atmosphereConfig7.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig7.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig19.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        atmosphereConfig22.properties = strMap25;
        atmosphereConfig22.throwExceptionOnCloned = true;
        boolean boolean29 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        boolean boolean30 = atmosphereConfig22.throwExceptionOnCloned;
        java.lang.String str32 = atmosphereConfig22.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig22.startupHook(startupHook33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig22.properties();
        atmosphereConfig19.properties = strMap35;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig19.shutdownHook(shutdownHook37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig0.populate(atmosphereConfig38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig38.framework = atmosphereFramework40;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig42.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig42.shutdownHook(shutdownHook44);
        org.slf4j.Logger logger46 = atmosphereConfig42.getlogger();
        java.lang.String str49 = atmosphereConfig42.getInitParameter("hi!", "");
        boolean boolean50 = atmosphereConfig42.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig38.setstartUpHook(startupHookList51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig53.framework();
        int int58 = atmosphereConfig53.getInitParameter("hi!", 0);
        boolean boolean59 = atmosphereConfig53.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig53.framework = atmosphereFramework60;
        boolean boolean62 = atmosphereConfig53.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig53.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig38.atmosphereHandlerConfig = atmosphereHandlerConfigList64;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(logger46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
    }

    @Test
    public void test05017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05017");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.startupHook(startupHook11);
        boolean boolean15 = atmosphereConfig12.getInitParameter("hi!", false);
        org.slf4j.Logger logger16 = atmosphereConfig12.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig17 = atmosphereConfig12.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(logger16);
    }

    @Test
    public void test05018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05018");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig7.shutdownHook(shutdownHook9);
        java.lang.String str13 = atmosphereConfig7.getInitParameter("hi!", "");
        boolean boolean14 = atmosphereConfig7.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig7.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.populate(atmosphereConfig16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig20.properties();
        atmosphereConfig20.setThrowExceptionOnCloned(true);
        java.lang.String str26 = atmosphereConfig20.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig20.getshutdownHooks();
        java.lang.String str29 = atmosphereConfig20.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig16.populate(atmosphereConfig20);
        atmosphereConfig20.setSessionTimeoutRemovalAllowed(false);
        org.slf4j.Logger logger34 = atmosphereConfig20.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig20.properties;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory36 = atmosphereConfig20.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(logger34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test05019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05019");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig5.shutdownHook(shutdownHook6);
        java.lang.String str10 = atmosphereConfig5.getInitParameter("", "");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory11 = atmosphereConfig5.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test05020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05020");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = null;
        atmosphereConfig7.shutdownHooks = shutdownHookList8;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig7.framework = atmosphereFramework10;
        boolean boolean12 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        java.lang.String str15 = atmosphereConfig7.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig7.framework();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(atmosphereFramework16);
    }

    @Test
    public void test05021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05021");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig9.properties = strMap12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig9.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig15.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.populate(atmosphereConfig15);
        boolean boolean18 = atmosphereConfig17.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig17.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig17.framework = atmosphereFramework20;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList19);
    }

    @Test
    public void test05022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05022");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        int int10 = atmosphereConfig5.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig5.framework = atmosphereFramework11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig5.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig14.framework;
        org.slf4j.Logger logger16 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        boolean boolean21 = atmosphereConfig18.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig18.startupHook(startupHook22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig23.properties;
        atmosphereConfig14.properties = strMap24;
        atmosphereConfig0.properties = strMap24;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig0.shutdownHooks;
        boolean boolean28 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test05023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05023");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!", "hi!");
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig1.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.shutdownHooks;
        atmosphereConfig16.setshutdownHooks(shutdownHookList18);
        boolean boolean20 = atmosphereConfig16.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig16.framework();
        org.slf4j.Logger logger22 = atmosphereConfig16.getlogger();
        atmosphereConfig16.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        atmosphereConfig25.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig25.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig29.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig31.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig31.getshutdownHooks();
        atmosphereConfig16.setshutdownHooks(shutdownHookList33);
        boolean boolean35 = atmosphereConfig16.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig16.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig16.shutdownHooks;
        atmosphereConfig1.setshutdownHooks(shutdownHookList37);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider39 = atmosphereConfig1.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
    }

    @Test
    public void test05024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05024");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.startUpHook = startupHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig15.properties = strMap18;
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig15.getshutdownHooks();
        boolean boolean23 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.lang.String str26 = atmosphereConfig15.getInitParameter("", "hi!");
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.lang.String str30 = atmosphereConfig15.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig15.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig1.framework;
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        atmosphereConfig1.supportSession = true;
        atmosphereConfig1.destroy();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNull(atmosphereFramework33);
    }

    @Test
    public void test05025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05025");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        int int7 = atmosphereConfig0.getInitParameter("", (int) (short) -1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        atmosphereConfig0.setSupportSession(false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test05026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05026");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig7.getproperties();
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig7.shutdownHook(shutdownHook34);
        boolean boolean36 = atmosphereConfig35.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration37 = atmosphereConfig35.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test05027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05027");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        atmosphereConfig7.setSupportSession(false);
        boolean boolean11 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig7.startupHook(startupHook13);
        boolean boolean17 = atmosphereConfig14.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig14.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig20.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig20.shutdownHook(shutdownHook22);
        java.lang.String str26 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean27 = atmosphereConfig20.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig20.shutdownHook(shutdownHook28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig29.getproperties();
        atmosphereConfig14.setproperties(strMap30);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test05028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05028");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        atmosphereConfig17.setstartUpHook(startupHookList25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties();
        atmosphereConfig28.properties = strMap31;
        atmosphereConfig17.setproperties(strMap31);
        boolean boolean36 = atmosphereConfig17.getInitParameter("", false);
        java.lang.String str39 = atmosphereConfig17.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig0.shutdownHook(shutdownHook42);
        int int46 = atmosphereConfig43.getInitParameter("hi!", 52);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig43.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig43.getframework();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNull(atmosphereFramework48);
    }

    @Test
    public void test05029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05029");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig6.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList9;
        boolean boolean11 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig0.startupHook(startupHook12);
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test05030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05030");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig5.shutdownHook(shutdownHook7);
        org.slf4j.Logger logger9 = atmosphereConfig5.getlogger();
        java.lang.String str12 = atmosphereConfig5.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        int int19 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig14.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig14.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig14.startUpHook;
        atmosphereConfig5.setstartUpHook(startupHookList23);
        atmosphereConfig0.startUpHook = startupHookList23;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(startupHookList28);
    }

    @Test
    public void test05031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05031");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        int int10 = atmosphereConfig5.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig5.framework = atmosphereFramework11;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig5.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig5.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList14;
        boolean boolean18 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean21 = atmosphereConfig0.getInitParameter("hi!", true);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig0.setframework(atmosphereFramework25);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(atmosphereFramework24);
    }

    @Test
    public void test05032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05032");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig9.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig9.atmosphereHandlerConfig;
        boolean boolean12 = atmosphereConfig9.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig9.startupHook(startupHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig14.framework;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration16 = atmosphereConfig14.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test05033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05033");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = null;
        atmosphereConfig0.startUpHook = startupHookList9;
        atmosphereConfig0.supportSession = true;
        int int15 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 100);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNull(startupHookList18);
    }

    @Test
    public void test05034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05034");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        boolean boolean23 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig16.throwExceptionOnCloned;
        java.lang.String str26 = atmosphereConfig16.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig16.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig16.properties();
        atmosphereConfig13.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig13.shutdownHook(shutdownHook31);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory33 = atmosphereConfig32.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test05035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05035");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig0.getInitParameter("", 1);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig15.framework();
        int int20 = atmosphereConfig15.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22, shutdownHookArray21);
        atmosphereConfig15.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig25.shutdownHook(shutdownHook27);
        java.lang.String str31 = atmosphereConfig25.getInitParameter("hi!", "");
        boolean boolean32 = atmosphereConfig25.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig25.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig39.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig39.shutdownHook(shutdownHook41);
        java.lang.String str45 = atmosphereConfig39.getInitParameter("hi!", "");
        boolean boolean46 = atmosphereConfig39.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig39.startUpHook;
        atmosphereConfig34.startUpHook = startupHookList47;
        atmosphereConfig15.setstartUpHook(startupHookList47);
        atmosphereConfig15.setSupportSession(true);
        java.lang.String str53 = atmosphereConfig15.getInitParameter("");
        int int56 = atmosphereConfig15.getInitParameter("hi!", 100);
        boolean boolean59 = atmosphereConfig15.getInitParameter("", false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig15.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList60;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
    }

    @Test
    public void test05036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05036");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig10.setThrowExceptionOnCloned(true);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig10.getshutdownHooks();
        java.lang.String str19 = atmosphereConfig10.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        atmosphereConfig22.properties = strMap25;
        atmosphereConfig22.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig22.setframework(atmosphereFramework29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig22.getproperties();
        atmosphereConfig10.setproperties(strMap31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig7.populate(atmosphereConfig10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig10.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration35 = atmosphereConfig10.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
    }

    @Test
    public void test05037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05037");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig9.setshutdownHooks(shutdownHookList11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        atmosphereConfig9.setstartUpHook(startupHookList14);
        atmosphereConfig0.setstartUpHook(startupHookList14);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean19 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig21.getframework();
        boolean boolean23 = atmosphereConfig21.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig26.properties();
        atmosphereConfig25.properties = strMap28;
        atmosphereConfig25.throwExceptionOnCloned = true;
        atmosphereConfig25.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig25.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig25.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig25.getproperties();
        atmosphereConfig21.setproperties(strMap36);
        atmosphereConfig0.properties = strMap36;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test05038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05038");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.shutdownHooks;
        boolean boolean9 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        int int16 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig11.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig11.shutdownHook(shutdownHook20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig11.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig23.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig23.shutdownHook(shutdownHook25);
        org.slf4j.Logger logger27 = atmosphereConfig23.getlogger();
        java.lang.String str30 = atmosphereConfig23.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        atmosphereConfig32.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig32.getAtmosphereHandlerConfig();
        atmosphereConfig23.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = null;
        atmosphereConfig11.startUpHook = startupHookList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig44.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig44.shutdownHook(shutdownHook46);
        org.slf4j.Logger logger48 = atmosphereConfig44.getlogger();
        java.lang.String str51 = atmosphereConfig44.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig54.properties();
        atmosphereConfig53.properties = strMap56;
        atmosphereConfig53.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig44.atmosphereHandlerConfig = atmosphereHandlerConfigList60;
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList60;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig11.properties();
        atmosphereConfig1.setproperties(strMap63);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig67.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig67.properties();
        atmosphereConfig66.properties = strMap69;
        atmosphereConfig66.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = null;
        atmosphereConfig66.framework = atmosphereFramework73;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework75 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework75);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList78 = atmosphereConfig77.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig77.properties();
        atmosphereConfig76.properties = strMap79;
        atmosphereConfig76.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig76.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig76.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework85 = atmosphereConfig76.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList86 = atmosphereConfig76.startUpHook;
        atmosphereConfig66.setstartUpHook(startupHookList86);
        boolean boolean88 = atmosphereConfig66.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList89 = atmosphereConfig66.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList90 = atmosphereConfig66.atmosphereHandlerConfig;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList90;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList92 = atmosphereConfig1.startUpHook;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(logger48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(startupHookList78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(atmosphereFramework85);
        org.junit.Assert.assertNotNull(startupHookList86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList89);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList90);
        org.junit.Assert.assertNotNull(startupHookList92);
    }

    @Test
    public void test05039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05039");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.startupHook(startupHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig13.setframework(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig13.startupHook(startupHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig13.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig0.framework;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext29 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(atmosphereFramework28);
    }

    @Test
    public void test05040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05040");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.setframework(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig1.framework;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration13 = atmosphereConfig1.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNull(atmosphereFramework12);
    }

    @Test
    public void test05041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05041");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider12 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test05042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05042");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig14.shutdownHook(shutdownHook16);
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig14.startUpHook = startupHookList22;
        atmosphereConfig14.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig0.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig27.framework();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNull(atmosphereFramework28);
    }

    @Test
    public void test05043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05043");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        atmosphereConfig17.setstartUpHook(startupHookList25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties();
        atmosphereConfig28.properties = strMap31;
        atmosphereConfig17.setproperties(strMap31);
        boolean boolean36 = atmosphereConfig17.getInitParameter("", false);
        java.lang.String str39 = atmosphereConfig17.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig0.shutdownHook(shutdownHook42);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
    }

    @Test
    public void test05044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05044");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        java.lang.String str13 = atmosphereConfig10.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test05045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05045");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        java.lang.String str12 = atmosphereConfig7.getInitParameter("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider13 = atmosphereConfig7.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test05046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05046");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        atmosphereConfig18.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        int int29 = atmosphereConfig24.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig24.framework = atmosphereFramework30;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig24.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig24.getframework();
        boolean boolean34 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig24.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig24.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig18.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.populate(atmosphereConfig37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig42.shutdownHooks;
        atmosphereConfig41.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList46;
        boolean boolean48 = atmosphereConfig41.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig41.framework;
        boolean boolean50 = atmosphereConfig41.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig53.properties();
        atmosphereConfig52.properties = strMap55;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig52.startupHook(startupHook57);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig52.properties;
        atmosphereConfig41.setproperties(strMap59);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig41.startupHook(startupHook61);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig41.getstartUpHook();
        atmosphereConfig40.setstartUpHook(startupHookList63);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(startupHookList63);
    }

    @Test
    public void test05047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05047");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig7.setproperties(strMap12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig7.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.shutdownHook(shutdownHook17);
        java.lang.String str21 = atmosphereConfig15.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig7.populate(atmosphereConfig15);
        boolean boolean25 = atmosphereConfig15.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test05048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05048");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        int int14 = atmosphereConfig0.getInitParameter("", (int) ' ');
        org.slf4j.Logger logger15 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig0.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.shutdownHook(shutdownHook18);
        java.lang.Class<?> wildcardClass20 = atmosphereConfig19.getClass();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test05049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05049");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig12.getstartUpHook();
        boolean boolean16 = atmosphereConfig12.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory17 = atmosphereConfig12.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test05050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05050");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.lang.String str24 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.initComplete();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test05051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05051");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.populate(atmosphereConfig10);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig1.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig1.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap21 = atmosphereConfig1.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
    }

    @Test
    public void test05052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05052");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.lang.String str12 = atmosphereConfig9.getInitParameter("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster13 = atmosphereConfig9.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test05053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05053");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        boolean boolean16 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean17 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig6.framework = atmosphereFramework18;
        boolean boolean22 = atmosphereConfig6.getInitParameter("", true);
        java.lang.String str25 = atmosphereConfig6.getInitParameter("hi!", "");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test05054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05054");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        atmosphereConfig8.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig8.framework;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory12 = atmosphereConfig8.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test05055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05055");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig1.framework;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig1.atmosphereHandlerConfig;
        boolean boolean13 = atmosphereConfig1.isSupportSession();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig1.startupHook(startupHook16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig17.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig17.framework = atmosphereFramework19;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig21 = atmosphereConfig17.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNull(atmosphereFramework18);
    }

    @Test
    public void test05056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05056");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig1.shutdownHook(shutdownHook10);
        int int14 = atmosphereConfig11.getInitParameter("", 100);
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig11.getstartUpHook();
        java.lang.String str22 = atmosphereConfig11.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test05057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05057");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        java.lang.String str5 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig7.properties;
        atmosphereConfig0.setproperties(strMap10);
        boolean boolean14 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean15 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.shutdownHook(shutdownHook16);
        atmosphereConfig17.setThrowExceptionOnCloned(false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test05058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05058");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        boolean boolean8 = atmosphereConfig1.throwExceptionOnCloned;
        boolean boolean9 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.properties;
        org.slf4j.Logger logger11 = atmosphereConfig1.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig12.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig12.shutdownHook(shutdownHook14);
        org.slf4j.Logger logger16 = atmosphereConfig12.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig12.setframework(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList20, startupHookArray19);
        atmosphereConfig12.startUpHook = startupHookList20;
        atmosphereConfig12.destroy();
        boolean boolean24 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig12.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig12.shutdownHook(shutdownHook26);
        atmosphereConfig27.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig27.framework;
        atmosphereConfig27.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig32.framework();
        atmosphereConfig32.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        int int42 = atmosphereConfig37.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig37.framework = atmosphereFramework43;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig37.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig37.shutdownHooks;
        atmosphereConfig32.shutdownHooks = shutdownHookList46;
        atmosphereConfig27.shutdownHooks = shutdownHookList46;
        atmosphereConfig1.shutdownHooks = shutdownHookList46;
        java.lang.Class<?> wildcardClass50 = atmosphereConfig1.getClass();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertNotNull(startupHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test05059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05059");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig18.setThrowExceptionOnCloned(true);
        java.lang.String str24 = atmosphereConfig18.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig10.shutdownHooks = shutdownHookList25;
        atmosphereConfig1.shutdownHooks = shutdownHookList25;
        int int30 = atmosphereConfig1.getInitParameter("", (int) (byte) -1);
        atmosphereConfig1.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig1.startupHook(startupHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig34.framework();
        atmosphereConfig34.throwExceptionOnCloned = false;
        boolean boolean38 = atmosphereConfig34.supportSession;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test05060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05060");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean18 = atmosphereConfig1.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig1.getstartUpHook();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory20 = atmosphereConfig1.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
    }

    @Test
    public void test05061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05061");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        org.slf4j.Logger logger12 = atmosphereConfig1.getlogger();
        boolean boolean13 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig1.properties();
        boolean boolean15 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig1.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
    }

    @Test
    public void test05062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05062");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig0.properties = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.setframework(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig16.framework();
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(atmosphereFramework17);
    }

    @Test
    public void test05063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05063");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        java.lang.String str5 = atmosphereConfig0.getInitParameter("");
        java.lang.String str7 = atmosphereConfig0.getInitParameter("");
        boolean boolean8 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        atmosphereConfig12.setSupportSession(false);
        boolean boolean16 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        atmosphereConfig12.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig20.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig20.shutdownHook(shutdownHook22);
        java.lang.String str26 = atmosphereConfig20.getInitParameter("hi!", "");
        boolean boolean27 = atmosphereConfig20.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig20.shutdownHook(shutdownHook28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig29.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        boolean boolean37 = atmosphereConfig32.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig32.shutdownHook(shutdownHook38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig29.populate(atmosphereConfig32);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig19.startUpHook = startupHookList41;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig19.framework();
        atmosphereConfig19.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig47.properties = strMap50;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig47.startupHook(startupHook52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig47.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig47.properties;
        atmosphereConfig19.properties = strMap55;
        atmosphereConfig0.setproperties(strMap55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test05064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05064");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        boolean boolean6 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig1.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.framework();
        int int14 = atmosphereConfig9.getInitParameter("hi!", 0);
        boolean boolean15 = atmosphereConfig9.supportSession;
        boolean boolean16 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig17.shutdownHook(shutdownHook19);
        java.lang.String str23 = atmosphereConfig17.getInitParameter("hi!", "");
        boolean boolean24 = atmosphereConfig17.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig17.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig26.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig31.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig31.shutdownHook(shutdownHook33);
        java.lang.String str37 = atmosphereConfig31.getInitParameter("hi!", "");
        boolean boolean38 = atmosphereConfig31.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig31.startUpHook;
        atmosphereConfig26.startUpHook = startupHookList39;
        atmosphereConfig9.startUpHook = startupHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig9.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties();
        atmosphereConfig45.properties = strMap48;
        atmosphereConfig45.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig9.shutdownHooks = shutdownHookList52;
        atmosphereConfig1.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig1.shutdownHook(shutdownHook55);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        java.lang.Class<?> wildcardClass59 = atmosphereConfig1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test05065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05065");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.supportSession = false;
        boolean boolean4 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig5.shutdownHook(shutdownHook7);
        java.lang.String str11 = atmosphereConfig5.getInitParameter("hi!", "");
        boolean boolean12 = atmosphereConfig5.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig5.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig5.framework();
        atmosphereConfig5.destroy();
        atmosphereConfig5.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig5.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList18;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration20 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(startupHookList18);
    }

    @Test
    public void test05066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05066");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig0.framework = atmosphereFramework21;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig0.properties();
        atmosphereConfig0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory25 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test05067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05067");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        boolean boolean9 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig1.framework;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster12 = atmosphereConfig1.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test05068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05068");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig1.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig1.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        int int19 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig14.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig14.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig14.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        boolean boolean26 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig24.framework;
        java.lang.String str29 = atmosphereConfig24.getInitParameter("");
        java.lang.String str31 = atmosphereConfig24.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.populate(atmosphereConfig24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig14.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig1.populate(atmosphereConfig14);
        boolean boolean35 = atmosphereConfig14.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test05069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05069");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.shutdownHook(shutdownHook10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
    }

    @Test
    public void test05070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05070");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        atmosphereConfig1.throwExceptionOnCloned = false;
        org.slf4j.Logger logger16 = atmosphereConfig1.getlogger();
        boolean boolean17 = atmosphereConfig1.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05071");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.shutdownHooks;
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        org.slf4j.Logger logger14 = atmosphereConfig9.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.setframework(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        boolean boolean23 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig18.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig27.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSupportSession();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig36.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig36.shutdownHook(shutdownHook38);
        org.slf4j.Logger logger40 = atmosphereConfig36.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig36.setframework(atmosphereFramework41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig36.startUpHook = startupHookList44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig33.populate(atmosphereConfig36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig18.populate(atmosphereConfig33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig48.setframework(atmosphereFramework49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig51.properties();
        atmosphereConfig51.setThrowExceptionOnCloned(true);
        boolean boolean56 = atmosphereConfig51.isSupportSession();
        atmosphereConfig51.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig51.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList60 = atmosphereConfig51.shutdownHooks;
        atmosphereConfig48.shutdownHooks = shutdownHookList60;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig48.shutdownHook(shutdownHook62);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig48.shutdownHooks;
        atmosphereConfig9.setshutdownHooks(shutdownHookList64);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(logger40);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(shutdownHookList60);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(shutdownHookList64);
    }

    @Test
    public void test05072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05072");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig9.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig9.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        atmosphereConfig14.throwExceptionOnCloned = true;
        atmosphereConfig14.sessionTimeoutRemovalAllowed = true;
        boolean boolean23 = atmosphereConfig14.isThrowExceptionOnCloned();
        java.lang.String str25 = atmosphereConfig14.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig14.getproperties();
        atmosphereConfig9.setproperties(strMap26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig9.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig9.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
    }

    @Test
    public void test05073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05073");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        int int8 = atmosphereConfig0.getInitParameter("hi!", (int) 'a');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig27.shutdownHooks = shutdownHookList42;
        atmosphereConfig18.shutdownHooks = shutdownHookList42;
        atmosphereConfig10.setshutdownHooks(shutdownHookList42);
        atmosphereConfig0.setshutdownHooks(shutdownHookList42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig48.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig51.shutdownHooks;
        atmosphereConfig50.setshutdownHooks(shutdownHookList52);
        boolean boolean54 = atmosphereConfig50.isSupportSession();
        boolean boolean55 = atmosphereConfig50.isSupportSession();
        java.lang.String str57 = atmosphereConfig50.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig48.shutdownHooks = shutdownHookList58;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig48.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig48.setframework(atmosphereFramework61);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig48.framework = atmosphereFramework63;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig48.shutdownHooks;
        java.lang.String str67 = atmosphereConfig48.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 97 + "'", int8 == 97);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test05074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05074");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig5.shutdownHook(shutdownHook7);
        org.slf4j.Logger logger9 = atmosphereConfig5.getlogger();
        java.lang.String str12 = atmosphereConfig5.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        int int19 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig14.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig14.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig14.startUpHook;
        atmosphereConfig5.setstartUpHook(startupHookList23);
        atmosphereConfig0.startUpHook = startupHookList23;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.startupHook(startupHook27);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
    }

    @Test
    public void test05075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05075");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(atmosphereFramework8);
    }

    @Test
    public void test05076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05076");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.framework = atmosphereFramework10;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig0.setframework(atmosphereFramework12);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test05077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05077");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.properties;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        boolean boolean10 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig11.shutdownHook(shutdownHook13);
        java.lang.String str17 = atmosphereConfig11.getInitParameter("hi!", "");
        boolean boolean18 = atmosphereConfig11.isThrowExceptionOnCloned();
        atmosphereConfig11.initComplete();
        boolean boolean20 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig11.getstartUpHook();
        atmosphereConfig1.setstartUpHook(startupHookList21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig1.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig26.properties();
        atmosphereConfig25.properties = strMap28;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig25.startupHook(startupHook30);
        boolean boolean32 = atmosphereConfig31.isSupportSession();
        boolean boolean33 = atmosphereConfig31.supportSession;
        atmosphereConfig31.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig31.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig31.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig31.properties;
        atmosphereConfig1.properties = strMap39;
        boolean boolean41 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig1.framework;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(atmosphereFramework42);
    }

    @Test
    public void test05078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05078");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig8.framework();
        atmosphereConfig8.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig8.shutdownHooks;
        atmosphereConfig1.setshutdownHooks(shutdownHookList12);
        boolean boolean14 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05079");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        boolean boolean7 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.shutdownHook(shutdownHook9);
        atmosphereConfig1.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig1.framework;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test05080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05080");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig5.shutdownHook(shutdownHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig5.getshutdownHooks();
        atmosphereConfig5.setSupportSession(false);
        org.slf4j.Logger logger11 = atmosphereConfig5.getlogger();
        atmosphereConfig5.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig5.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider15 = atmosphereConfig5.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test05081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05081");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig1.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig1.getproperties();
        atmosphereConfig1.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = null;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList14;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig16.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig16.shutdownHook(shutdownHook18);
        org.slf4j.Logger logger20 = atmosphereConfig16.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig16.setframework(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig16.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig26.startupHook(startupHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = null;
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        atmosphereConfig26.supportSession = false;
        java.lang.String str38 = atmosphereConfig26.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig24.populate(atmosphereConfig26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig39.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig39.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        atmosphereConfig39.setframework(atmosphereFramework42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        atmosphereConfig39.framework = atmosphereFramework44;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig1.populate(atmosphereConfig39);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory47 = atmosphereConfig39.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
    }

    @Test
    public void test05082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05082");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.initComplete();
        java.lang.Class<?> wildcardClass13 = atmosphereConfig1.getClass();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05083");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        boolean boolean4 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test05084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05084");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        boolean boolean8 = atmosphereConfig1.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.shutdownHook(shutdownHook9);
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig1.framework();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test05085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05085");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.framework = atmosphereFramework13;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        java.lang.String str19 = atmosphereConfig16.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig16.setframework(atmosphereFramework20);
        java.lang.Class<?> wildcardClass22 = atmosphereConfig16.getClass();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test05086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05086");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.shutdownHook(shutdownHook8);
        java.lang.String str12 = atmosphereConfig6.getInitParameter("hi!", "");
        boolean boolean13 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig6.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig6.startUpHook;
        boolean boolean17 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig6.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig21.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        atmosphereConfig21.setstartUpHook(startupHookList29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        atmosphereConfig21.setproperties(strMap35);
        boolean boolean40 = atmosphereConfig21.getInitParameter("", false);
        java.lang.String str43 = atmosphereConfig21.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig21.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig46.shutdownHooks;
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework50);
        atmosphereConfig51.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework54);
        atmosphereConfig55.setThrowExceptionOnCloned(false);
        int int60 = atmosphereConfig55.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        atmosphereConfig55.framework = atmosphereFramework61;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig55.properties();
        atmosphereConfig51.setproperties(strMap63);
        atmosphereConfig46.properties = strMap63;
        atmosphereConfig21.setproperties(strMap63);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig21.shutdownHooks;
        atmosphereConfig6.setshutdownHooks(shutdownHookList67);
        atmosphereConfig0.shutdownHooks = shutdownHookList67;
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(shutdownHookList72);
    }

    @Test
    public void test05087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05087");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList3 = atmosphereConfig1.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig1.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.shutdownHook(shutdownHook8);
        java.lang.String str12 = atmosphereConfig6.getInitParameter("hi!", "");
        boolean boolean13 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig6.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17, startupHookArray16);
        atmosphereConfig15.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17);
        atmosphereConfig1.startUpHook = startupHookList17;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig1.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        atmosphereConfig23.setThrowExceptionOnCloned(true);
        java.lang.String str29 = atmosphereConfig23.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig23.getstartUpHook();
        atmosphereConfig23.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig32.setThrowExceptionOnCloned(true);
        java.lang.String str38 = atmosphereConfig32.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig32.getshutdownHooks();
        java.lang.String str41 = atmosphereConfig32.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig32.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig32.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig44.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig23.populate(atmosphereConfig44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig23.framework;
        java.lang.String str49 = atmosphereConfig23.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig23.startUpHook;
        atmosphereConfig1.startUpHook = startupHookList50;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig1.startupHook(startupHook52);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory54 = atmosphereConfig53.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList3);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
    }

    @Test
    public void test05088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05088");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        atmosphereConfig0.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
    }

    @Test
    public void test05089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05089");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean8 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig1.shutdownHooks;
        boolean boolean15 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig1.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        atmosphereConfig18.setSupportSession(false);
        boolean boolean22 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        atmosphereConfig18.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig18.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig26.shutdownHook(shutdownHook28);
        java.lang.String str32 = atmosphereConfig26.getInitParameter("hi!", "");
        boolean boolean33 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig26.shutdownHook(shutdownHook34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig35.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig39.properties();
        atmosphereConfig38.properties = strMap41;
        boolean boolean43 = atmosphereConfig38.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig38.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig35.populate(atmosphereConfig38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.getstartUpHook();
        atmosphereConfig25.startUpHook = startupHookList47;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig25.getAtmosphereHandlerConfig();
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        int int53 = atmosphereConfig1.getInitParameter("hi!", 32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig54.properties();
        atmosphereConfig54.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework59);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList62 = atmosphereConfig61.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = atmosphereConfig61.properties();
        atmosphereConfig60.properties = strMap63;
        atmosphereConfig60.throwExceptionOnCloned = true;
        atmosphereConfig60.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig54.populate(atmosphereConfig60);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = atmosphereConfig60.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig71.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig71.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig71.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList75 = atmosphereConfig71.getAtmosphereHandlerConfig();
        atmosphereConfig60.atmosphereHandlerConfig = atmosphereHandlerConfigList75;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig60.shutdownHook(shutdownHook77);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig1.populate(atmosphereConfig60);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 32 + "'", int53 == 32);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(startupHookList62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(shutdownHookList70);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList75);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
    }

    @Test
    public void test05090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05090");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.startUpHook;
        java.lang.String str11 = atmosphereConfig0.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        boolean boolean20 = atmosphereConfig13.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig13.getframework();
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig13.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig13.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig13.properties;
        atmosphereConfig0.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.startupHook(startupHook31);
        atmosphereConfig32.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test05091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05091");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.startupHook(startupHook9);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory11 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(atmosphereConfig10);
    }

    @Test
    public void test05092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05092");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean12 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.setframework(atmosphereFramework13);
        atmosphereConfig0.destroy();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05093");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        org.slf4j.Logger logger14 = atmosphereConfig10.getlogger();
        atmosphereConfig10.supportSession = true;
        boolean boolean17 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig20.properties();
        atmosphereConfig19.properties = strMap22;
        boolean boolean24 = atmosphereConfig19.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig19.shutdownHook(shutdownHook25);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig19.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList27);
        atmosphereConfig0.setshutdownHooks(shutdownHookList27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig30.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig30.shutdownHook(shutdownHook32);
        java.lang.String str36 = atmosphereConfig30.getInitParameter("hi!", "");
        boolean boolean37 = atmosphereConfig30.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig30.shutdownHook(shutdownHook38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig39.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig43.properties();
        atmosphereConfig42.properties = strMap45;
        boolean boolean47 = atmosphereConfig42.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig42.shutdownHook(shutdownHook48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig39.populate(atmosphereConfig42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig42.setframework(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig42.shutdownHook(shutdownHook53);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig57.properties();
        atmosphereConfig56.properties = strMap59;
        atmosphereConfig56.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig63.startUpHook;
        atmosphereConfig56.setstartUpHook(startupHookList64);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework66);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList69 = atmosphereConfig68.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig68.properties();
        atmosphereConfig67.properties = strMap70;
        atmosphereConfig56.setproperties(strMap70);
        boolean boolean75 = atmosphereConfig56.getInitParameter("", false);
        java.lang.String str78 = atmosphereConfig56.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig56.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList80 = atmosphereConfig56.getstartUpHook();
        atmosphereConfig54.startUpHook = startupHookList80;
        atmosphereConfig54.supportSession = false;
        atmosphereConfig54.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework86 = atmosphereConfig54.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList87 = atmosphereConfig54.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList87);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNotNull(startupHookList69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(startupHookList80);
        org.junit.Assert.assertNull(atmosphereFramework86);
        org.junit.Assert.assertNotNull(startupHookList87);
    }

    @Test
    public void test05094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05094");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test05095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05095");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        int int18 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig13.framework = atmosphereFramework19;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig13.properties();
        atmosphereConfig9.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig23.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig23.shutdownHook(shutdownHook25);
        java.lang.String str29 = atmosphereConfig23.getInitParameter("hi!", "");
        boolean boolean30 = atmosphereConfig23.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig23.shutdownHook(shutdownHook31);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig32.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig32.atmosphereHandlerConfig;
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        atmosphereConfig37.setSupportSession(false);
        boolean boolean42 = atmosphereConfig37.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig37.getstartUpHook();
        atmosphereConfig9.startUpHook = startupHookList43;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig47.properties();
        atmosphereConfig46.properties = strMap49;
        atmosphereConfig46.supportSession = false;
        atmosphereConfig46.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig46.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig9.populate(atmosphereConfig46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig57.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList58;
        org.slf4j.Logger logger60 = atmosphereConfig0.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig61 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNotNull(logger60);
    }

    @Test
    public void test05096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05096");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig7.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig7.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig7.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig7.shutdownHook(shutdownHook34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig37.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.shutdownHook(shutdownHook42);
        boolean boolean44 = atmosphereConfig43.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig43.properties();
        atmosphereConfig7.properties = strMap45;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test05097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05097");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig12.setframework(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig12.framework();
        boolean boolean24 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        atmosphereConfig12.supportSession = false;
        boolean boolean27 = atmosphereConfig12.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig12.startupHook(startupHook28);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory30 = atmosphereConfig12.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
    }

    @Test
    public void test05098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05098");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = atmosphereConfig0.getframework();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("");
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.framework = atmosphereFramework9;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        atmosphereConfig13.setSupportSession(false);
        java.lang.String str19 = atmosphereConfig13.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig13.framework();
        java.lang.String str23 = atmosphereConfig13.getInitParameter("hi!", "hi!");
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig27.framework();
        int int32 = atmosphereConfig27.getInitParameter("hi!", 0);
        boolean boolean33 = atmosphereConfig27.supportSession;
        boolean boolean34 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig35.shutdownHook(shutdownHook37);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("hi!", "");
        boolean boolean42 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig35.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46, startupHookArray45);
        atmosphereConfig44.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig49.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig49.shutdownHook(shutdownHook51);
        java.lang.String str55 = atmosphereConfig49.getInitParameter("hi!", "");
        boolean boolean56 = atmosphereConfig49.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig49.startUpHook;
        atmosphereConfig44.startUpHook = startupHookList57;
        atmosphereConfig27.startUpHook = startupHookList57;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig27.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig27.getstartUpHook();
        atmosphereConfig13.setstartUpHook(startupHookList61);
        atmosphereConfig0.startUpHook = startupHookList61;
        java.lang.Class<?> wildcardClass64 = startupHookList61.getClass();
        org.junit.Assert.assertNull(atmosphereFramework1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(startupHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test05099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05099");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig1.shutdownHook(shutdownHook11);
        boolean boolean13 = atmosphereConfig1.supportSession;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05100");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.framework = atmosphereFramework11;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig13.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig13.properties = strMap20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig13.properties();
        atmosphereConfig0.setproperties(strMap22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig0.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig0.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster26 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
    }

    @Test
    public void test05101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05101");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig1.getstartUpHook();
        boolean boolean10 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig1.setframework(atmosphereFramework11);
        atmosphereConfig1.destroy();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05102");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str19 = atmosphereConfig0.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.shutdownHook(shutdownHook22);
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
    }

    @Test
    public void test05103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05103");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.initComplete();
        java.lang.String str23 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean24 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test05104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05104");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig7.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig7.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig7.properties;
        java.lang.String str17 = atmosphereConfig7.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig7.framework = atmosphereFramework18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig7.setframework(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05105");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.setframework(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05106");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        int int15 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig10.framework = atmosphereFramework16;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig10.properties();
        boolean boolean19 = atmosphereConfig10.isSupportSession();
        boolean boolean20 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean21 = atmosphereConfig10.isSupportSession();
        java.lang.String str24 = atmosphereConfig10.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig26.startupHook(startupHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig26.atmosphereHandlerConfig;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        boolean boolean37 = atmosphereConfig10.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig1.populate(atmosphereConfig10);
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig1.framework();
        boolean boolean42 = atmosphereConfig1.isSupportSession();
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig45.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig1.populate(atmosphereConfig45);
        atmosphereConfig47.setSupportSession(true);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
    }

    @Test
    public void test05107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05107");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig5.framework();
        int int10 = atmosphereConfig5.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray11 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12, shutdownHookArray11);
        atmosphereConfig5.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList12);
        boolean boolean15 = atmosphereConfig5.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.populate(atmosphereConfig5);
        atmosphereConfig16.setSessionTimeoutRemovalAllowed(true);
        boolean boolean21 = atmosphereConfig16.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig16.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig24.setSupportSession(false);
        atmosphereConfig24.setSupportSession(false);
        boolean boolean31 = atmosphereConfig24.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig24.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig24.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig23.setstartUpHook(startupHookList34);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(shutdownHookList4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookList34);
    }

    @Test
    public void test05108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05108");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig10.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21, startupHookArray20);
        atmosphereConfig19.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig24.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig24.shutdownHook(shutdownHook26);
        java.lang.String str30 = atmosphereConfig24.getInitParameter("hi!", "");
        boolean boolean31 = atmosphereConfig24.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig24.startUpHook;
        atmosphereConfig19.startUpHook = startupHookList32;
        atmosphereConfig0.setstartUpHook(startupHookList32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties();
        atmosphereConfig36.properties = strMap39;
        atmosphereConfig36.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        atmosphereConfig36.setstartUpHook(startupHookList44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig47.properties = strMap50;
        atmosphereConfig36.setproperties(strMap50);
        boolean boolean55 = atmosphereConfig36.getInitParameter("", false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig36.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList56;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig60.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig60.properties();
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig60.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig60.properties;
        atmosphereConfig0.properties = strMap66;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test05109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05109");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider11 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNull(atmosphereFramework7);
    }

    @Test
    public void test05110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05110");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig5.properties();
        atmosphereConfig0.properties = strMap7;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig0.properties;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test05111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05111");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        boolean boolean6 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig1.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.framework();
        int int14 = atmosphereConfig9.getInitParameter("hi!", 0);
        boolean boolean15 = atmosphereConfig9.supportSession;
        boolean boolean16 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig17.shutdownHook(shutdownHook19);
        java.lang.String str23 = atmosphereConfig17.getInitParameter("hi!", "");
        boolean boolean24 = atmosphereConfig17.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig17.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig26.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig31.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig31.shutdownHook(shutdownHook33);
        java.lang.String str37 = atmosphereConfig31.getInitParameter("hi!", "");
        boolean boolean38 = atmosphereConfig31.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig31.startUpHook;
        atmosphereConfig26.startUpHook = startupHookList39;
        atmosphereConfig9.startUpHook = startupHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig9.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties();
        atmosphereConfig45.properties = strMap48;
        atmosphereConfig45.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig9.shutdownHooks = shutdownHookList52;
        atmosphereConfig1.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = atmosphereConfig1.shutdownHook(shutdownHook55);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider57 = atmosphereConfig1.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig56);
    }

    @Test
    public void test05112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05112");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean8 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig10.framework;
        java.lang.String str15 = atmosphereConfig10.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.properties;
        atmosphereConfig10.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        atmosphereConfig23.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList30);
        atmosphereConfig1.shutdownHooks = shutdownHookList30;
        boolean boolean33 = atmosphereConfig1.isThrowExceptionOnCloned();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig36.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig36.shutdownHook(shutdownHook38);
        org.slf4j.Logger logger40 = atmosphereConfig36.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig36.setframework(atmosphereFramework41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig36.startUpHook = startupHookList44;
        atmosphereConfig36.destroy();
        boolean boolean48 = atmosphereConfig36.isThrowExceptionOnCloned();
        org.slf4j.Logger logger49 = atmosphereConfig36.getlogger();
        boolean boolean52 = atmosphereConfig36.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig36.startupHook(startupHook53);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig36.getstartUpHook();
        atmosphereConfig1.startUpHook = startupHookList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str60 = atmosphereConfig57.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig57.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig62.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig62.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig62.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig57.populate(atmosphereConfig62);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig62.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig62.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig1.populate(atmosphereConfig62);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = atmosphereConfig70.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig70.shutdownHook(shutdownHook72);
        java.lang.String str76 = atmosphereConfig70.getInitParameter("hi!", "");
        boolean boolean77 = atmosphereConfig70.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig70.shutdownHook(shutdownHook78);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig79.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig79.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList83 = atmosphereConfig82.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework84 = atmosphereConfig82.framework();
        int int87 = atmosphereConfig82.getInitParameter("hi!", 0);
        boolean boolean88 = atmosphereConfig82.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = null;
        atmosphereConfig82.framework = atmosphereFramework89;
        boolean boolean91 = atmosphereConfig82.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList92 = atmosphereConfig82.startUpHook;
        atmosphereConfig79.startUpHook = startupHookList92;
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = atmosphereConfig79.properties;
        org.slf4j.Logger logger95 = atmosphereConfig79.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList96 = atmosphereConfig79.startUpHook;
        atmosphereConfig62.startUpHook = startupHookList96;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(logger40);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(logger49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(shutdownHookList68);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(shutdownHookList71);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(shutdownHookList81);
        org.junit.Assert.assertNotNull(startupHookList83);
        org.junit.Assert.assertNull(atmosphereFramework84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(startupHookList92);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(logger95);
        org.junit.Assert.assertNotNull(startupHookList96);
    }

    @Test
    public void test05113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05113");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        boolean boolean9 = atmosphereConfig0.supportSession;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test05114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05114");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig8.properties;
        boolean boolean10 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig8.properties();
        atmosphereConfig8.supportSession = false;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test05115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05115");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig12.shutdownHooks;
        atmosphereConfig11.setshutdownHooks(shutdownHookList13);
        boolean boolean15 = atmosphereConfig11.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig11.framework();
        boolean boolean17 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig11.properties();
        atmosphereConfig1.setproperties(strMap18);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider20 = atmosphereConfig1.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test05116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05116");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.initComplete();
        atmosphereConfig1.initComplete();
        int int16 = atmosphereConfig1.getInitParameter("", (-1));
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.shutdownHook(shutdownHook17);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory19 = atmosphereConfig18.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig18);
    }

    @Test
    public void test05117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05117");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(startupHookList9);
    }

    @Test
    public void test05118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05118");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig4.framework;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList10);
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.throwExceptionOnCloned = true;
        atmosphereConfig18.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig18.getproperties();
        atmosphereConfig16.properties = strMap27;
        atmosphereConfig0.setproperties(strMap27);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig31.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig35.shutdownHook(shutdownHook37);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("hi!", "");
        boolean boolean42 = atmosphereConfig35.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig35.shutdownHook(shutdownHook43);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray45 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46, startupHookArray45);
        atmosphereConfig44.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46);
        atmosphereConfig31.startUpHook = startupHookList46;
        atmosphereConfig0.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList46);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig51 = atmosphereConfig0.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(startupHookArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test05119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05119");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig8.framework();
        atmosphereConfig8.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig13.framework();
        int int18 = atmosphereConfig13.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig13.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20);
        boolean boolean23 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig8.populate(atmosphereConfig13);
        boolean boolean25 = atmosphereConfig8.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig26.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig26.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig26.getproperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig26.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig26.shutdownHooks;
        atmosphereConfig8.shutdownHooks = shutdownHookList31;
        atmosphereConfig0.shutdownHooks = shutdownHookList31;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
    }

    @Test
    public void test05120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05120");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig22.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig28.getproperties();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test05121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05121");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig12.getstartUpHook();
        atmosphereConfig10.setstartUpHook(startupHookList20);
        boolean boolean22 = atmosphereConfig10.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig10.shutdownHooks;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(shutdownHookList23);
    }

    @Test
    public void test05122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05122");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig9.properties();
        atmosphereConfig5.setproperties(strMap17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig5.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        org.slf4j.Logger logger25 = atmosphereConfig21.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig21.setframework(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray28 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29, startupHookArray28);
        atmosphereConfig21.startUpHook = startupHookList29;
        atmosphereConfig1.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        atmosphereConfig33.startUpHook = startupHookList35;
        atmosphereConfig1.setstartUpHook(startupHookList35);
        atmosphereConfig1.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties();
        atmosphereConfig40.setThrowExceptionOnCloned(true);
        java.lang.String str46 = atmosphereConfig40.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig40.getshutdownHooks();
        java.lang.String str49 = atmosphereConfig40.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig1.setshutdownHooks(shutdownHookList50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig52.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig52.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig56.shutdownHooks;
        atmosphereConfig55.setshutdownHooks(shutdownHookList57);
        atmosphereConfig52.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig60.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig60.properties();
        atmosphereConfig52.properties = strMap62;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig52.getproperties();
        atmosphereConfig1.properties = strMap64;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster66 = atmosphereConfig1.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(logger25);
        org.junit.Assert.assertNotNull(startupHookArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test05123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05123");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.isSupportSession();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05124");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig22.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        java.lang.String str31 = atmosphereConfig25.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig25.getshutdownHooks();
        java.lang.String str34 = atmosphereConfig25.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig22.setshutdownHooks(shutdownHookList35);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext37 = atmosphereConfig22.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
    }

    @Test
    public void test05125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05125");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.supportSession;
        boolean boolean5 = atmosphereConfig1.throwExceptionOnCloned;
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig1.framework();
        atmosphereConfig1.initComplete();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
    }

    @Test
    public void test05126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05126");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig11.framework;
        java.lang.String str16 = atmosphereConfig11.getInitParameter("");
        java.lang.String str18 = atmosphereConfig11.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig1.populate(atmosphereConfig11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.framework = atmosphereFramework20;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig19.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig19.framework;
        boolean boolean24 = atmosphereConfig19.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig25.getframework();
        boolean boolean27 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        boolean boolean28 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig25.setframework(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig31.getframework();
        boolean boolean33 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        atmosphereConfig35.throwExceptionOnCloned = true;
        atmosphereConfig35.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig35.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig35.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig35.getproperties();
        atmosphereConfig31.setproperties(strMap46);
        atmosphereConfig25.setproperties(strMap46);
        atmosphereConfig19.properties = strMap46;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test05127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05127");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        int int15 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig10.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig10.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig10.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        boolean boolean22 = atmosphereConfig20.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig20.framework;
        java.lang.String str25 = atmosphereConfig20.getInitParameter("");
        java.lang.String str27 = atmosphereConfig20.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig10.populate(atmosphereConfig20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        atmosphereConfig30.properties = strMap33;
        atmosphereConfig30.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        atmosphereConfig30.setstartUpHook(startupHookList38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig42.properties();
        atmosphereConfig41.properties = strMap44;
        atmosphereConfig30.setproperties(strMap44);
        boolean boolean49 = atmosphereConfig30.getInitParameter("", false);
        java.lang.String str52 = atmosphereConfig30.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig30.getproperties();
        atmosphereConfig28.setproperties(strMap54);
        atmosphereConfig1.properties = strMap54;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig57.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig57.shutdownHook(shutdownHook59);
        java.lang.String str63 = atmosphereConfig57.getInitParameter("hi!", "");
        boolean boolean64 = atmosphereConfig57.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig57.shutdownHook(shutdownHook65);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray67 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList68, startupHookArray67);
        atmosphereConfig66.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig71.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig71.shutdownHook(shutdownHook73);
        java.lang.String str77 = atmosphereConfig71.getInitParameter("hi!", "");
        boolean boolean78 = atmosphereConfig71.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList79 = atmosphereConfig71.startUpHook;
        atmosphereConfig66.startUpHook = startupHookList79;
        atmosphereConfig1.setstartUpHook(startupHookList79);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework82 = null;
        atmosphereConfig1.setframework(atmosphereFramework82);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory84 = atmosphereConfig1.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(startupHookArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(shutdownHookList72);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(startupHookList79);
    }

    @Test
    public void test05128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05128");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.slf4j.Logger logger8 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig7.shutdownHook(shutdownHook9);
        boolean boolean11 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = null;
        atmosphereConfig10.setstartUpHook(startupHookList12);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05129");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.initComplete();
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig1.framework = atmosphereFramework14;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05130");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework();
        java.lang.String str15 = atmosphereConfig0.getInitParameter("hi!", "hi!");
        boolean boolean16 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig17.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig17.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig17.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig25.shutdownHook(shutdownHook27);
        org.slf4j.Logger logger29 = atmosphereConfig25.getlogger();
        java.lang.String str32 = atmosphereConfig25.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig17.populate(atmosphereConfig25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        atmosphereConfig35.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList42 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig17.atmosphereHandlerConfig = atmosphereHandlerConfigList42;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig0.populate(atmosphereConfig17);
        boolean boolean45 = atmosphereConfig17.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test05131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05131");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        int int7 = atmosphereConfig0.getInitParameter("", (int) (short) -1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.setframework(atmosphereFramework8);
        boolean boolean10 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory14 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test05132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05132");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.supportSession;
        boolean boolean7 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray18 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19, startupHookArray18);
        atmosphereConfig17.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig22.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig22.shutdownHook(shutdownHook24);
        java.lang.String str28 = atmosphereConfig22.getInitParameter("hi!", "");
        boolean boolean29 = atmosphereConfig22.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig22.startUpHook;
        atmosphereConfig17.startUpHook = startupHookList30;
        atmosphereConfig0.startUpHook = startupHookList30;
        int int35 = atmosphereConfig0.getInitParameter("hi!", (int) (byte) 100);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        int int42 = atmosphereConfig37.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig37.framework = atmosphereFramework43;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig37.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig37.shutdownHook(shutdownHook46);
        boolean boolean48 = atmosphereConfig47.supportSession;
        boolean boolean49 = atmosphereConfig47.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig47.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList50);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 100 + "'", int35 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(shutdownHookList50);
    }

    @Test
    public void test05133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05133");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig12.setframework(atmosphereFramework13);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory16 = atmosphereConfig12.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test05134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05134");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig10.setframework(atmosphereFramework19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig10.properties;
        java.lang.String str23 = atmosphereConfig10.getInitParameter("");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test05135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05135");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        boolean boolean23 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig16.throwExceptionOnCloned;
        java.lang.String str26 = atmosphereConfig16.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig16.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig16.properties();
        atmosphereConfig13.properties = strMap29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig13.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties();
        atmosphereConfig33.properties = strMap36;
        atmosphereConfig33.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.startUpHook;
        atmosphereConfig33.setstartUpHook(startupHookList41);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig45.properties();
        atmosphereConfig44.properties = strMap47;
        atmosphereConfig33.setproperties(strMap47);
        boolean boolean52 = atmosphereConfig33.getInitParameter("", false);
        java.lang.String str55 = atmosphereConfig33.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig33.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig33.shutdownHooks;
        atmosphereConfig13.setshutdownHooks(shutdownHookList57);
        boolean boolean59 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        java.lang.String str62 = atmosphereConfig13.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList64 = atmosphereConfig63.shutdownHooks;
        atmosphereConfig63.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = atmosphereConfig63.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig70.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig70.properties();
        atmosphereConfig69.properties = strMap72;
        atmosphereConfig69.throwExceptionOnCloned = true;
        atmosphereConfig69.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig69.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig69.atmosphereHandlerConfig;
        atmosphereConfig63.atmosphereHandlerConfig = atmosphereHandlerConfigList79;
        atmosphereConfig63.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig63.atmosphereHandlerConfig;
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList83;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(shutdownHookList64);
        org.junit.Assert.assertNull(atmosphereFramework67);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
    }

    @Test
    public void test05136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05136");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        int int8 = atmosphereConfig0.getInitParameter("hi!", (int) 'a');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig27.shutdownHooks = shutdownHookList42;
        atmosphereConfig18.shutdownHooks = shutdownHookList42;
        atmosphereConfig10.setshutdownHooks(shutdownHookList42);
        atmosphereConfig0.setshutdownHooks(shutdownHookList42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig48.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig51.shutdownHooks;
        atmosphereConfig50.setshutdownHooks(shutdownHookList52);
        boolean boolean54 = atmosphereConfig50.isSupportSession();
        boolean boolean55 = atmosphereConfig50.isSupportSession();
        java.lang.String str57 = atmosphereConfig50.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig48.shutdownHooks = shutdownHookList58;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig48.framework;
        boolean boolean61 = atmosphereConfig48.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration62 = atmosphereConfig48.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 97 + "'", int8 == 97);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test05137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05137");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList6 = atmosphereConfig5.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig5.shutdownHook(shutdownHook7);
        org.slf4j.Logger logger9 = atmosphereConfig5.getlogger();
        java.lang.String str12 = atmosphereConfig5.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        int int19 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig14.framework = atmosphereFramework20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig14.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig14.startUpHook;
        atmosphereConfig5.setstartUpHook(startupHookList23);
        atmosphereConfig0.startUpHook = startupHookList23;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.startupHook(startupHook27);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        atmosphereConfig0.supportSession = true;
        boolean boolean35 = atmosphereConfig0.getInitParameter("hi!", true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(logger9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test05138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05138");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig9.properties = strMap12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig9.startupHook(startupHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig17.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        atmosphereConfig26.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig26.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties();
        atmosphereConfig34.setThrowExceptionOnCloned(true);
        java.lang.String str40 = atmosphereConfig34.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig34.getshutdownHooks();
        atmosphereConfig26.shutdownHooks = shutdownHookList41;
        atmosphereConfig17.shutdownHooks = shutdownHookList41;
        atmosphereConfig9.setshutdownHooks(shutdownHookList41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        boolean boolean47 = atmosphereConfig45.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig45.framework;
        java.lang.String str50 = atmosphereConfig45.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig45.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig52.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig52.properties;
        atmosphereConfig45.setproperties(strMap55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig59.properties();
        atmosphereConfig58.properties = strMap61;
        atmosphereConfig58.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig58.getshutdownHooks();
        atmosphereConfig45.setshutdownHooks(shutdownHookList65);
        atmosphereConfig9.shutdownHooks = shutdownHookList65;
        atmosphereConfig0.shutdownHooks = shutdownHookList65;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig69.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig69.properties();
        atmosphereConfig69.setSupportSession(false);
        atmosphereConfig69.setSupportSession(false);
        atmosphereConfig69.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig69.startupHook(startupHook77);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig78.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        atmosphereConfig78.setframework(atmosphereFramework80);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig0.populate(atmosphereConfig78);
        atmosphereConfig0.initComplete();
        java.lang.String str86 = atmosphereConfig0.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(strMap87);
    }

    @Test
    public void test05139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05139");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig0.properties = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.setframework(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(atmosphereFramework17);
    }

    @Test
    public void test05140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05140");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        org.slf4j.Logger logger14 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig10.setframework(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18, startupHookArray17);
        atmosphereConfig10.startUpHook = startupHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig7.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray22 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList23, shutdownHookArray22);
        atmosphereConfig10.shutdownHooks = shutdownHookList23;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig10.framework();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap27 = atmosphereConfig10.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(startupHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(shutdownHookArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(atmosphereFramework26);
    }

    @Test
    public void test05141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05141");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        atmosphereConfig10.sessionTimeoutRemovalAllowed = true;
        boolean boolean19 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig23.shutdownHooks;
        atmosphereConfig22.setshutdownHooks(shutdownHookList24);
        boolean boolean26 = atmosphereConfig22.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig22.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig7.populate(atmosphereConfig10);
        boolean boolean32 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig10.setframework(atmosphereFramework33);
        atmosphereConfig10.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = null;
        atmosphereConfig10.setshutdownHooks(shutdownHookList37);
        boolean boolean39 = atmosphereConfig10.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory40 = atmosphereConfig10.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test05142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05142");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        java.lang.String str15 = atmosphereConfig12.getInitParameter("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap16 = atmosphereConfig12.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test05143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05143");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig5.shutdownHook(shutdownHook6);
        boolean boolean8 = atmosphereConfig7.isThrowExceptionOnCloned();
        boolean boolean11 = atmosphereConfig7.getInitParameter("hi!", true);
        int int14 = atmosphereConfig7.getInitParameter("hi!", 52);
        boolean boolean15 = atmosphereConfig7.isThrowExceptionOnCloned();
        atmosphereConfig7.setThrowExceptionOnCloned(true);
        int int20 = atmosphereConfig7.getInitParameter("", (int) '#');
        org.slf4j.Logger logger21 = atmosphereConfig7.getlogger();
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 35 + "'", int20 == 35);
        org.junit.Assert.assertNotNull(logger21);
    }

    @Test
    public void test05144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05144");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig0.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        int int18 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig13.framework = atmosphereFramework19;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig13.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig13.shutdownHook(shutdownHook22);
        boolean boolean24 = atmosphereConfig23.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList26;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig0.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider29 = atmosphereConfig0.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
    }

    @Test
    public void test05145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05145");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.supportSession;
        boolean boolean7 = atmosphereConfig0.supportSession;
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        atmosphereConfig14.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig14.framework = atmosphereFramework21;
        atmosphereConfig14.throwExceptionOnCloned = true;
        atmosphereConfig14.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig14.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList27;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList27);
    }

    @Test
    public void test05146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05146");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig12);
        boolean boolean23 = atmosphereConfig12.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig24.setThrowExceptionOnCloned(true);
        java.lang.String str30 = atmosphereConfig24.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig24.getstartUpHook();
        atmosphereConfig24.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig24.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig24.properties();
        atmosphereConfig12.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str39 = atmosphereConfig36.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig36.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig41.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig36.populate(atmosphereConfig41);
        boolean boolean46 = atmosphereConfig41.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig41.getstartUpHook();
        atmosphereConfig12.setstartUpHook(startupHookList47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig49.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig49.shutdownHook(shutdownHook51);
        org.slf4j.Logger logger53 = atmosphereConfig49.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig49.setframework(atmosphereFramework54);
        boolean boolean56 = atmosphereConfig49.supportSession;
        atmosphereConfig49.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig49.properties;
        atmosphereConfig12.properties = strMap59;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig12.startupHook(startupHook61);
        atmosphereConfig62.initComplete();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertNotNull(logger53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
    }

    @Test
    public void test05147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05147");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig8.properties = strMap11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig14.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig14.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig6.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig18.framework;
        java.lang.String str23 = atmosphereConfig18.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig18.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties;
        atmosphereConfig18.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig18.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.populate(atmosphereConfig18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig18.framework = atmosphereFramework33;
        atmosphereConfig18.supportSession = true;
        boolean boolean37 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory38 = atmosphereConfig18.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test05148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05148");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig7.framework();
        atmosphereConfig7.throwExceptionOnCloned = false;
        atmosphereConfig7.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig7.shutdownHook(shutdownHook36);
        int int40 = atmosphereConfig37.getInitParameter("hi!", (int) (short) 10);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
    }

    @Test
    public void test05149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05149");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean18 = atmosphereConfig1.throwExceptionOnCloned;
        org.slf4j.Logger logger19 = atmosphereConfig1.getlogger();
        boolean boolean20 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        boolean boolean21 = atmosphereConfig1.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = atmosphereConfig1.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test05150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05150");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig5.properties();
        atmosphereConfig0.properties = strMap7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework();
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig11.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig11.getlogger();
        java.lang.String str18 = atmosphereConfig11.getInitParameter("hi!", "");
        boolean boolean19 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig11.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig21.shutdownHook(shutdownHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig30.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig30.shutdownHooks;
        atmosphereConfig11.setshutdownHooks(shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig0.populate(atmosphereConfig11);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig11.properties;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test05151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05151");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.initComplete();
        org.slf4j.Logger logger8 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str12 = atmosphereConfig9.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig9.framework;
        atmosphereConfig9.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig9.shutdownHook(shutdownHook15);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig19.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig26.properties();
        atmosphereConfig25.properties = strMap28;
        atmosphereConfig25.throwExceptionOnCloned = true;
        atmosphereConfig25.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig19.populate(atmosphereConfig25);
        boolean boolean35 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        java.lang.String str38 = atmosphereConfig25.getInitParameter("hi!", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig40.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig44.shutdownHook(shutdownHook45);
        boolean boolean47 = atmosphereConfig46.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig25.populate(atmosphereConfig46);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig25.setframework(atmosphereFramework49);
        atmosphereConfig25.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        boolean boolean55 = atmosphereConfig53.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = atmosphereConfig53.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig57.getAtmosphereHandlerConfig();
        boolean boolean59 = atmosphereConfig57.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig57.framework;
        org.slf4j.Logger logger61 = atmosphereConfig57.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig57.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig57.getstartUpHook();
        atmosphereConfig53.setstartUpHook(startupHookList63);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig53.getstartUpHook();
        atmosphereConfig25.setstartUpHook(startupHookList65);
        atmosphereConfig9.setstartUpHook(startupHookList65);
        atmosphereConfig0.startUpHook = startupHookList65;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(atmosphereFramework56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertNotNull(logger61);
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(startupHookList65);
    }

    @Test
    public void test05152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05152");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig7.shutdownHook(shutdownHook9);
        java.lang.String str13 = atmosphereConfig7.getInitParameter("hi!", "");
        boolean boolean14 = atmosphereConfig7.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig7.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.populate(atmosphereConfig16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig16.atmosphereHandlerConfig;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig16.shutdownHooks;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(shutdownHookList25);
    }

    @Test
    public void test05153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05153");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        atmosphereConfig11.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig11.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig11.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig11.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig24.properties = strMap27;
        atmosphereConfig24.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        atmosphereConfig24.setstartUpHook(startupHookList32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        atmosphereConfig24.setproperties(strMap38);
        boolean boolean43 = atmosphereConfig24.getInitParameter("", false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig24.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList46 = atmosphereConfig45.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig45.shutdownHook(shutdownHook47);
        org.slf4j.Logger logger49 = atmosphereConfig45.getlogger();
        java.lang.String str52 = atmosphereConfig45.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig55.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig55.properties();
        atmosphereConfig54.properties = strMap57;
        atmosphereConfig54.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig54.getAtmosphereHandlerConfig();
        atmosphereConfig45.atmosphereHandlerConfig = atmosphereHandlerConfigList61;
        atmosphereConfig24.atmosphereHandlerConfig = atmosphereHandlerConfigList61;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList61;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig1.getproperties();
        int int68 = atmosphereConfig1.getInitParameter("hi!", 10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = null;
        atmosphereConfig1.framework = atmosphereFramework69;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList72 = atmosphereConfig71.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig71.properties();
        atmosphereConfig71.setThrowExceptionOnCloned(true);
        boolean boolean76 = atmosphereConfig71.isSupportSession();
        atmosphereConfig71.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig71.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = atmosphereConfig71.shutdownHooks;
        atmosphereConfig1.shutdownHooks = shutdownHookList80;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(shutdownHookList46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(logger49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(shutdownHookList80);
    }

    @Test
    public void test05154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05154");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean10 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = null;
        atmosphereConfig0.shutdownHooks = shutdownHookList11;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05155");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        atmosphereConfig0.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig20.framework();
        atmosphereConfig20.destroy();
        java.lang.String str25 = atmosphereConfig20.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
    }

    @Test
    public void test05156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05156");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        boolean boolean19 = atmosphereConfig14.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig14.shutdownHook(shutdownHook20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig14.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig14.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(startupHookList23);
    }

    @Test
    public void test05157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05157");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.properties;
        boolean boolean15 = atmosphereConfig0.getInitParameter("hi!", true);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test05158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05158");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str10 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.shutdownHook(shutdownHook12);
        atmosphereConfig13.supportSession = false;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
    }

    @Test
    public void test05159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05159");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig1.getshutdownHooks();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig1.properties();
        boolean boolean7 = atmosphereConfig1.isSupportSession();
        boolean boolean8 = atmosphereConfig1.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig9.getstartUpHook();
        atmosphereConfig9.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig18.setThrowExceptionOnCloned(true);
        java.lang.String str24 = atmosphereConfig18.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig18.getshutdownHooks();
        java.lang.String str27 = atmosphereConfig18.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig18.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig30.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig9.populate(atmosphereConfig30);
        boolean boolean33 = atmosphereConfig32.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig32.shutdownHooks;
        atmosphereConfig1.setshutdownHooks(shutdownHookList34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig1.framework();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNull(atmosphereFramework36);
    }

    @Test
    public void test05160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05160");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig9.properties = strMap12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig9.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig15.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.populate(atmosphereConfig15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig20.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig24.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        boolean boolean29 = atmosphereConfig28.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig28.shutdownHooks;
        atmosphereConfig26.setshutdownHooks(shutdownHookList30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig26.getproperties();
        atmosphereConfig15.properties = strMap32;
        atmosphereConfig15.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test05161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05161");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = atmosphereConfig0.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties();
        org.slf4j.Logger logger6 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig7.framework();
        int int12 = atmosphereConfig7.getInitParameter("hi!", 0);
        boolean boolean13 = atmosphereConfig7.supportSession;
        boolean boolean14 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.shutdownHook(shutdownHook17);
        java.lang.String str21 = atmosphereConfig15.getInitParameter("hi!", "");
        boolean boolean22 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig15.shutdownHook(shutdownHook23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig24.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig29.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig29.shutdownHook(shutdownHook31);
        java.lang.String str35 = atmosphereConfig29.getInitParameter("hi!", "");
        boolean boolean36 = atmosphereConfig29.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig29.startUpHook;
        atmosphereConfig24.startUpHook = startupHookList37;
        atmosphereConfig7.startUpHook = startupHookList37;
        atmosphereConfig0.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig41.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig41.shutdownHook(shutdownHook43);
        org.slf4j.Logger logger45 = atmosphereConfig41.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig41.shutdownHook(shutdownHook46);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig50.properties();
        atmosphereConfig49.properties = strMap52;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig49.startupHook(startupHook54);
        boolean boolean56 = atmosphereConfig55.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig55.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig47.populate(atmosphereConfig55);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig55.properties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig55.properties;
        atmosphereConfig0.properties = strMap61;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(shutdownHookList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(logger45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test05162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05162");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig0.setframework(atmosphereFramework15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = null;
        atmosphereConfig0.setstartUpHook(startupHookList17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = null;
        atmosphereConfig0.setshutdownHooks(shutdownHookList23);
        atmosphereConfig0.supportSession = true;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05163");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig1.getproperties();
        atmosphereConfig1.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.shutdownHook(shutdownHook15);
        atmosphereConfig13.initComplete();
        atmosphereConfig13.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig1.populate(atmosphereConfig13);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig1.properties();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig23 = atmosphereConfig1.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test05164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05164");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        atmosphereConfig0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory12 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
    }

    @Test
    public void test05165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05165");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        int int4 = atmosphereConfig1.getInitParameter("hi!", (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory5 = atmosphereConfig1.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
    }

    @Test
    public void test05166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05166");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        boolean boolean23 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig16.throwExceptionOnCloned;
        java.lang.String str26 = atmosphereConfig16.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig16.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig16.properties();
        atmosphereConfig13.properties = strMap29;
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        boolean boolean35 = atmosphereConfig13.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig13.startupHook(startupHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig38.framework();
        int int43 = atmosphereConfig38.getInitParameter("hi!", 0);
        boolean boolean44 = atmosphereConfig38.isSupportSession();
        boolean boolean45 = atmosphereConfig38.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig47.properties = strMap50;
        org.slf4j.Logger logger52 = atmosphereConfig47.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig47.framework = atmosphereFramework53;
        boolean boolean55 = atmosphereConfig47.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig47.properties();
        atmosphereConfig38.properties = strMap56;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework58);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig60.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig60.properties();
        atmosphereConfig59.properties = strMap62;
        atmosphereConfig59.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig59.framework = atmosphereFramework66;
        boolean boolean68 = atmosphereConfig59.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList70 = atmosphereConfig69.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig69.properties();
        atmosphereConfig69.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework74);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig76.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig76.properties();
        atmosphereConfig75.properties = strMap78;
        atmosphereConfig75.throwExceptionOnCloned = true;
        atmosphereConfig75.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = atmosphereConfig69.populate(atmosphereConfig75);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook85 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = atmosphereConfig84.shutdownHook(shutdownHook85);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList87 = atmosphereConfig84.shutdownHooks;
        atmosphereConfig59.shutdownHooks = shutdownHookList87;
        atmosphereConfig38.shutdownHooks = shutdownHookList87;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList90 = atmosphereConfig38.getAtmosphereHandlerConfig();
        atmosphereConfig13.atmosphereHandlerConfig = atmosphereHandlerConfigList90;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(logger52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(startupHookList70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(atmosphereConfig84);
        org.junit.Assert.assertNotNull(atmosphereConfig86);
        org.junit.Assert.assertNotNull(shutdownHookList87);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList90);
    }

    @Test
    public void test05167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05167");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        atmosphereConfig11.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig11.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig11.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig11.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig1.properties();
        boolean boolean24 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.shutdownHooks;
        atmosphereConfig25.setshutdownHooks(shutdownHookList27);
        boolean boolean29 = atmosphereConfig25.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig25.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig25.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig25.shutdownHook(shutdownHook32);
        atmosphereConfig25.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig25.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig39.properties();
        atmosphereConfig38.properties = strMap41;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig38.startupHook(startupHook43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig38.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        atmosphereConfig38.setframework(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig38.startupHook(startupHook48);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig38.atmosphereHandlerConfig;
        atmosphereConfig25.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        atmosphereConfig1.throwExceptionOnCloned = false;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig57.properties();
        atmosphereConfig57.setSupportSession(false);
        atmosphereConfig57.setSupportSession(false);
        atmosphereConfig57.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig57.startupHook(startupHook65);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig66.getshutdownHooks();
        atmosphereConfig1.shutdownHooks = shutdownHookList67;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
    }

    @Test
    public void test05168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05168");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig9.properties = strMap12;
        atmosphereConfig9.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig9.shutdownHook(shutdownHook16);
        atmosphereConfig17.initComplete();
        boolean boolean19 = atmosphereConfig17.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig17.shutdownHook(shutdownHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        boolean boolean28 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig23.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig23.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig33.framework();
        atmosphereConfig33.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig33.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig38.framework();
        int int43 = atmosphereConfig38.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig38.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        boolean boolean48 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig33.populate(atmosphereConfig38);
        boolean boolean50 = atmosphereConfig33.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig53.properties();
        atmosphereConfig52.properties = strMap55;
        atmosphereConfig52.supportSession = false;
        atmosphereConfig52.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig52.setThrowExceptionOnCloned(true);
        boolean boolean63 = atmosphereConfig52.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework64);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig66.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig66.properties();
        atmosphereConfig65.properties = strMap68;
        atmosphereConfig65.throwExceptionOnCloned = true;
        atmosphereConfig65.sessionTimeoutRemovalAllowed = true;
        boolean boolean74 = atmosphereConfig65.isThrowExceptionOnCloned();
        boolean boolean75 = atmosphereConfig65.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig76.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig76.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig76.properties;
        atmosphereConfig76.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig82.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig82.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList85 = atmosphereConfig82.getstartUpHook();
        atmosphereConfig76.startUpHook = startupHookList85;
        atmosphereConfig65.setstartUpHook(startupHookList85);
        atmosphereConfig52.startUpHook = startupHookList85;
        atmosphereConfig33.setstartUpHook(startupHookList85);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = atmosphereConfig32.populate(atmosphereConfig33);
        atmosphereConfig32.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList92 = atmosphereConfig32.getshutdownHooks();
        atmosphereConfig17.setshutdownHooks(shutdownHookList92);
        atmosphereConfig7.setshutdownHooks(shutdownHookList92);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(startupHookList85);
        org.junit.Assert.assertNotNull(atmosphereConfig90);
        org.junit.Assert.assertNotNull(shutdownHookList92);
    }

    @Test
    public void test05169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05169");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        int int13 = atmosphereConfig10.getInitParameter("", 32);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        int int23 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig18.framework = atmosphereFramework24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig18.shutdownHook(shutdownHook27);
        boolean boolean29 = atmosphereConfig28.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties;
        boolean boolean31 = atmosphereConfig28.isSupportSession();
        boolean boolean32 = atmosphereConfig28.throwExceptionOnCloned;
        boolean boolean33 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        boolean boolean40 = atmosphereConfig35.isSessionTimeoutRemovalAllowed();
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig35.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        int int50 = atmosphereConfig45.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig45.framework = atmosphereFramework51;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig45.properties();
        boolean boolean54 = atmosphereConfig45.isSupportSession();
        boolean boolean55 = atmosphereConfig45.sessionTimeoutRemovalAllowed;
        atmosphereConfig45.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig59.properties();
        atmosphereConfig58.properties = strMap61;
        org.slf4j.Logger logger63 = atmosphereConfig58.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig58.framework = atmosphereFramework64;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig58.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework67);
        atmosphereConfig68.setThrowExceptionOnCloned(false);
        atmosphereConfig68.setSupportSession(false);
        boolean boolean73 = atmosphereConfig68.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig68.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig68.shutdownHooks;
        atmosphereConfig58.shutdownHooks = shutdownHookList75;
        atmosphereConfig45.shutdownHooks = shutdownHookList75;
        atmosphereConfig35.shutdownHooks = shutdownHookList75;
        atmosphereConfig28.setshutdownHooks(shutdownHookList75);
        atmosphereConfig10.shutdownHooks = shutdownHookList75;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = null;
        atmosphereConfig10.setframework(atmosphereFramework81);
        boolean boolean83 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(logger63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(startupHookList74);
        org.junit.Assert.assertNotNull(shutdownHookList75);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test05170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05170");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        java.lang.String str13 = atmosphereConfig1.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test05171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05171");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig5.framework();
        int int10 = atmosphereConfig5.getInitParameter("hi!", 0);
        boolean boolean11 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig5.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig0.shutdownHooks;
        java.lang.String str18 = atmosphereConfig0.getInitParameter("hi!", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(startupHookList19);
    }

    @Test
    public void test05172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05172");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str11 = atmosphereConfig8.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig8.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig13.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig18.framework();
        int int23 = atmosphereConfig18.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25, shutdownHookArray24);
        atmosphereConfig18.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig18.setframework(atmosphereFramework28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        atmosphereConfig31.setThrowExceptionOnCloned(false);
        int int36 = atmosphereConfig31.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        atmosphereConfig31.framework = atmosphereFramework37;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig31.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig31.shutdownHook(shutdownHook40);
        boolean boolean42 = atmosphereConfig41.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig41.getshutdownHooks();
        atmosphereConfig18.shutdownHooks = shutdownHookList44;
        atmosphereConfig13.shutdownHooks = shutdownHookList44;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList47 = atmosphereConfig13.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList47;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList47);
        org.junit.Assert.assertNull(atmosphereFramework49);
    }

    @Test
    public void test05173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05173");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig6.shutdownHook(shutdownHook7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig6.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig6.getshutdownHooks();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
    }

    @Test
    public void test05174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05174");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.getframework();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(atmosphereFramework10);
    }

    @Test
    public void test05175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05175");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig9.properties = strMap12;
        boolean boolean14 = atmosphereConfig9.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig9.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig9.startupHook(startupHook17);
        int int21 = atmosphereConfig18.getInitParameter("", 32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList23 = atmosphereConfig22.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig22.shutdownHook(shutdownHook24);
        java.lang.String str28 = atmosphereConfig22.getInitParameter("hi!", "");
        boolean boolean29 = atmosphereConfig22.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig22.shutdownHook(shutdownHook30);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig22.startUpHook;
        boolean boolean33 = atmosphereConfig22.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        atmosphereConfig34.setshutdownHooks(shutdownHookList36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        atmosphereConfig34.setstartUpHook(startupHookList39);
        atmosphereConfig22.startUpHook = startupHookList39;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        atmosphereConfig43.setThrowExceptionOnCloned(false);
        int int48 = atmosphereConfig43.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig43.framework = atmosphereFramework49;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig43.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig43.startUpHook;
        atmosphereConfig22.startUpHook = startupHookList52;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig22.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig22.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig22.shutdownHooks;
        atmosphereConfig18.shutdownHooks = shutdownHookList56;
        atmosphereConfig0.shutdownHooks = shutdownHookList56;
        boolean boolean59 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = atmosphereConfig60.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig60.shutdownHook(shutdownHook62);
        java.lang.String str66 = atmosphereConfig60.getInitParameter("hi!", "");
        boolean boolean67 = atmosphereConfig60.isThrowExceptionOnCloned();
        atmosphereConfig60.initComplete();
        boolean boolean69 = atmosphereConfig60.sessionTimeoutRemovalAllowed;
        java.lang.String str72 = atmosphereConfig60.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework73 = null;
        atmosphereConfig60.setframework(atmosphereFramework73);
        boolean boolean77 = atmosphereConfig60.getInitParameter("", false);
        boolean boolean80 = atmosphereConfig60.getInitParameter("hi!", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList81 = atmosphereConfig60.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList81;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(shutdownHookList23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(shutdownHookList61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(shutdownHookList81);
    }

    @Test
    public void test05176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05176");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig1.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig1.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.supportSession = false;
        atmosphereConfig18.setThrowExceptionOnCloned(true);
        atmosphereConfig18.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig18.startupHook(startupHook24);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig25.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.properties();
        atmosphereConfig29.properties = strMap32;
        boolean boolean34 = atmosphereConfig29.isSessionTimeoutRemovalAllowed();
        atmosphereConfig29.sessionTimeoutRemovalAllowed = false;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig29.getstartUpHook();
        atmosphereConfig27.startUpHook = startupHookList37;
        atmosphereConfig1.startUpHook = startupHookList37;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig40 = atmosphereConfig1.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
    }

    @Test
    public void test05177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05177");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str12 = atmosphereConfig9.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig9.framework;
        atmosphereConfig9.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig9.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig17.framework();
        int int22 = atmosphereConfig17.getInitParameter("hi!", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig17.properties;
        atmosphereConfig16.setproperties(strMap23);
        boolean boolean25 = atmosphereConfig16.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        atmosphereConfig26.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig26.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig31.framework();
        int int36 = atmosphereConfig31.getInitParameter("hi!", 0);
        boolean boolean37 = atmosphereConfig31.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig31.framework = atmosphereFramework38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig26.populate(atmosphereConfig31);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig26.properties;
        boolean boolean42 = atmosphereConfig26.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig26.shutdownHooks;
        atmosphereConfig16.setshutdownHooks(shutdownHookList43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig47.properties();
        atmosphereConfig46.properties = strMap49;
        atmosphereConfig46.throwExceptionOnCloned = true;
        atmosphereConfig46.sessionTimeoutRemovalAllowed = true;
        boolean boolean55 = atmosphereConfig46.isThrowExceptionOnCloned();
        boolean boolean56 = atmosphereConfig46.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = atmosphereConfig46.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig46.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig46.shutdownHooks;
        atmosphereConfig16.setshutdownHooks(shutdownHookList59);
        atmosphereConfig1.shutdownHooks = shutdownHookList59;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = atmosphereConfig1.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(atmosphereFramework57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(shutdownHookList59);
    }

    @Test
    public void test05178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05178");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.shutdownHooks;
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext14 = atmosphereConfig9.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test05179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05179");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.supportSession;
        boolean boolean7 = atmosphereConfig0.supportSession;
        atmosphereConfig0.supportSession = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        int int16 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig11.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig11.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig0.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig24.setThrowExceptionOnCloned(true);
        java.lang.String str30 = atmosphereConfig24.getInitParameter("");
        int int33 = atmosphereConfig24.getInitParameter("", (int) ' ');
        atmosphereConfig24.throwExceptionOnCloned = false;
        boolean boolean36 = atmosphereConfig24.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.populate(atmosphereConfig24);
        int int40 = atmosphereConfig0.getInitParameter("", (int) (byte) 1);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 32 + "'", int33 == 32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test05180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05180");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig11.framework;
        java.lang.String str16 = atmosphereConfig11.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig18.properties;
        atmosphereConfig11.setproperties(strMap21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig24.properties = strMap27;
        atmosphereConfig24.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig24.getshutdownHooks();
        atmosphereConfig11.setshutdownHooks(shutdownHookList31);
        atmosphereConfig1.setshutdownHooks(shutdownHookList31);
        atmosphereConfig1.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig1.framework = atmosphereFramework35;
        java.lang.Class<?> wildcardClass37 = atmosphereConfig1.getClass();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test05181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05181");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.setframework(atmosphereFramework8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig1.framework();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test05182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05182");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig1.isThrowExceptionOnCloned();
        boolean boolean11 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties;
        atmosphereConfig12.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig18.getstartUpHook();
        atmosphereConfig12.startUpHook = startupHookList21;
        atmosphereConfig1.setstartUpHook(startupHookList21);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig1.getAtmosphereHandlerConfig();
        boolean boolean27 = atmosphereConfig1.getInitParameter("hi!", false);
        org.slf4j.Logger logger28 = atmosphereConfig1.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig1.framework = atmosphereFramework29;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(logger28);
    }

    @Test
    public void test05183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05183");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = null;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        atmosphereConfig10.supportSession = false;
        java.lang.String str22 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig8.populate(atmosphereConfig10);
        boolean boolean24 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        boolean boolean25 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        atmosphereConfig23.initComplete();
        boolean boolean27 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test05184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05184");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        atmosphereConfig0.supportSession = true;
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
    }

    @Test
    public void test05185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05185");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig1.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = atmosphereConfig1.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
    }

    @Test
    public void test05186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05186");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.supportSession = false;
        boolean boolean14 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05187");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList3 = atmosphereConfig1.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig1.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig1.setframework(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.getshutdownHooks();
        java.lang.String str18 = atmosphereConfig9.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig21.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig21.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig21.getproperties();
        atmosphereConfig9.setproperties(strMap30);
        atmosphereConfig1.properties = strMap30;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig1.shutdownHook(shutdownHook33);
        java.lang.String str36 = atmosphereConfig34.getInitParameter("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList3);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test05188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05188");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.slf4j.Logger logger6 = atmosphereConfig1.getlogger();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig1.startUpHook;
        boolean boolean10 = atmosphereConfig1.throwExceptionOnCloned;
        atmosphereConfig1.initComplete();
        boolean boolean14 = atmosphereConfig1.getInitParameter("hi!", false);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05189");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        boolean boolean17 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig18.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig18.shutdownHook(shutdownHook21);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
    }

    @Test
    public void test05190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05190");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        boolean boolean10 = atmosphereConfig0.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.startUpHook;
        boolean boolean12 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05191");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig9.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig9.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig1.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig9.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig26.properties();
        atmosphereConfig25.properties = strMap28;
        atmosphereConfig25.throwExceptionOnCloned = true;
        boolean boolean32 = atmosphereConfig25.sessionTimeoutRemovalAllowed;
        boolean boolean33 = atmosphereConfig25.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig25.properties;
        atmosphereConfig23.setproperties(strMap34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig36.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig36.shutdownHook(shutdownHook38);
        org.slf4j.Logger logger40 = atmosphereConfig36.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig36.setframework(atmosphereFramework41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig36.startUpHook = startupHookList44;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig36.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig36.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig36.getstartUpHook();
        atmosphereConfig23.startUpHook = startupHookList49;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig23.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig23.getstartUpHook();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(logger40);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(startupHookList52);
    }

    @Test
    public void test05192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05192");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean8 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig1.shutdownHooks;
        boolean boolean15 = atmosphereConfig1.supportSession;
        boolean boolean16 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        boolean boolean17 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider18 = atmosphereConfig1.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05193");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        atmosphereConfig13.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.properties();
        atmosphereConfig0.setproperties(strMap17);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig21.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig21.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig0.framework;
        atmosphereConfig0.supportSession = true;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNull(atmosphereFramework27);
    }

    @Test
    public void test05194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05194");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        boolean boolean9 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.lang.String str14 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test05195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05195");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig21.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig21.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        atmosphereConfig30.properties = strMap33;
        atmosphereConfig30.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig30.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig38.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig38.setThrowExceptionOnCloned(true);
        java.lang.String str44 = atmosphereConfig38.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig38.getshutdownHooks();
        atmosphereConfig30.shutdownHooks = shutdownHookList45;
        atmosphereConfig21.shutdownHooks = shutdownHookList45;
        atmosphereConfig13.setshutdownHooks(shutdownHookList45);
        atmosphereConfig10.setshutdownHooks(shutdownHookList45);
        atmosphereConfig1.setshutdownHooks(shutdownHookList45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig51.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig51.shutdownHook(shutdownHook53);
        atmosphereConfig51.initComplete();
        atmosphereConfig51.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig51.properties;
        atmosphereConfig1.properties = strMap58;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig61.shutdownHooks;
        atmosphereConfig60.setshutdownHooks(shutdownHookList62);
        boolean boolean64 = atmosphereConfig60.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig60.framework();
        org.slf4j.Logger logger66 = atmosphereConfig60.getlogger();
        atmosphereConfig60.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework68);
        atmosphereConfig69.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig69.startupHook(startupHook72);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig73.shutdownHook(shutdownHook74);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = atmosphereConfig75.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig75.getshutdownHooks();
        atmosphereConfig60.setshutdownHooks(shutdownHookList77);
        atmosphereConfig1.setshutdownHooks(shutdownHookList77);
        atmosphereConfig1.supportSession = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider82 = atmosphereConfig1.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(shutdownHookList62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertNotNull(logger66);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNull(atmosphereFramework76);
        org.junit.Assert.assertNotNull(shutdownHookList77);
    }

    @Test
    public void test05196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05196");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean14 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.supportSession = true;
        java.lang.String str19 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean20 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap22 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(atmosphereFramework21);
    }

    @Test
    public void test05197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05197");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig7.shutdownHook(shutdownHook9);
        java.lang.String str13 = atmosphereConfig7.getInitParameter("hi!", "");
        boolean boolean14 = atmosphereConfig7.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig7.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig16.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig0.populate(atmosphereConfig16);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(startupHookList21);
    }

    @Test
    public void test05198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05198");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig11.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.startupHook(startupHook20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig0.getstartUpHook();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory23 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(startupHookList22);
    }

    @Test
    public void test05199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05199");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig1.framework = atmosphereFramework6;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap9 = atmosphereConfig1.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
    }

    @Test
    public void test05200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05200");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.getshutdownHooks();
        java.lang.String str18 = atmosphereConfig9.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.populate(atmosphereConfig21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig0.framework;
        boolean boolean25 = atmosphereConfig0.isSupportSession();
        java.lang.Class<?> wildcardClass26 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test05201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05201");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig7.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig7.startupHook(startupHook10);
        atmosphereConfig11.initComplete();
        int int15 = atmosphereConfig11.getInitParameter("", (int) (short) 100);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test05202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05202");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        boolean boolean17 = atmosphereConfig16.isSupportSession();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig19.shutdownHook(shutdownHook21);
        org.slf4j.Logger logger23 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig19.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig16.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig1.populate(atmosphereConfig16);
        boolean boolean34 = atmosphereConfig31.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig31.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig31.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig31.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig31.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig31.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig41.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig31.populate(atmosphereConfig41);
        boolean boolean47 = atmosphereConfig41.supportSession;
        atmosphereConfig41.setSupportSession(true);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test05203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05203");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        boolean boolean10 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig12.throwExceptionOnCloned = true;
        boolean boolean19 = atmosphereConfig12.sessionTimeoutRemovalAllowed;
        boolean boolean20 = atmosphereConfig12.throwExceptionOnCloned;
        java.lang.String str22 = atmosphereConfig12.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig12.startupHook(startupHook23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig24.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.throwExceptionOnCloned = true;
        boolean boolean34 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        boolean boolean35 = atmosphereConfig27.throwExceptionOnCloned;
        java.lang.String str37 = atmosphereConfig27.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig27.startupHook(startupHook38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig27.properties();
        atmosphereConfig24.properties = strMap40;
        atmosphereConfig0.setproperties(strMap40);
        atmosphereConfig0.initComplete();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory44 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test05204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05204");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig1.startupHook(startupHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig12.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig12.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig18.setshutdownHooks(shutdownHookList20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig12.setshutdownHooks(shutdownHookList25);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig12.shutdownHook(shutdownHook27);
        java.lang.String str31 = atmosphereConfig28.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig1.startUpHook = startupHookList32;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = atmosphereConfig1.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(startupHookList32);
    }

    @Test
    public void test05205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05205");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig22.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        java.lang.String str31 = atmosphereConfig25.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig25.getshutdownHooks();
        java.lang.String str34 = atmosphereConfig25.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig22.setshutdownHooks(shutdownHookList35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig39.properties();
        atmosphereConfig38.properties = strMap41;
        atmosphereConfig38.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig38.framework = atmosphereFramework45;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig47.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig47.properties();
        atmosphereConfig47.setThrowExceptionOnCloned(true);
        java.lang.String str53 = atmosphereConfig47.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig56.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig56.properties();
        atmosphereConfig55.properties = strMap58;
        atmosphereConfig55.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig62.startUpHook;
        atmosphereConfig55.setstartUpHook(startupHookList63);
        atmosphereConfig47.startUpHook = startupHookList63;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig38.populate(atmosphereConfig47);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig47.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig47.getshutdownHooks();
        atmosphereConfig47.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = null;
        atmosphereConfig47.framework = atmosphereFramework71;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig73.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig73.properties();
        atmosphereConfig73.setSessionTimeoutRemovalAllowed(true);
        boolean boolean78 = atmosphereConfig73.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework79 = atmosphereConfig73.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList80 = atmosphereConfig73.startUpHook;
        atmosphereConfig47.setstartUpHook(startupHookList80);
        atmosphereConfig22.setstartUpHook(startupHookList80);
        atmosphereConfig22.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertNotNull(shutdownHookList68);
        org.junit.Assert.assertNotNull(startupHookList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(atmosphereFramework79);
        org.junit.Assert.assertNotNull(startupHookList80);
    }

    @Test
    public void test05206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05206");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig1.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig1.startupHook(startupHook18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap20 = atmosphereConfig19.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
    }

    @Test
    public void test05207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05207");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig1.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.lang.Class<?> wildcardClass13 = atmosphereHandlerConfigList12.getClass();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05208");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig17.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        java.lang.String str31 = atmosphereConfig25.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig17.shutdownHooks = shutdownHookList32;
        atmosphereConfig6.shutdownHooks = shutdownHookList32;
        boolean boolean35 = atmosphereConfig6.isSupportSession();
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework38);
        atmosphereConfig39.supportSession = false;
        atmosphereConfig39.setThrowExceptionOnCloned(true);
        atmosphereConfig39.destroy();
        atmosphereConfig39.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig47.properties = strMap50;
        atmosphereConfig47.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig47.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig55.properties();
        atmosphereConfig55.setThrowExceptionOnCloned(true);
        java.lang.String str61 = atmosphereConfig55.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList62 = atmosphereConfig55.getshutdownHooks();
        atmosphereConfig47.shutdownHooks = shutdownHookList62;
        atmosphereConfig39.shutdownHooks = shutdownHookList62;
        atmosphereConfig6.shutdownHooks = shutdownHookList62;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig66 = atmosphereConfig6.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(shutdownHookList62);
    }

    @Test
    public void test05209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05209");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig6.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList9;
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig0.getshutdownHooks();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        boolean boolean15 = atmosphereConfig0.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig17.setThrowExceptionOnCloned(true);
        java.lang.String str23 = atmosphereConfig17.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig17.getshutdownHooks();
        java.lang.String str26 = atmosphereConfig17.getInitParameter("hi!");
        boolean boolean27 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        boolean boolean28 = atmosphereConfig17.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig17.getstartUpHook();
        java.lang.String str31 = atmosphereConfig17.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig0.shutdownHooks = shutdownHookList32;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
    }

    @Test
    public void test05210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05210");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.getframework();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig1.framework = atmosphereFramework14;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig1.framework;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory19 = atmosphereConfig1.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNull(atmosphereFramework18);
    }

    @Test
    public void test05211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05211");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.setframework(atmosphereFramework8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig1.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig13.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig13.setframework(atmosphereFramework18);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray20 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList21, startupHookArray20);
        atmosphereConfig13.startUpHook = startupHookList21;
        atmosphereConfig13.destroy();
        boolean boolean25 = atmosphereConfig13.isThrowExceptionOnCloned();
        org.slf4j.Logger logger26 = atmosphereConfig13.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str30 = atmosphereConfig27.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig27.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig27.populate(atmosphereConfig32);
        boolean boolean36 = atmosphereConfig32.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig38.shutdownHooks;
        atmosphereConfig37.setshutdownHooks(shutdownHookList39);
        boolean boolean41 = atmosphereConfig37.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig37.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig37.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig37.shutdownHook(shutdownHook44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig45.getproperties();
        atmosphereConfig32.properties = strMap46;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig13.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig51.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig51.properties();
        atmosphereConfig50.properties = strMap53;
        org.slf4j.Logger logger55 = atmosphereConfig50.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig50.framework = atmosphereFramework56;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList58 = atmosphereConfig50.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework59);
        atmosphereConfig60.setThrowExceptionOnCloned(false);
        atmosphereConfig60.setSupportSession(false);
        boolean boolean65 = atmosphereConfig60.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig60.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig60.shutdownHooks;
        atmosphereConfig50.shutdownHooks = shutdownHookList67;
        atmosphereConfig32.setshutdownHooks(shutdownHookList67);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList70 = atmosphereConfig32.getshutdownHooks();
        atmosphereConfig12.setshutdownHooks(shutdownHookList70);
        boolean boolean72 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        boolean boolean75 = atmosphereConfig12.getInitParameter("", true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig76 = atmosphereConfig12.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNotNull(startupHookArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(logger26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(shutdownHookList39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(logger55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList58);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(startupHookList66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(shutdownHookList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test05212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05212");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = null;
        atmosphereConfig7.shutdownHooks = shutdownHookList8;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig7.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig7.getstartUpHook();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig7.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        atmosphereConfig14.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig14.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig7.populate(atmosphereConfig22);
        boolean boolean26 = atmosphereConfig23.getInitParameter("", true);
        java.lang.Class<?> wildcardClass27 = atmosphereConfig23.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test05213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05213");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig8.setThrowExceptionOnCloned(true);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig17.setThrowExceptionOnCloned(true);
        java.lang.String str23 = atmosphereConfig17.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig17.getshutdownHooks();
        java.lang.String str26 = atmosphereConfig17.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig17.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig17.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig29.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig8.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig29.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig35.shutdownHook(shutdownHook37);
        org.slf4j.Logger logger39 = atmosphereConfig35.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig35.shutdownHook(shutdownHook40);
        atmosphereConfig41.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig44.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig44.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList48;
        atmosphereConfig41.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework52);
        atmosphereConfig53.setThrowExceptionOnCloned(false);
        atmosphereConfig53.setSupportSession(false);
        java.lang.String str59 = atmosphereConfig53.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = atmosphereConfig53.framework();
        java.lang.String str63 = atmosphereConfig53.getInitParameter("hi!", "hi!");
        java.lang.String str65 = atmosphereConfig53.getInitParameter("");
        atmosphereConfig53.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig53.getstartUpHook();
        atmosphereConfig41.startUpHook = startupHookList68;
        atmosphereConfig29.setstartUpHook(startupHookList68);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(logger39);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(atmosphereFramework60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(startupHookList68);
    }

    @Test
    public void test05214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05214");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.properties;
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig1.framework;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test05215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05215");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig0.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig0.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory7 = atmosphereConfig0.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(startupHookList6);
    }

    @Test
    public void test05216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05216");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str17 = atmosphereConfig14.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig14.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig14.populate(atmosphereConfig19);
        boolean boolean23 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig24.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig24.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig24.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig24.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig32.getproperties();
        atmosphereConfig19.properties = strMap33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig0.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig35.framework;
        java.lang.String str39 = atmosphereConfig35.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig35.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig35.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        atmosphereConfig35.setframework(atmosphereFramework42);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertNull(atmosphereFramework41);
    }

    @Test
    public void test05217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05217");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        boolean boolean9 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.lang.String str12 = atmosphereConfig1.getInitParameter("", "hi!");
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.initComplete();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test05218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05218");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        int int8 = atmosphereConfig0.getInitParameter("hi!", (int) 'a');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig27.shutdownHooks = shutdownHookList42;
        atmosphereConfig18.shutdownHooks = shutdownHookList42;
        atmosphereConfig10.setshutdownHooks(shutdownHookList42);
        atmosphereConfig0.setshutdownHooks(shutdownHookList42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.shutdownHook(shutdownHook47);
        org.slf4j.Logger logger49 = atmosphereConfig48.getlogger();
        atmosphereConfig48.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig48.shutdownHook(shutdownHook52);
        java.lang.Class<?> wildcardClass54 = atmosphereConfig48.getClass();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 97 + "'", int8 == 97);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(logger49);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test05219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05219");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        boolean boolean10 = atmosphereConfig0.getInitParameter("", false);
        java.lang.String str12 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test05220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05220");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.shutdownHooks;
        atmosphereConfig16.setshutdownHooks(shutdownHookList18);
        atmosphereConfig13.setshutdownHooks(shutdownHookList18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig13.properties = strMap23;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig13.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        atmosphereConfig13.properties = strMap26;
        atmosphereConfig13.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig1.populate(atmosphereConfig13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig32.shutdownHooks;
        atmosphereConfig31.setshutdownHooks(shutdownHookList33);
        boolean boolean35 = atmosphereConfig31.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig31.properties;
        atmosphereConfig1.properties = strMap36;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test05221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05221");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(shutdownHookList9);
    }

    @Test
    public void test05222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05222");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.shutdownHook(shutdownHook14);
        atmosphereConfig15.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
    }

    @Test
    public void test05223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05223");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        int int14 = atmosphereConfig0.getInitParameter("", (int) ' ');
        org.slf4j.Logger logger15 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        atmosphereConfig17.setThrowExceptionOnCloned(false);
        int int22 = atmosphereConfig17.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig17.framework = atmosphereFramework23;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig17.properties();
        boolean boolean26 = atmosphereConfig17.isSupportSession();
        boolean boolean27 = atmosphereConfig17.sessionTimeoutRemovalAllowed;
        atmosphereConfig17.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList32 = atmosphereConfig31.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties();
        atmosphereConfig30.properties = strMap33;
        org.slf4j.Logger logger35 = atmosphereConfig30.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig30.framework = atmosphereFramework36;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig30.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        atmosphereConfig40.setSupportSession(false);
        boolean boolean45 = atmosphereConfig40.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig40.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig30.shutdownHooks = shutdownHookList47;
        atmosphereConfig17.shutdownHooks = shutdownHookList47;
        atmosphereConfig17.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig17.startupHook(startupHook52);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(logger35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
    }

    @Test
    public void test05224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05224");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.slf4j.Logger logger6 = atmosphereConfig1.getlogger();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.setframework(atmosphereFramework9);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        boolean boolean16 = atmosphereConfig13.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig13.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        int int25 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig20.framework = atmosphereFramework26;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig20.properties();
        boolean boolean29 = atmosphereConfig20.isSupportSession();
        boolean boolean30 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        atmosphereConfig20.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig20.atmosphereHandlerConfig;
        atmosphereConfig20.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig13.populate(atmosphereConfig20);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig36.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig36.setThrowExceptionOnCloned(true);
        java.lang.String str42 = atmosphereConfig36.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig45.properties();
        atmosphereConfig44.properties = strMap47;
        atmosphereConfig44.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig51.startUpHook;
        atmosphereConfig44.setstartUpHook(startupHookList52);
        atmosphereConfig36.startUpHook = startupHookList52;
        atmosphereConfig20.startUpHook = startupHookList52;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig58.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig58.properties();
        atmosphereConfig57.properties = strMap60;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig57.startupHook(startupHook62);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig57.getproperties();
        atmosphereConfig57.setSupportSession(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig57.properties;
        atmosphereConfig20.setproperties(strMap67);
        atmosphereConfig1.properties = strMap67;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = atmosphereConfig1.getframework();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration71 = atmosphereConfig1.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(atmosphereFramework70);
    }

    @Test
    public void test05225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05225");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        int int15 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig10.framework = atmosphereFramework16;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig10.properties();
        boolean boolean19 = atmosphereConfig10.isSupportSession();
        boolean boolean20 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        boolean boolean21 = atmosphereConfig10.isSupportSession();
        java.lang.String str24 = atmosphereConfig10.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig26.startupHook(startupHook31);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig26.atmosphereHandlerConfig;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList33;
        boolean boolean37 = atmosphereConfig10.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig1.populate(atmosphereConfig10);
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig1.initComplete();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
    }

    @Test
    public void test05226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05226");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        atmosphereConfig18.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        int int29 = atmosphereConfig24.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig24.framework = atmosphereFramework30;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig24.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig24.getframework();
        boolean boolean34 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig24.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig24.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig18.populate(atmosphereConfig24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.populate(atmosphereConfig37);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig0.startupHook(startupHook39);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig41 = atmosphereConfig40.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
    }

    @Test
    public void test05227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05227");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        atmosphereConfig1.destroy();
        atmosphereConfig1.initComplete();
        org.slf4j.Logger logger8 = atmosphereConfig1.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig1.startUpHook;
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        java.lang.String str14 = atmosphereConfig1.getInitParameter("", "hi!");
        boolean boolean15 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster16 = atmosphereConfig1.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05228");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig9.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig9.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig1.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig9.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig26.shutdownHook(shutdownHook28);
        java.lang.String str32 = atmosphereConfig26.getInitParameter("hi!", "");
        boolean boolean33 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig26.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig26.startUpHook;
        boolean boolean37 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig39.shutdownHooks;
        atmosphereConfig38.setshutdownHooks(shutdownHookList40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        atmosphereConfig38.setstartUpHook(startupHookList43);
        atmosphereConfig26.startUpHook = startupHookList43;
        boolean boolean46 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig26.startupHook(startupHook47);
        boolean boolean49 = atmosphereConfig48.sessionTimeoutRemovalAllowed;
        boolean boolean50 = atmosphereConfig48.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig48.properties;
        int int54 = atmosphereConfig48.getInitParameter("", 10);
        atmosphereConfig48.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig48.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig23.populate(atmosphereConfig48);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig62.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig62.properties();
        atmosphereConfig61.properties = strMap64;
        atmosphereConfig61.supportSession = false;
        atmosphereConfig61.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig61.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = null;
        atmosphereConfig61.setframework(atmosphereFramework72);
        boolean boolean74 = atmosphereConfig61.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig61.shutdownHooks;
        atmosphereConfig23.shutdownHooks = shutdownHookList75;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList77 = atmosphereConfig23.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(shutdownHookList75);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList77);
    }

    @Test
    public void test05229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05229");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig10.framework;
        org.slf4j.Logger logger12 = atmosphereConfig10.getlogger();
        boolean boolean13 = atmosphereConfig10.sessionTimeoutRemovalAllowed;
        atmosphereConfig10.throwExceptionOnCloned = false;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05230");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean18 = atmosphereConfig13.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        int int25 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig20.framework = atmosphereFramework26;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig20.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig20.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig30.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig30.shutdownHook(shutdownHook32);
        java.lang.String str36 = atmosphereConfig30.getInitParameter("hi!", "");
        atmosphereConfig30.initComplete();
        java.lang.String str39 = atmosphereConfig30.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig42.properties();
        atmosphereConfig41.properties = strMap44;
        atmosphereConfig41.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig41.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig41.atmosphereHandlerConfig;
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList49;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig51.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig51.shutdownHook(shutdownHook53);
        java.lang.String str57 = atmosphereConfig51.getInitParameter("hi!", "");
        boolean boolean58 = atmosphereConfig51.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig51.shutdownHook(shutdownHook59);
        atmosphereConfig60.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig30.populate(atmosphereConfig60);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig20.populate(atmosphereConfig63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig13.populate(atmosphereConfig64);
        java.lang.String str67 = atmosphereConfig64.getInitParameter("hi!");
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test05231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05231");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap9 = atmosphereConfig1.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test05232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05232");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig22.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig22.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig26.startupHook(startupHook27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig28.framework = atmosphereFramework29;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
    }

    @Test
    public void test05233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05233");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig4.properties();
        atmosphereConfig4.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        atmosphereConfig10.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig4.populate(atmosphereConfig10);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig4.getproperties();
        atmosphereConfig0.setproperties(strMap20);
        org.slf4j.Logger logger22 = atmosphereConfig0.getlogger();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(logger22);
    }

    @Test
    public void test05234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05234");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        int int9 = atmosphereConfig6.getInitParameter("hi!", 10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        boolean boolean16 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig20.startupHook(startupHook25);
        boolean boolean27 = atmosphereConfig26.isSupportSession();
        boolean boolean28 = atmosphereConfig26.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig29.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig29.shutdownHook(shutdownHook31);
        org.slf4j.Logger logger33 = atmosphereConfig29.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig29.setframework(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig29.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig26.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig11.populate(atmosphereConfig26);
        boolean boolean44 = atmosphereConfig41.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig41.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig41.startUpHook;
        atmosphereConfig41.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig51.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig51.properties();
        atmosphereConfig50.properties = strMap53;
        atmosphereConfig50.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig50.getshutdownHooks();
        boolean boolean58 = atmosphereConfig50.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig41.populate(atmosphereConfig50);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig41.properties;
        atmosphereConfig6.setproperties(strMap60);
        boolean boolean62 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean63 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(logger33);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test05235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05235");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.supportSession;
        boolean boolean7 = atmosphereConfig0.supportSession;
        atmosphereConfig0.supportSession = true;
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean14 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig16.shutdownHooks;
        atmosphereConfig15.setshutdownHooks(shutdownHookList17);
        boolean boolean19 = atmosphereConfig15.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig15.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig15.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.populate(atmosphereConfig15);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster27 = atmosphereConfig0.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
    }

    @Test
    public void test05236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05236");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig9.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig12.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig12.getproperties();
        atmosphereConfig11.properties = strMap16;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework18);
        atmosphereConfig19.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        atmosphereConfig27.setThrowExceptionOnCloned(false);
        int int32 = atmosphereConfig27.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig27.framework = atmosphereFramework33;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig27.properties();
        atmosphereConfig23.setproperties(strMap35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig23.startUpHook;
        atmosphereConfig19.setstartUpHook(startupHookList37);
        atmosphereConfig19.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig19.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig11.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig11.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig11.getproperties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig45.properties();
        atmosphereConfig45.setThrowExceptionOnCloned(true);
        java.lang.String str51 = atmosphereConfig45.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig45.getstartUpHook();
        atmosphereConfig45.initComplete();
        java.lang.String str56 = atmosphereConfig45.getInitParameter("", "");
        boolean boolean57 = atmosphereConfig45.throwExceptionOnCloned;
        boolean boolean58 = atmosphereConfig45.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig11.populate(atmosphereConfig45);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory60 = atmosphereConfig45.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
    }

    @Test
    public void test05237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05237");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean18 = atmosphereConfig1.throwExceptionOnCloned;
        org.slf4j.Logger logger19 = atmosphereConfig1.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig1.destroy();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
    }

    @Test
    public void test05238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05238");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        atmosphereConfig13.setThrowExceptionOnCloned(false);
        int int18 = atmosphereConfig13.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig13.framework = atmosphereFramework19;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig13.properties();
        atmosphereConfig9.setproperties(strMap21);
        boolean boolean23 = atmosphereConfig9.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.populate(atmosphereConfig9);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig9.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = null;
        atmosphereConfig9.setshutdownHooks(shutdownHookList26);
        int int30 = atmosphereConfig9.getInitParameter("", 10);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
    }

    @Test
    public void test05239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05239");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        org.slf4j.Logger logger10 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNull(atmosphereFramework11);
    }

    @Test
    public void test05240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05240");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.setframework(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        java.lang.String str13 = atmosphereConfig1.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig1.getstartUpHook();
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(startupHookList14);
    }

    @Test
    public void test05241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05241");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean8 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig1.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        boolean boolean18 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig13.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        atmosphereConfig13.startUpHook = startupHookList24;
        atmosphereConfig1.setstartUpHook(startupHookList24);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig1.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory28 = atmosphereConfig1.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
    }

    @Test
    public void test05242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05242");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        java.lang.String str14 = atmosphereConfig1.getInitParameter("", "hi!");
        atmosphereConfig1.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig21.supportSession = false;
        boolean boolean28 = atmosphereConfig21.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig21.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig31.properties = strMap34;
        atmosphereConfig31.supportSession = false;
        boolean boolean38 = atmosphereConfig31.throwExceptionOnCloned;
        boolean boolean39 = atmosphereConfig31.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig31.properties;
        atmosphereConfig21.properties = strMap40;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        atmosphereConfig43.setThrowExceptionOnCloned(false);
        int int48 = atmosphereConfig43.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig43.framework = atmosphereFramework49;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig43.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig43.shutdownHook(shutdownHook52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig43.properties;
        atmosphereConfig21.properties = strMap54;
        atmosphereConfig18.setproperties(strMap54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration57 = atmosphereConfig18.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test05243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05243");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig5.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig5.framework();
        org.slf4j.Logger logger11 = atmosphereConfig5.getlogger();
        atmosphereConfig5.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList22);
        atmosphereConfig0.setshutdownHooks(shutdownHookList22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.slf4j.Logger logger26 = atmosphereConfig0.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory27 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(logger26);
    }

    @Test
    public void test05244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05244");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean20 = atmosphereConfig1.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig1.setproperties(strMap23);
        boolean boolean27 = atmosphereConfig1.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig1.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties();
        atmosphereConfig33.properties = strMap36;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig33.startupHook(startupHook38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig33.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig33.setframework(atmosphereFramework41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig33.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig1.populate(atmosphereConfig44);
        org.slf4j.Logger logger46 = atmosphereConfig44.getlogger();
        org.slf4j.Logger logger47 = atmosphereConfig44.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = atmosphereConfig44.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(logger46);
        org.junit.Assert.assertNotNull(logger47);
    }

    @Test
    public void test05245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05245");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig1.getframework();
        java.lang.String str10 = atmosphereConfig1.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test05246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05246");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig10.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig10.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig10.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework21);
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        int int27 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig22.framework = atmosphereFramework28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig22.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig22.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig22.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig34.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig34.shutdownHook(shutdownHook36);
        org.slf4j.Logger logger38 = atmosphereConfig34.getlogger();
        java.lang.String str41 = atmosphereConfig34.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        atmosphereConfig43.properties = strMap46;
        atmosphereConfig43.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        org.slf4j.Logger logger55 = atmosphereConfig1.getlogger();
        boolean boolean56 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        atmosphereConfig58.setThrowExceptionOnCloned(false);
        int int63 = atmosphereConfig58.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig58.framework = atmosphereFramework64;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig58.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig58.shutdownHook(shutdownHook67);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig58.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = atmosphereConfig70.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig70.shutdownHook(shutdownHook72);
        org.slf4j.Logger logger74 = atmosphereConfig70.getlogger();
        java.lang.String str77 = atmosphereConfig70.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework78);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = atmosphereConfig80.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig80.properties();
        atmosphereConfig79.properties = strMap82;
        atmosphereConfig79.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList86 = atmosphereConfig79.getAtmosphereHandlerConfig();
        atmosphereConfig70.atmosphereHandlerConfig = atmosphereHandlerConfigList86;
        atmosphereConfig58.atmosphereHandlerConfig = atmosphereHandlerConfigList86;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList86;
        boolean boolean90 = atmosphereConfig1.throwExceptionOnCloned;
        atmosphereConfig1.setSupportSession(false);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(logger55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(shutdownHookList71);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(logger74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(startupHookList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test05247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05247");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig7.framework();
        atmosphereConfig7.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList11);
        java.lang.String str14 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig0.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory17 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
    }

    @Test
    public void test05248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05248");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig0.shutdownHook(shutdownHook9);
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig14.startupHook(startupHook19);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig14.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        atmosphereConfig23.throwExceptionOnCloned = true;
        atmosphereConfig23.sessionTimeoutRemovalAllowed = true;
        boolean boolean32 = atmosphereConfig23.isThrowExceptionOnCloned();
        boolean boolean33 = atmosphereConfig23.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig34.properties;
        atmosphereConfig34.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig40.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig40.getstartUpHook();
        atmosphereConfig34.startUpHook = startupHookList43;
        atmosphereConfig23.setstartUpHook(startupHookList43);
        atmosphereConfig14.startUpHook = startupHookList43;
        atmosphereConfig0.startUpHook = startupHookList43;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookList43);
    }

    @Test
    public void test05249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05249");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        atmosphereConfig1.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig12.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig12.framework = atmosphereFramework19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig21.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig21.setThrowExceptionOnCloned(true);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.properties();
        atmosphereConfig29.properties = strMap32;
        atmosphereConfig29.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        atmosphereConfig29.setstartUpHook(startupHookList37);
        atmosphereConfig21.startUpHook = startupHookList37;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig12.populate(atmosphereConfig21);
        boolean boolean41 = atmosphereConfig12.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig12.properties;
        boolean boolean43 = atmosphereConfig12.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig1.populate(atmosphereConfig12);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory45 = atmosphereConfig12.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
    }

    @Test
    public void test05250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05250");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        atmosphereConfig17.setstartUpHook(startupHookList25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties();
        atmosphereConfig28.properties = strMap31;
        atmosphereConfig17.setproperties(strMap31);
        boolean boolean36 = atmosphereConfig17.getInitParameter("", false);
        java.lang.String str39 = atmosphereConfig17.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig17.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList40;
        boolean boolean44 = atmosphereConfig0.getInitParameter("", true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory45 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test05251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05251");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig7.setframework(atmosphereFramework10);
        atmosphereConfig7.initComplete();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig7.getproperties();
        boolean boolean14 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig7.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig17.startupHook(startupHook22);
        boolean boolean24 = atmosphereConfig23.isSupportSession();
        boolean boolean25 = atmosphereConfig23.supportSession;
        atmosphereConfig23.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig23.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig23.shutdownHooks;
        atmosphereConfig7.setshutdownHooks(shutdownHookList30);
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig7.getproperties();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test05252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05252");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean18 = atmosphereConfig1.throwExceptionOnCloned;
        org.slf4j.Logger logger19 = atmosphereConfig1.getlogger();
        boolean boolean20 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        atmosphereConfig1.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig25.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig32.shutdownHooks;
        atmosphereConfig31.setshutdownHooks(shutdownHookList33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        atmosphereConfig31.atmosphereHandlerConfig = atmosphereHandlerConfigList36;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig31.getshutdownHooks();
        atmosphereConfig25.setshutdownHooks(shutdownHookList38);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig25.shutdownHook(shutdownHook40);
        java.lang.String str44 = atmosphereConfig41.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig1.populate(atmosphereConfig41);
        java.lang.String str47 = atmosphereConfig1.getInitParameter("");
        java.lang.String str49 = atmosphereConfig1.getInitParameter("");
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig50 = atmosphereConfig1.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test05253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05253");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.initComplete();
        boolean boolean9 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig0.startupHook(startupHook10);
        boolean boolean12 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05254");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.supportSession = false;
        boolean boolean11 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05255");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig0.framework = atmosphereFramework21;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.atmosphereHandlerConfig;
        java.lang.String str26 = atmosphereConfig0.getInitParameter("", "hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig0.getproperties();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test05256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05256");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.supportSession;
        boolean boolean5 = atmosphereConfig1.throwExceptionOnCloned;
        org.slf4j.Logger logger6 = atmosphereConfig1.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.setframework(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(logger6);
    }

    @Test
    public void test05257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05257");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig11.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig11.getlogger();
        java.lang.String str18 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        atmosphereConfig20.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig20.getAtmosphereHandlerConfig();
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList27;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig1.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig1.getstartUpHook();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig34 = atmosphereConfig1.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(startupHookList31);
    }

    @Test
    public void test05258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05258");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig12.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig12.properties;
        atmosphereConfig10.properties = strMap20;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        atmosphereConfig23.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        atmosphereConfig27.setThrowExceptionOnCloned(false);
        int int32 = atmosphereConfig27.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig27.framework = atmosphereFramework33;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig27.properties();
        atmosphereConfig23.setproperties(strMap35);
        boolean boolean37 = atmosphereConfig23.isThrowExceptionOnCloned();
        atmosphereConfig23.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig10.populate(atmosphereConfig23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig41.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig41.shutdownHook(shutdownHook43);
        org.slf4j.Logger logger45 = atmosphereConfig41.getlogger();
        java.lang.String str48 = atmosphereConfig41.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework49);
        atmosphereConfig50.setThrowExceptionOnCloned(false);
        int int55 = atmosphereConfig50.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        atmosphereConfig50.framework = atmosphereFramework56;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig50.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList59 = atmosphereConfig50.startUpHook;
        atmosphereConfig41.setstartUpHook(startupHookList59);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig41.framework;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig41.startupHook(startupHook62);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework64);
        atmosphereConfig65.setThrowExceptionOnCloned(false);
        int int70 = atmosphereConfig65.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = null;
        atmosphereConfig65.framework = atmosphereFramework71;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig65.startupHook(startupHook73);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework75 = atmosphereConfig74.framework;
        org.slf4j.Logger logger76 = atmosphereConfig74.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework77);
        atmosphereConfig78.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook81 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = atmosphereConfig78.startupHook(startupHook81);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook83 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = atmosphereConfig82.shutdownHook(shutdownHook83);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework85 = atmosphereConfig84.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList86 = atmosphereConfig84.getshutdownHooks();
        atmosphereConfig74.shutdownHooks = shutdownHookList86;
        atmosphereConfig63.setshutdownHooks(shutdownHookList86);
        atmosphereConfig10.setshutdownHooks(shutdownHookList86);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory90 = atmosphereConfig10.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(logger45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(atmosphereFramework58);
        org.junit.Assert.assertNotNull(startupHookList59);
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertNull(atmosphereFramework75);
        org.junit.Assert.assertNotNull(logger76);
        org.junit.Assert.assertNotNull(atmosphereConfig82);
        org.junit.Assert.assertNotNull(atmosphereConfig84);
        org.junit.Assert.assertNull(atmosphereFramework85);
        org.junit.Assert.assertNotNull(shutdownHookList86);
    }

    @Test
    public void test05259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05259");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig5.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig5.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig5);
        atmosphereConfig5.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig5.supportSession = true;
        atmosphereConfig5.sessionTimeoutRemovalAllowed = false;
        boolean boolean16 = atmosphereConfig5.sessionTimeoutRemovalAllowed;
        atmosphereConfig5.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test05260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05260");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean8 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        boolean boolean12 = atmosphereConfig10.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig10.framework;
        java.lang.String str15 = atmosphereConfig10.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig10.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig17.properties;
        atmosphereConfig10.setproperties(strMap20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        atmosphereConfig23.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig23.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList30);
        atmosphereConfig1.shutdownHooks = shutdownHookList30;
        boolean boolean33 = atmosphereConfig1.isThrowExceptionOnCloned();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig36.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig36.shutdownHook(shutdownHook38);
        org.slf4j.Logger logger40 = atmosphereConfig36.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig36.setframework(atmosphereFramework41);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray43 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList44, startupHookArray43);
        atmosphereConfig36.startUpHook = startupHookList44;
        atmosphereConfig36.destroy();
        boolean boolean48 = atmosphereConfig36.isThrowExceptionOnCloned();
        org.slf4j.Logger logger49 = atmosphereConfig36.getlogger();
        boolean boolean52 = atmosphereConfig36.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig36.startupHook(startupHook53);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig36.getstartUpHook();
        atmosphereConfig1.startUpHook = startupHookList55;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str60 = atmosphereConfig57.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig57.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig62.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig62.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig62.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig57.populate(atmosphereConfig62);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig62.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig62.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig1.populate(atmosphereConfig62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig69.startupHook(startupHook70);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework72);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList75 = atmosphereConfig74.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig74.properties();
        atmosphereConfig73.properties = strMap76;
        atmosphereConfig73.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = atmosphereConfig80.startUpHook;
        atmosphereConfig73.setstartUpHook(startupHookList81);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework83);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig85 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList86 = atmosphereConfig85.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = atmosphereConfig85.properties();
        atmosphereConfig84.properties = strMap87;
        atmosphereConfig73.setproperties(strMap87);
        boolean boolean92 = atmosphereConfig73.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = atmosphereConfig73.properties;
        atmosphereConfig69.properties = strMap93;
        atmosphereConfig69.initComplete();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(logger40);
        org.junit.Assert.assertNotNull(startupHookArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(logger49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(atmosphereFramework61);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(shutdownHookList68);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(startupHookList75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(startupHookList81);
        org.junit.Assert.assertNotNull(startupHookList86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test05261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05261");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        int int14 = atmosphereConfig0.getInitParameter("", (int) ' ');
        org.slf4j.Logger logger15 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig0.setframework(atmosphereFramework16);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig0.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework21);
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        int int27 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig22.framework = atmosphereFramework28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig22.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        boolean boolean34 = atmosphereConfig32.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig32.framework;
        java.lang.String str37 = atmosphereConfig32.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig32.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig39.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties;
        atmosphereConfig32.setproperties(strMap42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties();
        atmosphereConfig45.properties = strMap48;
        atmosphereConfig45.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig45.getshutdownHooks();
        atmosphereConfig32.setshutdownHooks(shutdownHookList52);
        atmosphereConfig22.setshutdownHooks(shutdownHookList52);
        atmosphereConfig0.shutdownHooks = shutdownHookList52;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = atmosphereConfig0.framework;
        boolean boolean57 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(shutdownHookList52);
        org.junit.Assert.assertNull(atmosphereFramework56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test05262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05262");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig0.getframework();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = atmosphereFramework18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNull(atmosphereFramework18);
    }

    @Test
    public void test05263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05263");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig5.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig5.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig5);
        boolean boolean10 = atmosphereConfig5.sessionTimeoutRemovalAllowed;
        atmosphereConfig5.sessionTimeoutRemovalAllowed = false;
        java.lang.Class<?> wildcardClass13 = atmosphereConfig5.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05264");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig0.setframework(atmosphereFramework9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        atmosphereConfig13.supportSession = false;
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig26.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig26.properties();
        atmosphereConfig25.properties = strMap28;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig25.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties();
        atmosphereConfig33.properties = strMap36;
        atmosphereConfig33.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig33.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig43.properties();
        atmosphereConfig42.properties = strMap45;
        atmosphereConfig42.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig42.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig50.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig50.properties();
        atmosphereConfig50.setThrowExceptionOnCloned(true);
        java.lang.String str56 = atmosphereConfig50.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig50.getshutdownHooks();
        atmosphereConfig42.shutdownHooks = shutdownHookList57;
        atmosphereConfig33.shutdownHooks = shutdownHookList57;
        atmosphereConfig25.setshutdownHooks(shutdownHookList57);
        atmosphereConfig22.setshutdownHooks(shutdownHookList57);
        atmosphereConfig13.setshutdownHooks(shutdownHookList57);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig13.shutdownHook(shutdownHook63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig64.getproperties();
        boolean boolean68 = atmosphereConfig64.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig0.populate(atmosphereConfig64);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = atmosphereConfig69.framework;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNull(atmosphereFramework70);
    }

    @Test
    public void test05265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05265");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.setframework(atmosphereFramework12);
        org.slf4j.Logger logger14 = atmosphereConfig1.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        atmosphereConfig15.setSupportSession(false);
        boolean boolean19 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        atmosphereConfig15.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig15.startupHook(startupHook21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig23.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig23.shutdownHook(shutdownHook25);
        java.lang.String str29 = atmosphereConfig23.getInitParameter("hi!", "");
        boolean boolean30 = atmosphereConfig23.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig23.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig32.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        boolean boolean40 = atmosphereConfig35.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig35.shutdownHook(shutdownHook41);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig32.populate(atmosphereConfig35);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList44 = atmosphereConfig43.getstartUpHook();
        atmosphereConfig22.startUpHook = startupHookList44;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList46 = atmosphereConfig22.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig22.startupHook(startupHook47);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig49.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = atmosphereConfig49.framework();
        atmosphereConfig49.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig49.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = atmosphereConfig54.framework();
        int int59 = atmosphereConfig54.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray60 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList61 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61, shutdownHookArray60);
        atmosphereConfig54.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList61);
        boolean boolean64 = atmosphereConfig54.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig49.populate(atmosphereConfig54);
        atmosphereConfig54.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList68 = atmosphereConfig54.shutdownHooks;
        atmosphereConfig48.shutdownHooks = shutdownHookList68;
        atmosphereConfig1.setshutdownHooks(shutdownHookList68);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(startupHookList44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(startupHookList50);
        org.junit.Assert.assertNull(atmosphereFramework51);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNull(atmosphereFramework56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(shutdownHookList68);
    }

    @Test
    public void test05266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05266");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList2 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(startupHookList2);
    }

    @Test
    public void test05267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05267");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNull(atmosphereFramework6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
    }

    @Test
    public void test05268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05268");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.supportSession;
        int int8 = atmosphereConfig0.getInitParameter("hi!", (-1));
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig10.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig10.setproperties(strMap24);
        boolean boolean29 = atmosphereConfig10.getInitParameter("", false);
        java.lang.String str32 = atmosphereConfig10.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig10.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework43);
        atmosphereConfig44.setThrowExceptionOnCloned(false);
        int int49 = atmosphereConfig44.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig44.framework = atmosphereFramework50;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig44.properties();
        atmosphereConfig40.setproperties(strMap52);
        atmosphereConfig35.properties = strMap52;
        atmosphereConfig10.setproperties(strMap52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList56;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        atmosphereConfig0.setframework(atmosphereFramework58);
        boolean boolean60 = atmosphereConfig0.supportSession;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test05269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05269");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig13.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig18.shutdownHook(shutdownHook20);
        java.lang.String str24 = atmosphereConfig18.getInitParameter("hi!", "");
        boolean boolean25 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig18.shutdownHook(shutdownHook26);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig18.startUpHook;
        boolean boolean29 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig30.setshutdownHooks(shutdownHookList32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        atmosphereConfig30.setstartUpHook(startupHookList35);
        atmosphereConfig18.startUpHook = startupHookList35;
        boolean boolean38 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig18.startupHook(startupHook39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig40.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig42.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig42.shutdownHook(shutdownHook44);
        org.slf4j.Logger logger46 = atmosphereConfig42.getlogger();
        java.lang.String str48 = atmosphereConfig42.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList49 = atmosphereConfig42.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig42.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig52.shutdownHooks;
        atmosphereConfig51.setshutdownHooks(shutdownHookList53);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig55.startUpHook;
        atmosphereConfig51.setstartUpHook(startupHookList56);
        atmosphereConfig42.setstartUpHook(startupHookList56);
        atmosphereConfig40.setstartUpHook(startupHookList56);
        atmosphereConfig13.setstartUpHook(startupHookList56);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(logger46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(shutdownHookList53);
        org.junit.Assert.assertNotNull(startupHookList56);
    }

    @Test
    public void test05270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05270");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        atmosphereConfig13.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.properties();
        atmosphereConfig0.setproperties(strMap17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str22 = atmosphereConfig19.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig19.framework;
        atmosphereConfig19.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig19.shutdownHook(shutdownHook25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig26.properties;
        atmosphereConfig0.properties = strMap27;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory29 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test05271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05271");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig12);
        atmosphereConfig20.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig20.startupHook(startupHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig20.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig20.startUpHook;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(startupHookList25);
    }

    @Test
    public void test05272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05272");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.framework = atmosphereFramework12;
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig1.shutdownHooks;
        boolean boolean17 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05273");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        boolean boolean10 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        boolean boolean11 = atmosphereConfig1.isSupportSession();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster12 = atmosphereConfig1.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05274");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        org.slf4j.Logger logger14 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig10.setframework(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18, startupHookArray17);
        atmosphereConfig10.startUpHook = startupHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig7.populate(atmosphereConfig10);
        boolean boolean24 = atmosphereConfig21.getInitParameter("hi!", false);
        atmosphereConfig21.setSupportSession(false);
        atmosphereConfig21.initComplete();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(startupHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test05275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05275");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean14 = atmosphereConfig0.getInitParameter("", true);
        atmosphereConfig0.supportSession = true;
        java.lang.String str19 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean20 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig0.framework();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(atmosphereFramework21);
    }

    @Test
    public void test05276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05276");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        boolean boolean17 = atmosphereConfig16.isSupportSession();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig19.shutdownHook(shutdownHook21);
        org.slf4j.Logger logger23 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig19.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig16.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig1.populate(atmosphereConfig16);
        boolean boolean34 = atmosphereConfig31.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig31.getAtmosphereHandlerConfig();
        atmosphereConfig31.throwExceptionOnCloned = true;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster38 = atmosphereConfig31.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
    }

    @Test
    public void test05277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05277");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig1.isSupportSession();
        java.lang.String str15 = atmosphereConfig1.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig17.startupHook(startupHook22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig17.atmosphereHandlerConfig;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList24;
        boolean boolean28 = atmosphereConfig1.getInitParameter("hi!", true);
        atmosphereConfig1.destroy();
        atmosphereConfig1.destroy();
        boolean boolean33 = atmosphereConfig1.getInitParameter("hi!", true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test05278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05278");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig14.shutdownHook(shutdownHook16);
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig14.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig14.framework = atmosphereFramework25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        org.slf4j.Logger logger31 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig27.properties = strMap34;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig27.properties();
        atmosphereConfig14.setproperties(strMap36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig14.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        boolean boolean45 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig40.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig14.shutdownHooks = shutdownHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig14);
        boolean boolean51 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str54 = atmosphereConfig0.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test05279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05279");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration9 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework8);
    }

    @Test
    public void test05280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05280");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean5 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig12.shutdownHooks;
        atmosphereConfig11.setshutdownHooks(shutdownHookList13);
        boolean boolean15 = atmosphereConfig11.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig11.framework();
        org.slf4j.Logger logger17 = atmosphereConfig11.getlogger();
        atmosphereConfig11.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig21.throwExceptionOnCloned = true;
        atmosphereConfig21.sessionTimeoutRemovalAllowed = true;
        boolean boolean30 = atmosphereConfig21.isThrowExceptionOnCloned();
        java.lang.String str32 = atmosphereConfig21.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig33.getAtmosphereHandlerConfig();
        boolean boolean35 = atmosphereConfig33.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig33.framework;
        java.lang.String str38 = atmosphereConfig33.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig33.properties;
        atmosphereConfig21.setproperties(strMap39);
        atmosphereConfig11.properties = strMap39;
        atmosphereConfig0.setproperties(strMap39);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(atmosphereFramework36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test05281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05281");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = atmosphereConfig0.getframework();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("");
        int int6 = atmosphereConfig0.getInitParameter("", (-1));
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        boolean boolean15 = atmosphereConfig10.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig10.startupHook(startupHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        atmosphereConfig10.startUpHook = startupHookList21;
        atmosphereConfig8.startUpHook = startupHookList21;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration24 = atmosphereConfig8.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(atmosphereFramework1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(startupHookList21);
    }

    @Test
    public void test05282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05282");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig1.atmosphereHandlerConfig;
        boolean boolean11 = atmosphereConfig1.supportSession;
        boolean boolean12 = atmosphereConfig1.throwExceptionOnCloned;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig1.atmosphereHandlerConfig;
        int int16 = atmosphereConfig1.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.shutdownHook(shutdownHook17);
        boolean boolean19 = atmosphereConfig1.isSupportSession();
        boolean boolean20 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test05283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05283");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = atmosphereConfig0.getframework();
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNull(atmosphereFramework1);
    }

    @Test
    public void test05284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05284");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.framework = atmosphereFramework12;
        atmosphereConfig1.throwExceptionOnCloned = false;
        boolean boolean16 = atmosphereConfig1.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig1.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
    }

    @Test
    public void test05285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05285");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        boolean boolean23 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig16.throwExceptionOnCloned;
        java.lang.String str26 = atmosphereConfig16.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig16.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig16.properties();
        atmosphereConfig13.properties = strMap29;
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        boolean boolean35 = atmosphereConfig13.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        atmosphereConfig37.setSupportSession(false);
        boolean boolean42 = atmosphereConfig37.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig37.getstartUpHook();
        atmosphereConfig13.setstartUpHook(startupHookList43);
        boolean boolean47 = atmosphereConfig13.getInitParameter("hi!", true);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration48 = atmosphereConfig13.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test05286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05286");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        atmosphereConfig5.properties = strMap8;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        org.slf4j.Logger logger14 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig10.setframework(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18, startupHookArray17);
        atmosphereConfig10.startUpHook = startupHookList18;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig10.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig5.shutdownHooks = shutdownHookList22;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig5.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig5.framework;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory26 = atmosphereConfig5.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(startupHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNull(atmosphereFramework25);
    }

    @Test
    public void test05287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05287");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig16.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig16.shutdownHook(shutdownHook18);
        java.lang.String str22 = atmosphereConfig16.getInitParameter("hi!", "");
        boolean boolean23 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig16.shutdownHook(shutdownHook24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig16.startUpHook;
        boolean boolean27 = atmosphereConfig16.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig29.shutdownHooks;
        atmosphereConfig28.setshutdownHooks(shutdownHookList30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        atmosphereConfig28.setstartUpHook(startupHookList33);
        atmosphereConfig16.startUpHook = startupHookList33;
        atmosphereConfig15.startUpHook = startupHookList33;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig15.shutdownHook(shutdownHook37);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig39 = atmosphereConfig15.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
    }

    @Test
    public void test05288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05288");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test05289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05289");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        atmosphereConfig10.sessionTimeoutRemovalAllowed = true;
        boolean boolean19 = atmosphereConfig10.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig10.framework;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig10.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        boolean boolean28 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig23.shutdownHook(shutdownHook29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig30.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig34.properties = strMap37;
        boolean boolean39 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig34.shutdownHook(shutdownHook40);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig41.startupHook(startupHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties();
        atmosphereConfig45.properties = strMap48;
        atmosphereConfig45.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig45.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig45.properties;
        atmosphereConfig43.properties = strMap53;
        atmosphereConfig32.setproperties(strMap53);
        atmosphereConfig10.setproperties(strMap53);
        atmosphereConfig1.properties = strMap53;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig1.shutdownHook(shutdownHook58);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration60 = atmosphereConfig1.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
    }

    @Test
    public void test05290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05290");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        boolean boolean6 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig1.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.framework();
        int int14 = atmosphereConfig9.getInitParameter("hi!", 0);
        boolean boolean15 = atmosphereConfig9.supportSession;
        boolean boolean16 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig17.shutdownHook(shutdownHook19);
        java.lang.String str23 = atmosphereConfig17.getInitParameter("hi!", "");
        boolean boolean24 = atmosphereConfig17.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig17.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig26.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig31.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig31.shutdownHook(shutdownHook33);
        java.lang.String str37 = atmosphereConfig31.getInitParameter("hi!", "");
        boolean boolean38 = atmosphereConfig31.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig31.startUpHook;
        atmosphereConfig26.startUpHook = startupHookList39;
        atmosphereConfig9.startUpHook = startupHookList39;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig9.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties();
        atmosphereConfig45.properties = strMap48;
        atmosphereConfig45.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList52 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig9.shutdownHooks = shutdownHookList52;
        atmosphereConfig1.shutdownHooks = shutdownHookList52;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(shutdownHookList52);
    }

    @Test
    public void test05291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05291");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.slf4j.Logger logger8 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig7.setframework(atmosphereFramework9);
        boolean boolean11 = atmosphereConfig7.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig7.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        atmosphereConfig13.setSupportSession(false);
        boolean boolean17 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        atmosphereConfig13.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig13.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig21.shutdownHook(shutdownHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig30.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties();
        atmosphereConfig33.properties = strMap36;
        boolean boolean38 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig33.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig30.populate(atmosphereConfig33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.getstartUpHook();
        atmosphereConfig20.startUpHook = startupHookList42;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig20.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig47.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig47.framework();
        atmosphereConfig47.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig47.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig52.framework();
        int int57 = atmosphereConfig52.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray58 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59, shutdownHookArray58);
        atmosphereConfig52.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList59);
        boolean boolean62 = atmosphereConfig52.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig47.populate(atmosphereConfig52);
        atmosphereConfig52.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig52.shutdownHooks;
        atmosphereConfig46.shutdownHooks = shutdownHookList66;
        atmosphereConfig7.shutdownHooks = shutdownHookList66;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(shutdownHookList66);
    }

    @Test
    public void test05292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05292");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig10.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        atmosphereConfig16.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig10.populate(atmosphereConfig16);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        atmosphereConfig27.setstartUpHook(startupHookList35);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig39.properties();
        atmosphereConfig38.properties = strMap41;
        atmosphereConfig27.setproperties(strMap41);
        boolean boolean46 = atmosphereConfig27.getInitParameter("", false);
        java.lang.String str49 = atmosphereConfig27.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig27.getAtmosphereHandlerConfig();
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig10.shutdownHook(shutdownHook52);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        atmosphereConfig53.setframework(atmosphereFramework54);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig53.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig59.properties();
        atmosphereConfig58.properties = strMap61;
        org.slf4j.Logger logger63 = atmosphereConfig58.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig58.framework = atmosphereFramework64;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig58.properties;
        atmosphereConfig53.setproperties(strMap66);
        atmosphereConfig0.properties = strMap66;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(logger63);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test05293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05293");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray10 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11, startupHookArray10);
        atmosphereConfig9.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList11);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig9.startupHook(startupHook15);
        boolean boolean19 = atmosphereConfig9.getInitParameter("hi!", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig9.properties;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory21 = atmosphereConfig9.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test05294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05294");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        atmosphereConfig0.supportSession = true;
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        boolean boolean10 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig0.shutdownHooks;
        boolean boolean12 = atmosphereConfig0.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap13 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test05295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05295");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        int int16 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig11.properties();
        boolean boolean20 = atmosphereConfig11.isSupportSession();
        boolean boolean21 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        atmosphereConfig11.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig24.properties = strMap27;
        org.slf4j.Logger logger29 = atmosphereConfig24.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig24.framework = atmosphereFramework30;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList32 = atmosphereConfig24.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework33);
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        atmosphereConfig34.setSupportSession(false);
        boolean boolean39 = atmosphereConfig34.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig34.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig34.shutdownHooks;
        atmosphereConfig24.shutdownHooks = shutdownHookList41;
        atmosphereConfig11.shutdownHooks = shutdownHookList41;
        atmosphereConfig1.shutdownHooks = shutdownHookList41;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig1.getshutdownHooks();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertNotNull(shutdownHookList45);
    }

    @Test
    public void test05296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05296");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.setframework(atmosphereFramework12);
        boolean boolean14 = atmosphereConfig1.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig1.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig18.framework();
        int int23 = atmosphereConfig18.getInitParameter("hi!", 0);
        boolean boolean24 = atmosphereConfig18.supportSession;
        boolean boolean25 = atmosphereConfig18.supportSession;
        atmosphereConfig18.supportSession = true;
        java.lang.String str29 = atmosphereConfig18.getInitParameter("hi!");
        boolean boolean30 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig18.properties;
        atmosphereConfig1.properties = strMap31;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig1.properties;
        atmosphereConfig1.initComplete();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test05297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05297");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig14.shutdownHook(shutdownHook16);
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig14.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig14.framework = atmosphereFramework25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        org.slf4j.Logger logger31 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig27.properties = strMap34;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig27.properties();
        atmosphereConfig14.setproperties(strMap36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig14.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        boolean boolean45 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig40.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig14.shutdownHooks = shutdownHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig14);
        atmosphereConfig0.supportSession = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
    }

    @Test
    public void test05298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05298");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig1.framework();
        boolean boolean12 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        int int19 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig14.framework = atmosphereFramework20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig14.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig14.getframework();
        boolean boolean24 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        java.lang.String str26 = atmosphereConfig14.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig27.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig27.getproperties();
        boolean boolean32 = atmosphereConfig27.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig33.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig33.shutdownHook(shutdownHook35);
        org.slf4j.Logger logger37 = atmosphereConfig33.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        atmosphereConfig33.setframework(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray40 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList41, startupHookArray40);
        atmosphereConfig33.startUpHook = startupHookList41;
        atmosphereConfig33.destroy();
        boolean boolean45 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig33.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig33.shutdownHook(shutdownHook47);
        atmosphereConfig48.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = atmosphereConfig48.framework;
        atmosphereConfig48.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = atmosphereConfig53.framework();
        atmosphereConfig53.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        atmosphereConfig58.setThrowExceptionOnCloned(false);
        int int63 = atmosphereConfig58.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig58.framework = atmosphereFramework64;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig58.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig58.shutdownHooks;
        atmosphereConfig53.shutdownHooks = shutdownHookList67;
        atmosphereConfig48.shutdownHooks = shutdownHookList67;
        atmosphereConfig27.setshutdownHooks(shutdownHookList67);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig14.populate(atmosphereConfig27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig1.populate(atmosphereConfig71);
        boolean boolean73 = atmosphereConfig71.supportSession;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig71.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory75 = atmosphereConfig71.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(logger37);
        org.junit.Assert.assertNotNull(startupHookArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework50);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNull(atmosphereFramework55);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
    }

    @Test
    public void test05299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05299");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig0.properties = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig0.setframework(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.startupHook(startupHook15);
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test05300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05300");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.setframework(atmosphereFramework8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.getproperties();
        java.lang.String str12 = atmosphereConfig1.getInitParameter("hi!");
        atmosphereConfig1.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig1.shutdownHooks;
        java.lang.String str16 = atmosphereConfig1.getInitParameter("");
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05301");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(atmosphereFramework6);
    }

    @Test
    public void test05302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05302");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig8.framework();
        int int13 = atmosphereConfig8.getInitParameter("hi!", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        atmosphereConfig7.setproperties(strMap14);
        boolean boolean16 = atmosphereConfig7.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig17.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig22.framework();
        int int27 = atmosphereConfig22.getInitParameter("hi!", 0);
        boolean boolean28 = atmosphereConfig22.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        atmosphereConfig22.framework = atmosphereFramework29;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig17.populate(atmosphereConfig22);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig17.properties;
        boolean boolean33 = atmosphereConfig17.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig17.shutdownHooks;
        atmosphereConfig7.setshutdownHooks(shutdownHookList34);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig37.properties = strMap40;
        atmosphereConfig37.throwExceptionOnCloned = true;
        atmosphereConfig37.sessionTimeoutRemovalAllowed = true;
        boolean boolean46 = atmosphereConfig37.isThrowExceptionOnCloned();
        boolean boolean47 = atmosphereConfig37.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig37.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig37.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig37.shutdownHooks;
        atmosphereConfig7.setshutdownHooks(shutdownHookList50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = atmosphereConfig7.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
    }

    @Test
    public void test05303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05303");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.shutdownHook(shutdownHook8);
        java.lang.String str12 = atmosphereConfig6.getInitParameter("hi!", "");
        boolean boolean13 = atmosphereConfig6.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig6.shutdownHook(shutdownHook14);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig15.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        boolean boolean23 = atmosphereConfig18.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig18.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig15.populate(atmosphereConfig18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        atmosphereConfig28.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        atmosphereConfig32.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework35);
        atmosphereConfig36.setThrowExceptionOnCloned(false);
        int int41 = atmosphereConfig36.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        atmosphereConfig36.framework = atmosphereFramework42;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig36.properties();
        atmosphereConfig32.setproperties(strMap44);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig32.startUpHook;
        atmosphereConfig28.setstartUpHook(startupHookList46);
        atmosphereConfig15.startUpHook = startupHookList46;
        atmosphereConfig0.setstartUpHook(startupHookList46);
        org.slf4j.Logger logger50 = atmosphereConfig0.getlogger();
        boolean boolean51 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig54.properties();
        atmosphereConfig53.properties = strMap56;
        atmosphereConfig53.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig53.framework = atmosphereFramework60;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig62.getAtmosphereHandlerConfig();
        boolean boolean64 = atmosphereConfig62.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig62.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig66.getAtmosphereHandlerConfig();
        boolean boolean68 = atmosphereConfig66.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework69 = atmosphereConfig66.framework;
        org.slf4j.Logger logger70 = atmosphereConfig66.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = atmosphereConfig66.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig66.getstartUpHook();
        atmosphereConfig62.setstartUpHook(startupHookList72);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig62.getstartUpHook();
        atmosphereConfig53.setstartUpHook(startupHookList74);
        atmosphereConfig0.startUpHook = startupHookList74;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap77 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(logger50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(atmosphereFramework69);
        org.junit.Assert.assertNotNull(logger70);
        org.junit.Assert.assertNull(atmosphereFramework71);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNotNull(startupHookList74);
    }

    @Test
    public void test05304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05304");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean10 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
    }

    @Test
    public void test05305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05305");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        boolean boolean7 = atmosphereConfig5.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig5.framework;
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
    }

    @Test
    public void test05306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05306");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig1.framework = atmosphereFramework6;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig1.framework = atmosphereFramework10;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig1.framework = atmosphereFramework12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig1.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig1.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test05307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05307");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        boolean boolean5 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.getproperties();
        atmosphereConfig0.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.getframework();
        boolean boolean10 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig11.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.throwExceptionOnCloned = true;
        atmosphereConfig17.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig11.populate(atmosphereConfig17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig11.getAtmosphereHandlerConfig();
        atmosphereConfig11.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig11.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig11.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList31);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
    }

    @Test
    public void test05308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05308");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig11.setThrowExceptionOnCloned(true);
        java.lang.String str17 = atmosphereConfig11.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig11.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig23.properties();
        atmosphereConfig22.properties = strMap25;
        atmosphereConfig22.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList29 = atmosphereConfig22.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList31 = atmosphereConfig30.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.properties();
        atmosphereConfig30.setThrowExceptionOnCloned(true);
        java.lang.String str36 = atmosphereConfig30.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig30.getshutdownHooks();
        atmosphereConfig22.shutdownHooks = shutdownHookList37;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig22.startupHook(startupHook39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig22.getproperties();
        atmosphereConfig0.setproperties(strMap41);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext43 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test05309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05309");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig14.shutdownHook(shutdownHook16);
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig14.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig14.framework = atmosphereFramework25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        org.slf4j.Logger logger31 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig27.properties = strMap34;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig27.properties();
        atmosphereConfig14.setproperties(strMap36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig14.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        boolean boolean45 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig40.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig14.shutdownHooks = shutdownHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig14);
        atmosphereConfig50.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        atmosphereConfig53.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig53.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig50.populate(atmosphereConfig53);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig50.getproperties();
        boolean boolean60 = atmosphereConfig50.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework61);
        atmosphereConfig62.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig62.startupHook(startupHook65);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig66.shutdownHook(shutdownHook67);
        boolean boolean69 = atmosphereConfig66.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig50.populate(atmosphereConfig66);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = atmosphereConfig50.properties;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test05310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05310");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig0.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        int int21 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig16.framework = atmosphereFramework22;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig16.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig16.shutdownHook(shutdownHook25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig16.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig28.shutdownHook(shutdownHook30);
        org.slf4j.Logger logger32 = atmosphereConfig28.getlogger();
        java.lang.String str35 = atmosphereConfig28.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig37.properties = strMap40;
        atmosphereConfig37.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig37.getAtmosphereHandlerConfig();
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList44;
        java.lang.String str49 = atmosphereConfig16.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig52.properties();
        atmosphereConfig51.properties = strMap54;
        atmosphereConfig51.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig51.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = atmosphereConfig51.getframework();
        atmosphereConfig51.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = atmosphereConfig51.atmosphereHandlerConfig;
        atmosphereConfig16.atmosphereHandlerConfig = atmosphereHandlerConfigList61;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig63.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig63.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = atmosphereConfig63.framework;
        boolean boolean67 = atmosphereConfig63.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig63.getstartUpHook();
        atmosphereConfig16.setstartUpHook(startupHookList68);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = atmosphereConfig14.populate(atmosphereConfig16);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(atmosphereFramework58);
        org.junit.Assert.assertNull(atmosphereFramework59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList61);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertNull(atmosphereFramework66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertNotNull(atmosphereConfig70);
    }

    @Test
    public void test05311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05311");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str19 = atmosphereConfig0.getInitParameter("", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig0.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.shutdownHook(shutdownHook22);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext24 = atmosphereConfig23.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
    }

    @Test
    public void test05312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05312");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig1.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str10 = atmosphereConfig7.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig7.framework;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig7.properties();
        atmosphereConfig1.properties = strMap12;
        boolean boolean14 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig18.framework = atmosphereFramework25;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties();
        atmosphereConfig28.properties = strMap31;
        atmosphereConfig28.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig28.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig28.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig28.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig28.startUpHook;
        atmosphereConfig18.setstartUpHook(startupHookList38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig18.properties();
        boolean boolean41 = atmosphereConfig18.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList44 = atmosphereConfig43.shutdownHooks;
        atmosphereConfig42.setshutdownHooks(shutdownHookList44);
        boolean boolean46 = atmosphereConfig42.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig42.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig42.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig42.shutdownHook(shutdownHook49);
        atmosphereConfig42.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig42.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig56.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig56.properties();
        atmosphereConfig55.properties = strMap58;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig55.startupHook(startupHook60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig55.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig55.setframework(atmosphereFramework63);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig55.startupHook(startupHook65);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList67 = atmosphereConfig55.atmosphereHandlerConfig;
        atmosphereConfig42.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList67;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework71);
        atmosphereConfig72.setThrowExceptionOnCloned(false);
        atmosphereConfig72.setSupportSession(false);
        boolean boolean77 = atmosphereConfig72.sessionTimeoutRemovalAllowed;
        java.lang.String str80 = atmosphereConfig72.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = atmosphereConfig1.populate(atmosphereConfig72);
        boolean boolean82 = atmosphereConfig81.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(shutdownHookList44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList67);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(atmosphereConfig81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test05313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05313");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.initComplete();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        atmosphereConfig11.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig11.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig21.shutdownHook(shutdownHook29);
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig35.startupHook(startupHook40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig35.properties;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework45);
        atmosphereConfig46.setThrowExceptionOnCloned(false);
        int int51 = atmosphereConfig46.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        atmosphereConfig46.framework = atmosphereFramework52;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig46.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig46.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig56.getAtmosphereHandlerConfig();
        boolean boolean58 = atmosphereConfig56.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = atmosphereConfig56.framework;
        java.lang.String str61 = atmosphereConfig56.getInitParameter("");
        java.lang.String str63 = atmosphereConfig56.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = atmosphereConfig46.populate(atmosphereConfig56);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework65);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig67 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList68 = atmosphereConfig67.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig67.properties();
        atmosphereConfig66.properties = strMap69;
        atmosphereConfig66.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig73.startUpHook;
        atmosphereConfig66.setstartUpHook(startupHookList74);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig77 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework76);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList79 = atmosphereConfig78.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = atmosphereConfig78.properties();
        atmosphereConfig77.properties = strMap80;
        atmosphereConfig66.setproperties(strMap80);
        boolean boolean85 = atmosphereConfig66.getInitParameter("", false);
        java.lang.String str88 = atmosphereConfig66.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList89 = atmosphereConfig66.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = atmosphereConfig66.getproperties();
        atmosphereConfig64.setproperties(strMap90);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig92 = atmosphereConfig35.populate(atmosphereConfig64);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList93 = atmosphereConfig35.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList93);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList95 = atmosphereConfig0.startUpHook;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(atmosphereFramework59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(atmosphereConfig64);
        org.junit.Assert.assertNotNull(startupHookList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(startupHookList74);
        org.junit.Assert.assertNotNull(startupHookList79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(atmosphereConfig92);
        org.junit.Assert.assertNotNull(startupHookList93);
        org.junit.Assert.assertNotNull(startupHookList95);
    }

    @Test
    public void test05314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05314");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = atmosphereConfig0.getframework();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.getframework();
        java.lang.String str5 = atmosphereConfig0.getInitParameter("");
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig0.getframework();
        boolean boolean10 = atmosphereConfig0.getInitParameter("", false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        int int19 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig0.populate(atmosphereConfig14);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig20.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        boolean boolean28 = atmosphereConfig23.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig23.startupHook(startupHook29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig23.startupHook(startupHook31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig33.framework();
        atmosphereConfig33.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig33.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = atmosphereConfig38.framework();
        int int43 = atmosphereConfig38.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray44 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45, shutdownHookArray44);
        atmosphereConfig38.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList45);
        boolean boolean48 = atmosphereConfig38.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig33.populate(atmosphereConfig38);
        boolean boolean50 = atmosphereConfig33.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig53.properties();
        atmosphereConfig52.properties = strMap55;
        atmosphereConfig52.supportSession = false;
        atmosphereConfig52.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig52.setThrowExceptionOnCloned(true);
        boolean boolean63 = atmosphereConfig52.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework64);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig66.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = atmosphereConfig66.properties();
        atmosphereConfig65.properties = strMap68;
        atmosphereConfig65.throwExceptionOnCloned = true;
        atmosphereConfig65.sessionTimeoutRemovalAllowed = true;
        boolean boolean74 = atmosphereConfig65.isThrowExceptionOnCloned();
        boolean boolean75 = atmosphereConfig65.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList77 = atmosphereConfig76.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = atmosphereConfig76.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig76.properties;
        atmosphereConfig76.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList83 = atmosphereConfig82.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig82.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList85 = atmosphereConfig82.getstartUpHook();
        atmosphereConfig76.startUpHook = startupHookList85;
        atmosphereConfig65.setstartUpHook(startupHookList85);
        atmosphereConfig52.startUpHook = startupHookList85;
        atmosphereConfig33.setstartUpHook(startupHookList85);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = atmosphereConfig32.populate(atmosphereConfig33);
        atmosphereConfig32.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList92 = atmosphereConfig32.getshutdownHooks();
        atmosphereConfig20.setshutdownHooks(shutdownHookList92);
        atmosphereConfig20.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework96 = atmosphereConfig20.getframework();
        org.junit.Assert.assertNull(atmosphereFramework1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNull(atmosphereFramework35);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNull(atmosphereFramework40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(startupHookList77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(startupHookList85);
        org.junit.Assert.assertNotNull(atmosphereConfig90);
        org.junit.Assert.assertNotNull(shutdownHookList92);
        org.junit.Assert.assertNull(atmosphereFramework96);
    }

    @Test
    public void test05315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05315");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.initComplete();
        atmosphereConfig1.initComplete();
        int int16 = atmosphereConfig1.getInitParameter("", (-1));
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.shutdownHook(shutdownHook17);
        atmosphereConfig18.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig21.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.throwExceptionOnCloned = true;
        atmosphereConfig27.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig27.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList37 = atmosphereConfig27.atmosphereHandlerConfig;
        atmosphereConfig21.atmosphereHandlerConfig = atmosphereHandlerConfigList37;
        atmosphereConfig21.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList41 = atmosphereConfig21.atmosphereHandlerConfig;
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList41;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig43.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig43.properties();
        atmosphereConfig43.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig43.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList51 = atmosphereConfig50.shutdownHooks;
        atmosphereConfig49.setshutdownHooks(shutdownHookList51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList54 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig49.atmosphereHandlerConfig = atmosphereHandlerConfigList54;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig49.getshutdownHooks();
        atmosphereConfig43.setshutdownHooks(shutdownHookList56);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig43.shutdownHook(shutdownHook58);
        org.atmosphere.config.AtmosphereHandlerConfig[] atmosphereHandlerConfigArray60 = new org.atmosphere.config.AtmosphereHandlerConfig[] {};
        java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList61 = new java.util.ArrayList<org.atmosphere.config.AtmosphereHandlerConfig>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.config.AtmosphereHandlerConfig>) atmosphereHandlerConfigList61, atmosphereHandlerConfigArray60);
        atmosphereConfig43.atmosphereHandlerConfig = atmosphereHandlerConfigList61;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = atmosphereConfig43.getframework();
        atmosphereConfig43.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig43.properties();
        atmosphereConfig18.setproperties(strMap67);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(shutdownHookList51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList54);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(atmosphereFramework64);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test05316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05316");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        atmosphereConfig13.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.properties();
        atmosphereConfig0.setproperties(strMap17);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig0.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.shutdownHook(shutdownHook22);
        atmosphereConfig23.setSupportSession(true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
    }

    @Test
    public void test05317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05317");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        boolean boolean23 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig16.throwExceptionOnCloned;
        java.lang.String str26 = atmosphereConfig16.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig16.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig16.properties();
        atmosphereConfig13.properties = strMap29;
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig13.getAtmosphereHandlerConfig();
        atmosphereConfig13.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = atmosphereConfig13.framework();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext36 = atmosphereConfig13.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNull(atmosphereFramework35);
    }

    @Test
    public void test05318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05318");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig5.properties();
        atmosphereConfig0.properties = strMap7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig0.framework;
        atmosphereConfig0.supportSession = true;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration12 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(atmosphereFramework9);
    }

    @Test
    public void test05319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05319");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        boolean boolean2 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework3 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        boolean boolean6 = atmosphereConfig4.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = atmosphereConfig4.framework;
        org.slf4j.Logger logger8 = atmosphereConfig4.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig4.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig4.getstartUpHook();
        atmosphereConfig0.setstartUpHook(startupHookList10);
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.lang.String str15 = atmosphereConfig0.getInitParameter("", "");
        boolean boolean16 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig0.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig20.properties();
        atmosphereConfig19.properties = strMap22;
        boolean boolean24 = atmosphereConfig19.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig19.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties();
        atmosphereConfig28.properties = strMap31;
        atmosphereConfig28.throwExceptionOnCloned = true;
        atmosphereConfig28.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig28.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig28.shutdownHook(shutdownHook38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig39.properties;
        atmosphereConfig19.properties = strMap40;
        atmosphereConfig0.setproperties(strMap40);
        boolean boolean45 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean46 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(atmosphereFramework3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(atmosphereFramework7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test05320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05320");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList3 = atmosphereConfig1.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        atmosphereConfig1.setframework(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig1.setframework(atmosphereFramework6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.getshutdownHooks();
        java.lang.String str18 = atmosphereConfig9.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig21.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig21.setframework(atmosphereFramework28);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig21.getproperties();
        atmosphereConfig9.setproperties(strMap30);
        atmosphereConfig1.properties = strMap30;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig1.shutdownHook(shutdownHook33);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig35 = atmosphereConfig1.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList3);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
    }

    @Test
    public void test05321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05321");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        boolean boolean12 = atmosphereConfig9.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig9.setframework(atmosphereFramework13);
        boolean boolean15 = atmosphereConfig9.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster17 = atmosphereConfig9.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(shutdownHookList16);
    }

    @Test
    public void test05322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05322");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList3 = atmosphereConfig1.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig1.framework();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList3);
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNull(atmosphereFramework5);
    }

    @Test
    public void test05323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05323");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        boolean boolean6 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig1.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.shutdownHooks;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        atmosphereConfig11.setThrowExceptionOnCloned(false);
        int int16 = atmosphereConfig11.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.framework = atmosphereFramework17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig11.properties();
        boolean boolean20 = atmosphereConfig11.isSupportSession();
        boolean boolean21 = atmosphereConfig11.sessionTimeoutRemovalAllowed;
        atmosphereConfig11.destroy();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig11.properties;
        atmosphereConfig1.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig1.setframework(atmosphereFramework25);
        boolean boolean27 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test05324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05324");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str17 = atmosphereConfig14.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig14.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig14.populate(atmosphereConfig19);
        boolean boolean23 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig24.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig24.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig24.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig24.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig32.getproperties();
        atmosphereConfig19.properties = strMap33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig0.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = atmosphereConfig38.properties();
        atmosphereConfig37.properties = strMap40;
        org.slf4j.Logger logger42 = atmosphereConfig37.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        atmosphereConfig37.framework = atmosphereFramework43;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig37.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        atmosphereConfig47.setThrowExceptionOnCloned(false);
        atmosphereConfig47.setSupportSession(false);
        boolean boolean52 = atmosphereConfig47.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig47.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig47.shutdownHooks;
        atmosphereConfig37.shutdownHooks = shutdownHookList54;
        atmosphereConfig19.setshutdownHooks(shutdownHookList54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig57.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook59 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = atmosphereConfig57.shutdownHook(shutdownHook59);
        org.slf4j.Logger logger61 = atmosphereConfig57.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig57.setframework(atmosphereFramework62);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray64 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList65, startupHookArray64);
        atmosphereConfig57.startUpHook = startupHookList65;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig57.framework = atmosphereFramework68;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList71 = atmosphereConfig70.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook72 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = atmosphereConfig70.shutdownHook(shutdownHook72);
        org.slf4j.Logger logger74 = atmosphereConfig70.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig75.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig75.properties();
        atmosphereConfig70.properties = strMap77;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig70.properties();
        atmosphereConfig57.setproperties(strMap79);
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = atmosphereConfig57.properties;
        atmosphereConfig57.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = atmosphereConfig19.populate(atmosphereConfig57);
        boolean boolean85 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework86 = atmosphereConfig19.getframework();
        boolean boolean87 = atmosphereConfig19.supportSession;
        boolean boolean88 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        boolean boolean89 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(logger42);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertNotNull(atmosphereConfig60);
        org.junit.Assert.assertNotNull(logger61);
        org.junit.Assert.assertNotNull(startupHookArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(shutdownHookList71);
        org.junit.Assert.assertNotNull(atmosphereConfig73);
        org.junit.Assert.assertNotNull(logger74);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(atmosphereConfig84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(atmosphereFramework86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test05325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05325");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig6.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        atmosphereConfig5.properties = strMap8;
        atmosphereConfig5.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        atmosphereConfig5.setstartUpHook(startupHookList13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig5.setproperties(strMap19);
        boolean boolean24 = atmosphereConfig5.getInitParameter("", false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig5.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.startupHook(startupHook27);
        boolean boolean29 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test05326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05326");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig7.setproperties(strMap12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig7.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.shutdownHook(shutdownHook17);
        java.lang.String str21 = atmosphereConfig15.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig7.populate(atmosphereConfig15);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig7.shutdownHook(shutdownHook25);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory27 = atmosphereConfig7.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
    }

    @Test
    public void test05327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05327");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig5.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig5.properties();
        atmosphereConfig0.properties = strMap7;
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean11 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig0.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory15 = atmosphereConfig0.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test05328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05328");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig0.framework = atmosphereFramework7;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig0.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        boolean boolean16 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig11.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.startupHook(startupHook19);
        java.lang.String str22 = atmosphereConfig18.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig23.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig23.shutdownHook(shutdownHook25);
        java.lang.String str29 = atmosphereConfig23.getInitParameter("hi!", "");
        boolean boolean30 = atmosphereConfig23.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig23.startUpHook;
        java.lang.String str34 = atmosphereConfig23.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig23.startUpHook;
        atmosphereConfig18.startUpHook = startupHookList35;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig18.startUpHook;
        atmosphereConfig0.startUpHook = startupHookList37;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(startupHookList37);
    }

    @Test
    public void test05329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05329");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.initComplete();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        atmosphereConfig11.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig11.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig21.shutdownHook(shutdownHook29);
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig30.startupHook(startupHook34);
        atmosphereConfig30.destroy();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
    }

    @Test
    public void test05330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05330");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean20 = atmosphereConfig1.getInitParameter("", false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig1.properties;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = atmosphereConfig1.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test05331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05331");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        atmosphereConfig0.initComplete();
        boolean boolean9 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.lang.String str12 = atmosphereConfig0.getInitParameter("", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory13 = atmosphereConfig0.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test05332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05332");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig1.shutdownHook(shutdownHook10);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties;
        boolean boolean14 = atmosphereConfig11.isSupportSession();
        boolean boolean15 = atmosphereConfig11.throwExceptionOnCloned;
        boolean boolean16 = atmosphereConfig11.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig11.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig11.framework = atmosphereFramework18;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test05333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05333");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        atmosphereConfig5.properties = strMap8;
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig5.getstartUpHook();
        java.lang.String str15 = atmosphereConfig5.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig5.shutdownHook(shutdownHook16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration18 = atmosphereConfig17.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test05334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05334");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        atmosphereConfig11.throwExceptionOnCloned = true;
        atmosphereConfig11.sessionTimeoutRemovalAllowed = true;
        boolean boolean20 = atmosphereConfig11.isThrowExceptionOnCloned();
        java.lang.String str22 = atmosphereConfig11.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig23.getAtmosphereHandlerConfig();
        boolean boolean25 = atmosphereConfig23.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig23.framework;
        java.lang.String str28 = atmosphereConfig23.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig23.properties;
        atmosphereConfig11.setproperties(strMap29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig31.getframework();
        boolean boolean33 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        boolean boolean34 = atmosphereConfig31.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig31.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig31.startUpHook;
        atmosphereConfig11.startUpHook = startupHookList36;
        atmosphereConfig1.startUpHook = startupHookList36;
        atmosphereConfig1.setSupportSession(false);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(startupHookList36);
    }

    @Test
    public void test05335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05335");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean20 = atmosphereConfig1.getInitParameter("", false);
        java.lang.String str23 = atmosphereConfig1.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.shutdownHooks;
        atmosphereConfig26.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        atmosphereConfig31.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        atmosphereConfig35.setThrowExceptionOnCloned(false);
        int int40 = atmosphereConfig35.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig35.framework = atmosphereFramework41;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig35.properties();
        atmosphereConfig31.setproperties(strMap43);
        atmosphereConfig26.properties = strMap43;
        atmosphereConfig1.setproperties(strMap43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList47 = atmosphereConfig1.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig1.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        atmosphereConfig1.setframework(atmosphereFramework49);
        java.lang.Class<?> wildcardClass51 = atmosphereConfig1.getClass();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList47);
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test05336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05336");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.setframework(atmosphereFramework9);
        int int13 = atmosphereConfig1.getInitParameter("", 97);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig1.properties;
        boolean boolean15 = atmosphereConfig1.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider16 = atmosphereConfig1.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05337");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig9.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig9.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig1.populate(atmosphereConfig9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig9.startupHook(startupHook22);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook24 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = atmosphereConfig23.shutdownHook(shutdownHook24);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig26.shutdownHook(shutdownHook28);
        java.lang.String str32 = atmosphereConfig26.getInitParameter("hi!", "");
        boolean boolean33 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig26.shutdownHook(shutdownHook34);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig26.startUpHook;
        boolean boolean37 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig39.shutdownHooks;
        atmosphereConfig38.setshutdownHooks(shutdownHookList40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        atmosphereConfig38.setstartUpHook(startupHookList43);
        atmosphereConfig26.startUpHook = startupHookList43;
        boolean boolean46 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig26.startupHook(startupHook47);
        boolean boolean49 = atmosphereConfig48.sessionTimeoutRemovalAllowed;
        boolean boolean50 = atmosphereConfig48.throwExceptionOnCloned;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = atmosphereConfig48.properties;
        int int54 = atmosphereConfig48.getInitParameter("", 10);
        atmosphereConfig48.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig48.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = atmosphereConfig23.populate(atmosphereConfig48);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig59.framework = atmosphereFramework60;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig25);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertNotNull(atmosphereConfig59);
    }

    @Test
    public void test05338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05338");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        boolean boolean8 = atmosphereConfig1.throwExceptionOnCloned;
        boolean boolean9 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        atmosphereConfig12.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig12.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig12.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.properties;
        atmosphereConfig1.setproperties(strMap18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig1.shutdownHook(shutdownHook20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig21.properties();
        atmosphereConfig21.throwExceptionOnCloned = true;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap25 = atmosphereConfig21.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test05339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05339");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig1.shutdownHook(shutdownHook11);
        atmosphereConfig12.throwExceptionOnCloned = false;
        atmosphereConfig12.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig12.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        atmosphereConfig18.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig18.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig23.framework();
        int int28 = atmosphereConfig23.getInitParameter("hi!", 0);
        boolean boolean29 = atmosphereConfig23.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        atmosphereConfig23.framework = atmosphereFramework30;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig18.populate(atmosphereConfig23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig23.getframework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList34 = atmosphereConfig23.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig23.framework = atmosphereFramework35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig37.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig37.shutdownHook(shutdownHook39);
        java.lang.String str43 = atmosphereConfig37.getInitParameter("hi!", "");
        boolean boolean44 = atmosphereConfig37.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig37.shutdownHook(shutdownHook45);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig46.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig46.shutdownHooks;
        atmosphereConfig46.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig46.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig23.populate(atmosphereConfig46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig53.getshutdownHooks();
        atmosphereConfig12.setshutdownHooks(shutdownHookList54);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(shutdownHookList34);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(shutdownHookList54);
    }

    @Test
    public void test05340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05340");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.slf4j.Logger logger8 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig7.shutdownHook(shutdownHook9);
        java.lang.String str12 = atmosphereConfig7.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig7.setframework(atmosphereFramework13);
        boolean boolean15 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig7.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig7.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider18 = atmosphereConfig7.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNull(atmosphereFramework17);
    }

    @Test
    public void test05341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05341");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        int int8 = atmosphereConfig0.getInitParameter("hi!", (int) 'a');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig27.shutdownHooks = shutdownHookList42;
        atmosphereConfig18.shutdownHooks = shutdownHookList42;
        atmosphereConfig10.setshutdownHooks(shutdownHookList42);
        atmosphereConfig0.setshutdownHooks(shutdownHookList42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig48.framework;
        java.lang.String str51 = atmosphereConfig48.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework52);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList55 = atmosphereConfig54.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig54.properties();
        atmosphereConfig53.properties = strMap56;
        atmosphereConfig53.throwExceptionOnCloned = true;
        atmosphereConfig53.sessionTimeoutRemovalAllowed = true;
        boolean boolean62 = atmosphereConfig53.isThrowExceptionOnCloned();
        boolean boolean63 = atmosphereConfig53.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig64.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig64.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig64.properties;
        atmosphereConfig64.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig70 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList71 = atmosphereConfig70.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = atmosphereConfig70.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList73 = atmosphereConfig70.getstartUpHook();
        atmosphereConfig64.startUpHook = startupHookList73;
        atmosphereConfig53.setstartUpHook(startupHookList73);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList76 = atmosphereConfig53.getAtmosphereHandlerConfig();
        atmosphereConfig48.atmosphereHandlerConfig = atmosphereHandlerConfigList76;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList78 = atmosphereConfig48.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList79 = atmosphereConfig48.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList80 = atmosphereConfig48.getstartUpHook();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 97 + "'", int8 == 97);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(startupHookList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(startupHookList73);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList76);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList78);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList79);
        org.junit.Assert.assertNotNull(startupHookList80);
    }

    @Test
    public void test05342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05342");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig8.getstartUpHook();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig8.properties();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test05343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05343");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str17 = atmosphereConfig14.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig14.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig14.populate(atmosphereConfig19);
        boolean boolean23 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig24.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig24.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig24.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig24.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig32.getproperties();
        atmosphereConfig19.properties = strMap33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig0.populate(atmosphereConfig19);
        boolean boolean36 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        atmosphereConfig0.setframework(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNull(atmosphereFramework41);
    }

    @Test
    public void test05344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05344");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        atmosphereConfig1.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig7.shutdownHook(shutdownHook9);
        java.lang.String str13 = atmosphereConfig7.getInitParameter("hi!", "");
        boolean boolean14 = atmosphereConfig7.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig7.shutdownHook(shutdownHook15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig7.startUpHook;
        boolean boolean18 = atmosphereConfig7.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig20.shutdownHooks;
        atmosphereConfig19.setshutdownHooks(shutdownHookList21);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList24 = atmosphereConfig23.startUpHook;
        atmosphereConfig19.setstartUpHook(startupHookList24);
        atmosphereConfig7.startUpHook = startupHookList24;
        boolean boolean27 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig7.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList28);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory30 = atmosphereConfig1.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(startupHookList24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList28);
    }

    @Test
    public void test05345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05345");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig1.startUpHook;
        int int13 = atmosphereConfig1.getInitParameter("hi!", (int) (byte) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig1.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig1.framework = atmosphereFramework15;
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(atmosphereFramework14);
    }

    @Test
    public void test05346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05346");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig32.startupHook(startupHook37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig32.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig42.properties();
        atmosphereConfig41.properties = strMap44;
        atmosphereConfig41.throwExceptionOnCloned = true;
        atmosphereConfig41.sessionTimeoutRemovalAllowed = true;
        boolean boolean50 = atmosphereConfig41.isThrowExceptionOnCloned();
        boolean boolean51 = atmosphereConfig41.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig52.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig52.properties;
        atmosphereConfig52.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig58.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig58.getstartUpHook();
        atmosphereConfig52.startUpHook = startupHookList61;
        atmosphereConfig41.setstartUpHook(startupHookList61);
        atmosphereConfig32.startUpHook = startupHookList61;
        atmosphereConfig7.setstartUpHook(startupHookList61);
        boolean boolean68 = atmosphereConfig7.getInitParameter("", true);
        boolean boolean71 = atmosphereConfig7.getInitParameter("", true);
        boolean boolean72 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test05347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05347");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig1.framework = atmosphereFramework6;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig1.framework = atmosphereFramework10;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig1.framework();
        java.lang.String str15 = atmosphereConfig1.getInitParameter("", "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test05348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05348");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig9.shutdownHooks;
        atmosphereConfig9.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig9.supportSession = false;
        atmosphereConfig9.initComplete();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(shutdownHookList11);
    }

    @Test
    public void test05349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05349");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig13.setframework(atmosphereFramework15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig13.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
    }

    @Test
    public void test05350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05350");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        atmosphereConfig10.sessionTimeoutRemovalAllowed = true;
        boolean boolean19 = atmosphereConfig10.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig20.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig23.shutdownHooks;
        atmosphereConfig22.setshutdownHooks(shutdownHookList24);
        boolean boolean26 = atmosphereConfig22.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = atmosphereConfig22.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig20.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList28;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig7.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = atmosphereConfig32.framework();
        int int37 = atmosphereConfig32.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray38 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39, shutdownHookArray38);
        atmosphereConfig32.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        atmosphereConfig42.setSupportSession(false);
        boolean boolean46 = atmosphereConfig42.sessionTimeoutRemovalAllowed;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig42.getproperties();
        atmosphereConfig32.properties = strMap47;
        atmosphereConfig7.setproperties(strMap47);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList50 = atmosphereConfig7.startUpHook;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(atmosphereFramework27);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNull(atmosphereFramework34);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(startupHookList50);
    }

    @Test
    public void test05351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05351");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.initComplete();
        atmosphereConfig1.initComplete();
        int int16 = atmosphereConfig1.getInitParameter("", (-1));
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig1.shutdownHook(shutdownHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig1.shutdownHook(shutdownHook19);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
    }

    @Test
    public void test05352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05352");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        atmosphereConfig7.setshutdownHooks(shutdownHookList9);
        boolean boolean11 = atmosphereConfig7.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig7.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig7.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig7.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig1.populate(atmosphereConfig15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList19 = atmosphereConfig18.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig18.shutdownHook(shutdownHook20);
        org.slf4j.Logger logger22 = atmosphereConfig18.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig18.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray25 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList26, startupHookArray25);
        atmosphereConfig18.startUpHook = startupHookList26;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig18.getstartUpHook();
        atmosphereConfig1.startUpHook = startupHookList29;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig1.getframework();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(shutdownHookList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(logger22);
        org.junit.Assert.assertNotNull(startupHookArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNull(atmosphereFramework31);
    }

    @Test
    public void test05353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05353");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        boolean boolean17 = atmosphereConfig16.isSupportSession();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig19.shutdownHook(shutdownHook21);
        org.slf4j.Logger logger23 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig19.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig16.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig1.populate(atmosphereConfig16);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig31.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig31.properties;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig34 = atmosphereConfig31.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test05354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05354");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.slf4j.Logger logger13 = atmosphereConfig1.getlogger();
        boolean boolean14 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig1.getshutdownHooks();
        java.lang.Class<?> wildcardClass18 = shutdownHookList17.getClass();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test05355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05355");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig10.framework;
        org.slf4j.Logger logger12 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig10.framework;
        org.slf4j.Logger logger14 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        boolean boolean17 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig16.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig16.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig21.framework();
        int int26 = atmosphereConfig21.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        java.lang.String str33 = atmosphereConfig27.getInitParameter("hi!", "");
        boolean boolean34 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig27.shutdownHook(shutdownHook35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig36.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig40.properties();
        atmosphereConfig39.properties = strMap42;
        boolean boolean44 = atmosphereConfig39.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig39.shutdownHook(shutdownHook45);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig36.populate(atmosphereConfig39);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework48);
        atmosphereConfig49.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework52);
        atmosphereConfig53.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework56);
        atmosphereConfig57.setThrowExceptionOnCloned(false);
        int int62 = atmosphereConfig57.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig57.framework = atmosphereFramework63;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig57.properties();
        atmosphereConfig53.setproperties(strMap65);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList67 = atmosphereConfig53.startUpHook;
        atmosphereConfig49.setstartUpHook(startupHookList67);
        atmosphereConfig36.startUpHook = startupHookList67;
        atmosphereConfig21.setstartUpHook(startupHookList67);
        atmosphereConfig16.setstartUpHook(startupHookList67);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig16.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList72);
        atmosphereConfig10.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = atmosphereConfig10.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework77 = null;
        atmosphereConfig10.setframework(atmosphereFramework77);
        org.slf4j.Logger logger79 = atmosphereConfig10.getlogger();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(startupHookList67);
        org.junit.Assert.assertNotNull(shutdownHookList72);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(logger79);
    }

    @Test
    public void test05356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05356");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig12);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig12.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig12.properties;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration23 = atmosphereConfig12.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test05357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05357");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig10.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig10.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig10.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework21);
        atmosphereConfig22.setThrowExceptionOnCloned(false);
        int int27 = atmosphereConfig22.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        atmosphereConfig22.framework = atmosphereFramework28;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig22.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig22.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig22.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig34.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig34.shutdownHook(shutdownHook36);
        org.slf4j.Logger logger38 = atmosphereConfig34.getlogger();
        java.lang.String str41 = atmosphereConfig34.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        atmosphereConfig43.properties = strMap46;
        atmosphereConfig43.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig43.getAtmosphereHandlerConfig();
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList50;
        org.slf4j.Logger logger55 = atmosphereConfig1.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework56);
        atmosphereConfig57.setThrowExceptionOnCloned(false);
        int int62 = atmosphereConfig57.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        atmosphereConfig57.framework = atmosphereFramework63;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig57.startupHook(startupHook65);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = atmosphereConfig57.shutdownHooks;
        atmosphereConfig1.setshutdownHooks(shutdownHookList67);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory69 = atmosphereConfig1.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(logger38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(logger55);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(shutdownHookList67);
    }

    @Test
    public void test05358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05358");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        atmosphereConfig13.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig13.properties();
        atmosphereConfig0.setproperties(strMap17);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig21.shutdownHook(shutdownHook29);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig30.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties();
        atmosphereConfig33.properties = strMap36;
        boolean boolean38 = atmosphereConfig33.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig33.shutdownHook(shutdownHook39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig30.populate(atmosphereConfig33);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig33.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig45.properties();
        atmosphereConfig44.properties = strMap47;
        atmosphereConfig44.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig51.startUpHook;
        atmosphereConfig44.setstartUpHook(startupHookList52);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig56.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = atmosphereConfig56.properties();
        atmosphereConfig55.properties = strMap58;
        atmosphereConfig44.setproperties(strMap58);
        boolean boolean63 = atmosphereConfig44.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList65 = atmosphereConfig64.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = atmosphereConfig64.properties();
        atmosphereConfig44.setproperties(strMap66);
        boolean boolean70 = atmosphereConfig44.getInitParameter("", false);
        boolean boolean71 = atmosphereConfig44.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = atmosphereConfig33.populate(atmosphereConfig44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig73.getAtmosphereHandlerConfig();
        boolean boolean75 = atmosphereConfig73.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = atmosphereConfig73.framework;
        java.lang.String str78 = atmosphereConfig73.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig73.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig80 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList81 = atmosphereConfig80.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = atmosphereConfig80.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = atmosphereConfig80.properties;
        atmosphereConfig73.setproperties(strMap83);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework85 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig86 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework85);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig87 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList88 = atmosphereConfig87.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = atmosphereConfig87.properties();
        atmosphereConfig86.properties = strMap89;
        atmosphereConfig86.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList93 = atmosphereConfig86.shutdownHooks;
        atmosphereConfig73.shutdownHooks = shutdownHookList93;
        atmosphereConfig72.setshutdownHooks(shutdownHookList93);
        atmosphereConfig0.setshutdownHooks(shutdownHookList93);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework97 = atmosphereConfig0.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap98 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(startupHookList65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(atmosphereFramework76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(startupHookList81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(startupHookList88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(shutdownHookList93);
        org.junit.Assert.assertNull(atmosphereFramework97);
        org.junit.Assert.assertNotNull(strMap98);
    }

    @Test
    public void test05359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05359");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean20 = atmosphereConfig1.getInitParameter("", false);
        java.lang.String str23 = atmosphereConfig1.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.shutdownHooks;
        atmosphereConfig26.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework30);
        atmosphereConfig31.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        atmosphereConfig35.setThrowExceptionOnCloned(false);
        int int40 = atmosphereConfig35.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig35.framework = atmosphereFramework41;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig35.properties();
        atmosphereConfig31.setproperties(strMap43);
        atmosphereConfig26.properties = strMap43;
        atmosphereConfig1.setproperties(strMap43);
        atmosphereConfig1.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList49 = atmosphereConfig48.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig48.shutdownHook(shutdownHook50);
        atmosphereConfig48.initComplete();
        atmosphereConfig48.throwExceptionOnCloned = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig48.properties;
        atmosphereConfig1.setproperties(strMap55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework58);
        atmosphereConfig59.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook62 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = atmosphereConfig59.startupHook(startupHook62);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook64 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = atmosphereConfig63.shutdownHook(shutdownHook64);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig63.atmosphereHandlerConfig;
        atmosphereConfig63.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig63.getAtmosphereHandlerConfig();
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList68;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory70 = atmosphereConfig1.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(shutdownHookList49);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(atmosphereConfig63);
        org.junit.Assert.assertNotNull(atmosphereConfig65);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
    }

    @Test
    public void test05360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05360");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        atmosphereConfig1.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig1.atmosphereHandlerConfig;
        org.slf4j.Logger logger12 = atmosphereConfig1.getlogger();
        boolean boolean13 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig1.shutdownHook(shutdownHook14);
        boolean boolean16 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig15.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
    }

    @Test
    public void test05361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05361");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        boolean boolean23 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        atmosphereConfig22.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig22.shutdownHook(shutdownHook27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        atmosphereConfig30.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework33);
        atmosphereConfig34.setThrowExceptionOnCloned(false);
        int int39 = atmosphereConfig34.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        atmosphereConfig34.framework = atmosphereFramework40;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig34.properties();
        atmosphereConfig30.setproperties(strMap42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig44.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig44.shutdownHook(shutdownHook46);
        java.lang.String str50 = atmosphereConfig44.getInitParameter("hi!", "");
        boolean boolean51 = atmosphereConfig44.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig44.shutdownHook(shutdownHook52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig53.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig53.atmosphereHandlerConfig;
        atmosphereConfig30.atmosphereHandlerConfig = atmosphereHandlerConfigList55;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        atmosphereConfig58.setThrowExceptionOnCloned(false);
        atmosphereConfig58.setSupportSession(false);
        boolean boolean63 = atmosphereConfig58.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig58.getstartUpHook();
        atmosphereConfig30.startUpHook = startupHookList64;
        atmosphereConfig22.setstartUpHook(startupHookList64);
        atmosphereConfig22.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory69 = atmosphereConfig22.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(shutdownHookList45);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(startupHookList64);
    }

    @Test
    public void test05362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05362");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList6 = atmosphereConfig5.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = atmosphereConfig5.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig5.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.populate(atmosphereConfig5);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig5.getproperties();
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        atmosphereConfig5.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(startupHookList6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test05363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05363");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        boolean boolean2 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList3 = atmosphereConfig1.shutdownHooks;
        boolean boolean4 = atmosphereConfig1.throwExceptionOnCloned;
        atmosphereConfig1.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        atmosphereConfig12.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        atmosphereConfig16.setThrowExceptionOnCloned(false);
        int int21 = atmosphereConfig16.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig16.framework = atmosphereFramework22;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig16.properties();
        atmosphereConfig12.setproperties(strMap24);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig12.startUpHook;
        atmosphereConfig8.setstartUpHook(startupHookList26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig28.shutdownHook(shutdownHook30);
        org.slf4j.Logger logger32 = atmosphereConfig28.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig28.setframework(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig28.startUpHook = startupHookList36;
        atmosphereConfig8.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        atmosphereConfig40.startUpHook = startupHookList42;
        atmosphereConfig8.setstartUpHook(startupHookList42);
        atmosphereConfig8.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig8.getframework();
        atmosphereConfig8.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig1.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig51.shutdownHook(shutdownHook52);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(shutdownHookList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
    }

    @Test
    public void test05364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05364");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig7.setframework(atmosphereFramework10);
        atmosphereConfig7.initComplete();
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        atmosphereConfig7.throwExceptionOnCloned = true;
        atmosphereConfig7.setThrowExceptionOnCloned(false);
        boolean boolean19 = atmosphereConfig7.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test05365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05365");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.startupHook(startupHook18);
        boolean boolean20 = atmosphereConfig19.isSupportSession();
        boolean boolean21 = atmosphereConfig19.supportSession;
        atmosphereConfig19.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig19.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig19.getstartUpHook();
        atmosphereConfig1.startUpHook = startupHookList25;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(startupHookList25);
    }

    @Test
    public void test05366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05366");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean20 = atmosphereConfig1.getInitParameter("", false);
        java.lang.String str23 = atmosphereConfig1.getInitParameter("hi!", "hi!");
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig1.getAtmosphereHandlerConfig();
        atmosphereConfig1.setSupportSession(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider29 = atmosphereConfig1.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
    }

    @Test
    public void test05367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05367");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig0.framework = atmosphereFramework8;
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.lang.String str13 = atmosphereConfig0.getInitParameter("");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05368");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig9.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        boolean boolean17 = atmosphereConfig12.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig9.populate(atmosphereConfig12);
        atmosphereConfig12.sessionTimeoutRemovalAllowed = true;
        int int25 = atmosphereConfig12.getInitParameter("", (int) '4');
        java.lang.Class<?> wildcardClass26 = atmosphereConfig12.getClass();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test05369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05369");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        boolean boolean10 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        atmosphereConfig14.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig14.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig14.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        atmosphereConfig23.startUpHook = startupHookList25;
        atmosphereConfig14.startUpHook = startupHookList25;
        atmosphereConfig1.startUpHook = startupHookList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig1.properties;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig1.startUpHook;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext31 = atmosphereConfig1.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(startupHookList30);
    }

    @Test
    public void test05370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05370");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig1.startupHook(startupHook11);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory13 = atmosphereConfig1.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
    }

    @Test
    public void test05371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05371");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean7 = atmosphereConfig0.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig0.properties();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test05372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05372");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        atmosphereConfig0.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList4 = atmosphereConfig0.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig0.shutdownHooks;
        java.lang.Class<?> wildcardClass9 = atmosphereConfig0.getClass();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertNotNull(shutdownHookList4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test05373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05373");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig8.properties = strMap11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig14.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig14.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig6.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig17.getframework();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNull(atmosphereFramework18);
    }

    @Test
    public void test05374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05374");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig1.isSupportSession();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig1.properties();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        boolean boolean18 = atmosphereConfig1.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory19 = atmosphereConfig1.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test05375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05375");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        boolean boolean11 = atmosphereConfig6.isSupportSession();
        atmosphereConfig6.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig6.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList15);
        java.lang.Class<?> wildcardClass17 = shutdownHookList15.getClass();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test05376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05376");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig4.shutdownHooks;
        atmosphereConfig3.setshutdownHooks(shutdownHookList5);
        atmosphereConfig0.setshutdownHooks(shutdownHookList5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig0.properties = strMap10;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig0.framework;
        boolean boolean13 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig0.setframework(atmosphereFramework14);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05377");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig1.shutdownHook(shutdownHook8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig10.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig10.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig10.shutdownHook(shutdownHook16);
        boolean boolean20 = atmosphereConfig17.getInitParameter("hi!", false);
        atmosphereConfig17.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig9.populate(atmosphereConfig17);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = atmosphereConfig23.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
    }

    @Test
    public void test05378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05378");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        int int13 = atmosphereConfig10.getInitParameter("", 32);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        int int23 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig18.framework = atmosphereFramework24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig18.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig18.shutdownHook(shutdownHook27);
        boolean boolean29 = atmosphereConfig28.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties;
        boolean boolean31 = atmosphereConfig28.isSupportSession();
        boolean boolean32 = atmosphereConfig28.throwExceptionOnCloned;
        boolean boolean33 = atmosphereConfig28.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig36.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig36.properties();
        atmosphereConfig35.properties = strMap38;
        boolean boolean40 = atmosphereConfig35.isSessionTimeoutRemovalAllowed();
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        atmosphereConfig35.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        int int50 = atmosphereConfig45.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig45.framework = atmosphereFramework51;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig45.properties();
        boolean boolean54 = atmosphereConfig45.isSupportSession();
        boolean boolean55 = atmosphereConfig45.sessionTimeoutRemovalAllowed;
        atmosphereConfig45.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList60 = atmosphereConfig59.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig59.properties();
        atmosphereConfig58.properties = strMap61;
        org.slf4j.Logger logger63 = atmosphereConfig58.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig58.framework = atmosphereFramework64;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList66 = atmosphereConfig58.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework67);
        atmosphereConfig68.setThrowExceptionOnCloned(false);
        atmosphereConfig68.setSupportSession(false);
        boolean boolean73 = atmosphereConfig68.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList74 = atmosphereConfig68.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList75 = atmosphereConfig68.shutdownHooks;
        atmosphereConfig58.shutdownHooks = shutdownHookList75;
        atmosphereConfig45.shutdownHooks = shutdownHookList75;
        atmosphereConfig35.shutdownHooks = shutdownHookList75;
        atmosphereConfig28.setshutdownHooks(shutdownHookList75);
        atmosphereConfig10.shutdownHooks = shutdownHookList75;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = null;
        atmosphereConfig10.setframework(atmosphereFramework81);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = atmosphereConfig10.framework();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig84 = atmosphereConfig10.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(startupHookList60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(logger63);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList66);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(startupHookList74);
        org.junit.Assert.assertNotNull(shutdownHookList75);
        org.junit.Assert.assertNull(atmosphereFramework83);
    }

    @Test
    public void test05379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05379");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        org.slf4j.Logger logger12 = atmosphereConfig8.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.shutdownHook(shutdownHook13);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig8.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig1.populate(atmosphereConfig8);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework18);
        atmosphereConfig19.supportSession = false;
        atmosphereConfig19.setThrowExceptionOnCloned(true);
        atmosphereConfig19.destroy();
        atmosphereConfig19.initComplete();
        org.slf4j.Logger logger26 = atmosphereConfig19.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig19.startUpHook;
        atmosphereConfig19.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig19.startupHook(startupHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig17.populate(atmosphereConfig19);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig19.getproperties();
        atmosphereConfig19.setSupportSession(true);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(logger12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test05380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05380");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        boolean boolean6 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.destroy();
        atmosphereConfig0.setSupportSession(true);
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(startupHookList8);
    }

    @Test
    public void test05381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05381");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.startUpHook = startupHookList12;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig16.properties();
        atmosphereConfig15.properties = strMap18;
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig15.getshutdownHooks();
        boolean boolean23 = atmosphereConfig15.sessionTimeoutRemovalAllowed;
        java.lang.String str26 = atmosphereConfig15.getInitParameter("", "hi!");
        atmosphereConfig15.throwExceptionOnCloned = true;
        java.lang.String str30 = atmosphereConfig15.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig15.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig1.framework;
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        boolean boolean36 = atmosphereConfig1.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig1.getproperties();
        boolean boolean38 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        int int41 = atmosphereConfig1.getInitParameter("", (int) (byte) 10);
        atmosphereConfig1.destroy();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
    }

    @Test
    public void test05382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05382");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        int int8 = atmosphereConfig0.getInitParameter("hi!", (int) 'a');
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig18.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        atmosphereConfig27.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig27.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList36 = atmosphereConfig35.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig35.setThrowExceptionOnCloned(true);
        java.lang.String str41 = atmosphereConfig35.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig35.getshutdownHooks();
        atmosphereConfig27.shutdownHooks = shutdownHookList42;
        atmosphereConfig18.shutdownHooks = shutdownHookList42;
        atmosphereConfig10.setshutdownHooks(shutdownHookList42);
        atmosphereConfig0.setshutdownHooks(shutdownHookList42);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig0.shutdownHook(shutdownHook47);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = atmosphereConfig48.framework;
        atmosphereConfig48.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig48.getframework();
        atmosphereConfig48.throwExceptionOnCloned = false;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = atmosphereConfig48.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 97 + "'", int8 == 97);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNull(atmosphereFramework49);
        org.junit.Assert.assertNull(atmosphereFramework52);
    }

    @Test
    public void test05383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05383");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig0.setSupportSession(false);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap24 = atmosphereConfig0.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
    }

    @Test
    public void test05384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05384");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        boolean boolean7 = atmosphereConfig0.getInitParameter("", true);
        boolean boolean8 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05385");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig12.getframework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig12.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig12.framework();
        int int18 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig19.framework();
        int int24 = atmosphereConfig19.getInitParameter("hi!", 0);
        boolean boolean25 = atmosphereConfig19.supportSession;
        boolean boolean26 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        java.lang.String str33 = atmosphereConfig27.getInitParameter("hi!", "");
        boolean boolean34 = atmosphereConfig27.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig27.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray37 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList38, startupHookArray37);
        atmosphereConfig36.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList38);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig41.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig41.shutdownHook(shutdownHook43);
        java.lang.String str47 = atmosphereConfig41.getInitParameter("hi!", "");
        boolean boolean48 = atmosphereConfig41.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig41.startUpHook;
        atmosphereConfig36.startUpHook = startupHookList49;
        atmosphereConfig19.startUpHook = startupHookList49;
        int int54 = atmosphereConfig19.getInitParameter("hi!", (int) (byte) 100);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList56 = atmosphereConfig55.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = atmosphereConfig55.framework();
        atmosphereConfig55.destroy();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList59 = atmosphereConfig55.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig60.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = atmosphereConfig60.framework();
        int int65 = atmosphereConfig60.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray66 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList67 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList67, shutdownHookArray66);
        atmosphereConfig60.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList67);
        boolean boolean70 = atmosphereConfig60.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig55.populate(atmosphereConfig60);
        atmosphereConfig60.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList74 = atmosphereConfig60.shutdownHooks;
        atmosphereConfig19.setshutdownHooks(shutdownHookList74);
        atmosphereConfig12.setshutdownHooks(shutdownHookList74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration77 = atmosphereConfig12.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(startupHookArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertNotNull(startupHookList56);
        org.junit.Assert.assertNull(atmosphereFramework57);
        org.junit.Assert.assertNotNull(shutdownHookList59);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNull(atmosphereFramework62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(shutdownHookList74);
    }

    @Test
    public void test05386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05386");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str16 = atmosphereConfig13.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig13.populate(atmosphereConfig18);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig18.shutdownHook(shutdownHook22);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig18.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList24);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
    }

    @Test
    public void test05387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05387");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        atmosphereConfig8.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig8.shutdownHook(shutdownHook15);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory17 = atmosphereConfig16.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
    }

    @Test
    public void test05388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05388");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig10.setThrowExceptionOnCloned(true);
        java.lang.String str16 = atmosphereConfig10.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        atmosphereConfig18.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        atmosphereConfig18.setstartUpHook(startupHookList26);
        atmosphereConfig10.startUpHook = startupHookList26;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig1.populate(atmosphereConfig10);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig10.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig10.getshutdownHooks();
        atmosphereConfig10.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework34);
        atmosphereConfig35.setThrowExceptionOnCloned(false);
        int int40 = atmosphereConfig35.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        atmosphereConfig35.framework = atmosphereFramework41;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig35.startupHook(startupHook43);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = atmosphereConfig44.framework;
        org.slf4j.Logger logger46 = atmosphereConfig44.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework47);
        atmosphereConfig48.setThrowExceptionOnCloned(false);
        boolean boolean51 = atmosphereConfig48.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook52 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = atmosphereConfig48.startupHook(startupHook52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig53.properties;
        atmosphereConfig44.properties = strMap54;
        atmosphereConfig44.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList57 = atmosphereConfig44.getshutdownHooks();
        atmosphereConfig10.setshutdownHooks(shutdownHookList57);
        boolean boolean59 = atmosphereConfig10.isSupportSession();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList60 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNull(atmosphereFramework45);
        org.junit.Assert.assertNotNull(logger46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(shutdownHookList57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList60);
    }

    @Test
    public void test05389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05389");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        boolean boolean16 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        java.lang.String str19 = atmosphereConfig6.getInitParameter("hi!", "hi!");
        org.slf4j.Logger logger20 = atmosphereConfig6.getlogger();
        boolean boolean21 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        boolean boolean22 = atmosphereConfig6.throwExceptionOnCloned;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig6.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig6.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str30 = atmosphereConfig27.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = atmosphereConfig27.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList33 = atmosphereConfig32.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig32.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig27.populate(atmosphereConfig32);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig32.framework();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig32.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig40.shutdownHooks;
        atmosphereConfig39.setshutdownHooks(shutdownHookList41);
        boolean boolean43 = atmosphereConfig39.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig39.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList45 = atmosphereConfig39.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = atmosphereConfig48.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = atmosphereConfig48.properties();
        atmosphereConfig47.properties = strMap50;
        atmosphereConfig47.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig47.getshutdownHooks();
        atmosphereConfig39.setshutdownHooks(shutdownHookList54);
        atmosphereConfig32.shutdownHooks = shutdownHookList54;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig32.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig59 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework58);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig60 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList61 = atmosphereConfig60.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig60.properties();
        atmosphereConfig59.properties = strMap62;
        boolean boolean64 = atmosphereConfig59.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook65 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = atmosphereConfig59.shutdownHook(shutdownHook65);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig66.startupHook(startupHook67);
        java.lang.String str70 = atmosphereConfig66.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList72 = atmosphereConfig71.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook73 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig74 = atmosphereConfig71.shutdownHook(shutdownHook73);
        java.lang.String str77 = atmosphereConfig71.getInitParameter("hi!", "");
        boolean boolean78 = atmosphereConfig71.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList79 = atmosphereConfig71.startUpHook;
        java.lang.String str82 = atmosphereConfig71.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList83 = atmosphereConfig71.startUpHook;
        atmosphereConfig66.startUpHook = startupHookList83;
        atmosphereConfig32.setstartUpHook(startupHookList83);
        atmosphereConfig6.setstartUpHook(startupHookList83);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(atmosphereFramework31);
        org.junit.Assert.assertNotNull(startupHookList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(shutdownHookList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList45);
        org.junit.Assert.assertNotNull(startupHookList49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(startupHookList61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig66);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(shutdownHookList72);
        org.junit.Assert.assertNotNull(atmosphereConfig74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(startupHookList79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(startupHookList83);
    }

    @Test
    public void test05390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05390");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        org.slf4j.Logger logger14 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig10.setframework(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray17 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList18, startupHookArray17);
        atmosphereConfig10.startUpHook = startupHookList18;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig7.populate(atmosphereConfig10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig7.framework = atmosphereFramework22;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(startupHookArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
    }

    @Test
    public void test05391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05391");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig7.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig13.framework();
        int int18 = atmosphereConfig13.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray19 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20, shutdownHookArray19);
        atmosphereConfig13.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList20);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig13.properties();
        atmosphereConfig7.properties = strMap23;
        java.lang.Class<?> wildcardClass25 = atmosphereConfig7.getClass();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test05392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05392");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = atmosphereConfig10.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig18.setThrowExceptionOnCloned(true);
        java.lang.String str24 = atmosphereConfig18.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig10.shutdownHooks = shutdownHookList25;
        atmosphereConfig1.shutdownHooks = shutdownHookList25;
        int int30 = atmosphereConfig1.getInitParameter("", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        atmosphereConfig1.setframework(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework33);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig35.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig35.properties();
        atmosphereConfig34.properties = strMap37;
        atmosphereConfig34.throwExceptionOnCloned = true;
        boolean boolean41 = atmosphereConfig34.sessionTimeoutRemovalAllowed;
        boolean boolean42 = atmosphereConfig34.throwExceptionOnCloned;
        java.lang.String str44 = atmosphereConfig34.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook45 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig34.startupHook(startupHook45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig46.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework48);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList51 = atmosphereConfig50.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig50.properties();
        atmosphereConfig49.properties = strMap52;
        atmosphereConfig49.throwExceptionOnCloned = true;
        boolean boolean56 = atmosphereConfig49.sessionTimeoutRemovalAllowed;
        boolean boolean57 = atmosphereConfig49.throwExceptionOnCloned;
        java.lang.String str59 = atmosphereConfig49.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = atmosphereConfig49.startupHook(startupHook60);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = atmosphereConfig49.properties();
        atmosphereConfig46.properties = strMap62;
        java.lang.String str65 = atmosphereConfig46.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig66 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str69 = atmosphereConfig66.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = atmosphereConfig66.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig71.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = atmosphereConfig71.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig71.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig66.populate(atmosphereConfig71);
        atmosphereConfig71.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig71.supportSession = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList80 = atmosphereConfig71.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList82 = atmosphereConfig81.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook83 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig84 = atmosphereConfig81.shutdownHook(shutdownHook83);
        java.lang.String str87 = atmosphereConfig81.getInitParameter("hi!", "");
        boolean boolean88 = atmosphereConfig81.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook89 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig90 = atmosphereConfig81.shutdownHook(shutdownHook89);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray91 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList92 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList92, startupHookArray91);
        atmosphereConfig90.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList92);
        atmosphereConfig71.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList92);
        atmosphereConfig46.startUpHook = startupHookList92;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig97 = atmosphereConfig1.populate(atmosphereConfig46);
        java.util.Map<java.lang.String, java.lang.Object> strMap98 = atmosphereConfig46.getproperties();
        boolean boolean99 = atmosphereConfig46.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNull(atmosphereFramework47);
        org.junit.Assert.assertNotNull(startupHookList51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(atmosphereConfig61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNull(atmosphereFramework70);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(shutdownHookList80);
        org.junit.Assert.assertNotNull(shutdownHookList82);
        org.junit.Assert.assertNotNull(atmosphereConfig84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig90);
        org.junit.Assert.assertNotNull(startupHookArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig97);
        org.junit.Assert.assertNotNull(strMap98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test05393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05393");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        java.lang.String str3 = atmosphereConfig1.getInitParameter("");
        boolean boolean4 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig1.startupHook(startupHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig8.properties = strMap11;
        atmosphereConfig8.throwExceptionOnCloned = true;
        boolean boolean15 = atmosphereConfig8.sessionTimeoutRemovalAllowed;
        boolean boolean16 = atmosphereConfig8.throwExceptionOnCloned;
        java.lang.String str18 = atmosphereConfig8.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig8.startupHook(startupHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig20.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig24.properties();
        atmosphereConfig23.properties = strMap26;
        atmosphereConfig23.throwExceptionOnCloned = true;
        boolean boolean30 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        boolean boolean31 = atmosphereConfig23.throwExceptionOnCloned;
        java.lang.String str33 = atmosphereConfig23.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig23.startupHook(startupHook34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig23.properties();
        atmosphereConfig20.properties = strMap36;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig20.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig39.shutdownHooks;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList41 = atmosphereConfig39.getshutdownHooks();
        atmosphereConfig6.shutdownHooks = shutdownHookList41;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(shutdownHookList41);
    }

    @Test
    public void test05394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05394");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig1.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig11.getAtmosphereHandlerConfig();
        boolean boolean13 = atmosphereConfig11.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig11.framework;
        java.lang.String str16 = atmosphereConfig11.getInitParameter("");
        java.lang.String str18 = atmosphereConfig11.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig1.populate(atmosphereConfig11);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig19.framework = atmosphereFramework20;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig19.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster23 = atmosphereConfig19.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
    }

    @Test
    public void test05395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05395");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.getproperties();
        atmosphereConfig1.setSupportSession(false);
        atmosphereConfig1.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig1.framework();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory13 = atmosphereConfig1.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(atmosphereFramework12);
    }

    @Test
    public void test05396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05396");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = atmosphereConfig1.startupHook(startupHook4);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig5.shutdownHook(shutdownHook6);
        atmosphereConfig5.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig5.setframework(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig5.framework = atmosphereFramework12;
        atmosphereConfig5.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(atmosphereConfig5);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
    }

    @Test
    public void test05397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05397");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        boolean boolean17 = atmosphereConfig16.isSupportSession();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig19.shutdownHook(shutdownHook21);
        org.slf4j.Logger logger23 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig19.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig16.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig1.populate(atmosphereConfig16);
        boolean boolean34 = atmosphereConfig31.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig31.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig31.startUpHook;
        atmosphereConfig31.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList39 = atmosphereConfig31.shutdownHooks;
        atmosphereConfig31.destroy();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceFactory atmosphereResourceFactory41 = atmosphereConfig31.resourcesFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(shutdownHookList39);
    }

    @Test
    public void test05398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05398");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig1.properties;
        int int14 = atmosphereConfig1.getInitParameter("hi!", (int) '4');
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig1.startUpHook;
        boolean boolean16 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig1.getframework();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(atmosphereFramework17);
    }

    @Test
    public void test05399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05399");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!");
        atmosphereConfig0.setSupportSession(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.setSupportSession(true);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(startupHookList9);
    }

    @Test
    public void test05400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05400");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        boolean boolean18 = atmosphereConfig13.getInitParameter("hi!", true);
        atmosphereConfig13.initComplete();
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test05401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05401");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.setframework(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig1.startupHook(startupHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList15 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList15;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig1.shutdownHooks;
        java.lang.Class<?> wildcardClass18 = shutdownHookList17.getClass();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList15);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test05402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05402");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.initComplete();
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.lang.String str24 = atmosphereConfig0.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties();
        boolean boolean26 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test05403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05403");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        boolean boolean16 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        boolean boolean17 = atmosphereConfig6.isThrowExceptionOnCloned();
        boolean boolean18 = atmosphereConfig6.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory19 = atmosphereConfig6.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05404");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig6.shutdownHooks;
        atmosphereConfig5.setshutdownHooks(shutdownHookList7);
        boolean boolean9 = atmosphereConfig5.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig5.framework();
        org.slf4j.Logger logger11 = atmosphereConfig5.getlogger();
        atmosphereConfig5.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig14.startupHook(startupHook17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig18.shutdownHook(shutdownHook19);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.getshutdownHooks();
        atmosphereConfig5.setshutdownHooks(shutdownHookList22);
        atmosphereConfig0.setshutdownHooks(shutdownHookList22);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        atmosphereConfig27.setThrowExceptionOnCloned(false);
        int int32 = atmosphereConfig27.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig27.framework = atmosphereFramework33;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig27.startupHook(startupHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig0.populate(atmosphereConfig27);
        atmosphereConfig27.setSessionTimeoutRemovalAllowed(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList40 = atmosphereConfig27.atmosphereHandlerConfig;
        atmosphereConfig27.sessionTimeoutRemovalAllowed = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertNotNull(logger11);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList40);
    }

    @Test
    public void test05405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05405");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.getshutdownHooks();
        java.lang.String str18 = atmosphereConfig9.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.populate(atmosphereConfig21);
        boolean boolean24 = atmosphereConfig23.supportSession;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig23.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = atmosphereConfig28.properties();
        atmosphereConfig27.properties = strMap30;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig27.startupHook(startupHook32);
        boolean boolean34 = atmosphereConfig33.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig33.getstartUpHook();
        int int38 = atmosphereConfig33.getInitParameter("", (int) '4');
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig23.populate(atmosphereConfig33);
        atmosphereConfig39.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = atmosphereConfig39.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig39.properties;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNull(atmosphereFramework41);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test05406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05406");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        boolean boolean23 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig22.throwExceptionOnCloned;
        atmosphereConfig22.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig22.startupHook(startupHook27);
        atmosphereConfig22.setSupportSession(true);
        org.slf4j.Logger logger31 = atmosphereConfig22.getlogger();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig22.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig22.getframework();
        int int36 = atmosphereConfig22.getInitParameter("hi!", 10);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
    }

    @Test
    public void test05407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05407");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig9.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig9.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig9.framework;
        boolean boolean15 = atmosphereConfig9.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.shutdownHooks;
        atmosphereConfig9.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig9.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = atmosphereConfig9.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig21.supportSession = false;
        atmosphereConfig21.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework32);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList35 = atmosphereConfig34.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties();
        atmosphereConfig33.properties = strMap36;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig33.startupHook(startupHook38);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig42.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig42.properties();
        atmosphereConfig41.properties = strMap44;
        atmosphereConfig41.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig41.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework49 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework49);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList52 = atmosphereConfig51.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = atmosphereConfig51.properties();
        atmosphereConfig50.properties = strMap53;
        atmosphereConfig50.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList57 = atmosphereConfig50.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList59 = atmosphereConfig58.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = atmosphereConfig58.properties();
        atmosphereConfig58.setThrowExceptionOnCloned(true);
        java.lang.String str64 = atmosphereConfig58.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList65 = atmosphereConfig58.getshutdownHooks();
        atmosphereConfig50.shutdownHooks = shutdownHookList65;
        atmosphereConfig41.shutdownHooks = shutdownHookList65;
        atmosphereConfig33.setshutdownHooks(shutdownHookList65);
        atmosphereConfig30.setshutdownHooks(shutdownHookList65);
        atmosphereConfig21.setshutdownHooks(shutdownHookList65);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig21.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList73 = atmosphereConfig72.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook74 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig75 = atmosphereConfig72.shutdownHook(shutdownHook74);
        org.slf4j.Logger logger76 = atmosphereConfig72.getlogger();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig72.shutdownHooks;
        atmosphereConfig21.shutdownHooks = shutdownHookList77;
        atmosphereConfig9.setshutdownHooks(shutdownHookList77);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNull(atmosphereFramework19);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(startupHookList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(startupHookList52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList57);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(shutdownHookList65);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(shutdownHookList73);
        org.junit.Assert.assertNotNull(atmosphereConfig75);
        org.junit.Assert.assertNotNull(logger76);
        org.junit.Assert.assertNotNull(shutdownHookList77);
    }

    @Test
    public void test05408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05408");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.throwExceptionOnCloned = true;
        boolean boolean5 = atmosphereConfig0.supportSession;
        boolean boolean6 = atmosphereConfig0.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test05409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05409");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig1.isSupportSession();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig1.properties();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig18.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig18.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig18.getAtmosphereHandlerConfig();
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        java.lang.Class<?> wildcardClass27 = atmosphereConfig1.getClass();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test05410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05410");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        boolean boolean16 = atmosphereConfig6.sessionTimeoutRemovalAllowed;
        java.lang.String str19 = atmosphereConfig6.getInitParameter("hi!", "hi!");
        org.slf4j.Logger logger20 = atmosphereConfig6.getlogger();
        boolean boolean21 = atmosphereConfig6.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = atmosphereConfig6.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(logger20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test05411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05411");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.slf4j.Logger logger8 = atmosphereConfig7.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig7.shutdownHook(shutdownHook9);
        java.lang.String str12 = atmosphereConfig7.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig7.setframework(atmosphereFramework13);
        boolean boolean15 = atmosphereConfig7.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig7.framework();
        atmosphereConfig7.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig7.framework;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(logger8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNull(atmosphereFramework18);
    }

    @Test
    public void test05412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05412");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig11.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig11.getlogger();
        java.lang.String str18 = atmosphereConfig11.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        int int25 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig20.framework = atmosphereFramework26;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig20.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig20.startUpHook;
        atmosphereConfig11.setstartUpHook(startupHookList29);
        atmosphereConfig1.setstartUpHook(startupHookList29);
        atmosphereConfig1.destroy();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig1.startupHook(startupHook33);
        boolean boolean35 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig1.shutdownHook(shutdownHook36);
        atmosphereConfig1.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(atmosphereFramework28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
    }

    @Test
    public void test05413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05413");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        atmosphereConfig10.setThrowExceptionOnCloned(false);
        int int15 = atmosphereConfig10.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        atmosphereConfig10.framework = atmosphereFramework16;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig10.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig10.shutdownHook(shutdownHook19);
        boolean boolean21 = atmosphereConfig20.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig20.properties;
        atmosphereConfig1.setproperties(strMap22);
        atmosphereConfig1.supportSession = false;
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = atmosphereConfig1.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test05414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05414");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.lang.String str19 = atmosphereConfig0.getInitParameter("", "");
        atmosphereConfig0.supportSession = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test05415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05415");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.properties;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        atmosphereConfig12.setThrowExceptionOnCloned(false);
        int int17 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig12.framework = atmosphereFramework18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig12.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig12.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig22.framework;
        java.lang.String str27 = atmosphereConfig22.getInitParameter("");
        java.lang.String str29 = atmosphereConfig22.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig12.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        atmosphereConfig32.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        atmosphereConfig32.setstartUpHook(startupHookList40);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        atmosphereConfig43.properties = strMap46;
        atmosphereConfig32.setproperties(strMap46);
        boolean boolean51 = atmosphereConfig32.getInitParameter("", false);
        java.lang.String str54 = atmosphereConfig32.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig32.getproperties();
        atmosphereConfig30.setproperties(strMap56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig1.populate(atmosphereConfig30);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig1.properties();
        boolean boolean60 = atmosphereConfig1.throwExceptionOnCloned;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = atmosphereConfig1.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test05416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05416");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        int int23 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig18.framework = atmosphereFramework24;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig18.properties();
        atmosphereConfig14.setproperties(strMap26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig28.shutdownHook(shutdownHook30);
        java.lang.String str34 = atmosphereConfig28.getInitParameter("hi!", "");
        boolean boolean35 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig28.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig37.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig37.atmosphereHandlerConfig;
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework41);
        atmosphereConfig42.setThrowExceptionOnCloned(false);
        atmosphereConfig42.setSupportSession(false);
        boolean boolean47 = atmosphereConfig42.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig14.startUpHook = startupHookList48;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig52.properties();
        atmosphereConfig51.properties = strMap54;
        atmosphereConfig51.supportSession = false;
        atmosphereConfig51.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig51.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig14.populate(atmosphereConfig51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig63.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig63.framework();
        atmosphereConfig63.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework67);
        atmosphereConfig68.setThrowExceptionOnCloned(false);
        int int73 = atmosphereConfig68.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = null;
        atmosphereConfig68.framework = atmosphereFramework74;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = atmosphereConfig68.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig68.shutdownHooks;
        atmosphereConfig63.shutdownHooks = shutdownHookList77;
        atmosphereConfig63.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList82 = atmosphereConfig81.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = atmosphereConfig81.framework();
        int int86 = atmosphereConfig81.getInitParameter("hi!", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList87 = atmosphereConfig81.startUpHook;
        atmosphereConfig63.setstartUpHook(startupHookList87);
        atmosphereConfig51.startUpHook = startupHookList87;
        atmosphereConfig0.startUpHook = startupHookList87;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework91 = null;
        atmosphereConfig0.framework = atmosphereFramework91;
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(atmosphereFramework76);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertNotNull(startupHookList82);
        org.junit.Assert.assertNull(atmosphereFramework83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(startupHookList87);
    }

    @Test
    public void test05417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05417");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.getshutdownHooks();
        java.lang.String str18 = atmosphereConfig9.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig9.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = atmosphereConfig9.startupHook(startupHook20);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = atmosphereConfig21.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig0.populate(atmosphereConfig21);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig0.shutdownHooks;
        boolean boolean25 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        boolean boolean26 = atmosphereConfig0.supportSession;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext27 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(atmosphereConfig21);
        org.junit.Assert.assertNull(atmosphereFramework22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test05418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05418");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        atmosphereConfig7.setproperties(strMap10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig7.getproperties();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test05419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05419");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig8.properties = strMap11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig14.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig14.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig6.populate(atmosphereConfig14);
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory20 = atmosphereConfig6.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
    }

    @Test
    public void test05420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05420");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        boolean boolean23 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig16.throwExceptionOnCloned;
        java.lang.String str26 = atmosphereConfig16.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig16.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig16.properties();
        atmosphereConfig13.properties = strMap29;
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        boolean boolean35 = atmosphereConfig13.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework36);
        atmosphereConfig37.setThrowExceptionOnCloned(false);
        atmosphereConfig37.setSupportSession(false);
        boolean boolean42 = atmosphereConfig37.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig37.getstartUpHook();
        atmosphereConfig13.setstartUpHook(startupHookList43);
        boolean boolean47 = atmosphereConfig13.getInitParameter("hi!", true);
        int int50 = atmosphereConfig13.getInitParameter("", 52);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
    }

    @Test
    public void test05421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05421");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig8.setThrowExceptionOnCloned(true);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig17.setThrowExceptionOnCloned(true);
        java.lang.String str23 = atmosphereConfig17.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig17.getshutdownHooks();
        java.lang.String str26 = atmosphereConfig17.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig17.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig17.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig29.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig8.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
    }

    @Test
    public void test05422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05422");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.setSupportSession(false);
        boolean boolean10 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.setframework(atmosphereFramework11);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05423");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        boolean boolean6 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean7 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig1.startupHook(startupHook8);
        boolean boolean10 = atmosphereConfig9.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig9.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig9.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        atmosphereConfig14.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        int int25 = atmosphereConfig20.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = null;
        atmosphereConfig20.framework = atmosphereFramework26;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig20.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig20.getframework();
        boolean boolean30 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig20.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig20.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig14.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList34 = atmosphereConfig14.getAtmosphereHandlerConfig();
        atmosphereConfig9.atmosphereHandlerConfig = atmosphereHandlerConfigList34;
        atmosphereConfig9.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = atmosphereConfig9.getframework();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNull(atmosphereFramework32);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList34);
        org.junit.Assert.assertNull(atmosphereFramework38);
    }

    @Test
    public void test05424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05424");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList17 = null;
        atmosphereConfig10.atmosphereHandlerConfig = atmosphereHandlerConfigList17;
        atmosphereConfig10.supportSession = false;
        java.lang.String str22 = atmosphereConfig10.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig8.populate(atmosphereConfig10);
        boolean boolean24 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig25.shutdownHook(shutdownHook27);
        org.slf4j.Logger logger29 = atmosphereConfig25.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig25.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig32.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig32.shutdownHook(shutdownHook34);
        java.lang.String str38 = atmosphereConfig32.getInitParameter("hi!", "");
        boolean boolean39 = atmosphereConfig32.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig32.shutdownHook(shutdownHook40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig41.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework43);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList46 = atmosphereConfig45.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig45.properties();
        atmosphereConfig44.properties = strMap47;
        boolean boolean49 = atmosphereConfig44.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig44.shutdownHook(shutdownHook50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = atmosphereConfig41.populate(atmosphereConfig44);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework53);
        atmosphereConfig54.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework57);
        atmosphereConfig58.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework61);
        atmosphereConfig62.setThrowExceptionOnCloned(false);
        int int67 = atmosphereConfig62.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework68 = null;
        atmosphereConfig62.framework = atmosphereFramework68;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = atmosphereConfig62.properties();
        atmosphereConfig58.setproperties(strMap70);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig58.startUpHook;
        atmosphereConfig54.setstartUpHook(startupHookList72);
        atmosphereConfig41.startUpHook = startupHookList72;
        atmosphereConfig25.setstartUpHook(startupHookList72);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig76 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig76.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook78 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig79 = atmosphereConfig76.shutdownHook(shutdownHook78);
        org.slf4j.Logger logger80 = atmosphereConfig76.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework81 = null;
        atmosphereConfig76.setframework(atmosphereFramework81);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray83 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList84 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList84, startupHookArray83);
        atmosphereConfig76.startUpHook = startupHookList84;
        atmosphereConfig76.destroy();
        boolean boolean88 = atmosphereConfig76.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework89 = atmosphereConfig76.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook90 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig91 = atmosphereConfig76.shutdownHook(shutdownHook90);
        atmosphereConfig91.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig93 = atmosphereConfig25.populate(atmosphereConfig91);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig94 = atmosphereConfig23.populate(atmosphereConfig91);
        atmosphereConfig94.setSupportSession(true);
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(logger29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(startupHookList46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereConfig52);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(startupHookList72);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertNotNull(atmosphereConfig79);
        org.junit.Assert.assertNotNull(logger80);
        org.junit.Assert.assertNotNull(startupHookArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(atmosphereFramework89);
        org.junit.Assert.assertNotNull(atmosphereConfig91);
        org.junit.Assert.assertNotNull(atmosphereConfig93);
        org.junit.Assert.assertNotNull(atmosphereConfig94);
    }

    @Test
    public void test05425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05425");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.startupHook(startupHook7);
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList11 = atmosphereConfig10.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig10.shutdownHook(shutdownHook12);
        org.slf4j.Logger logger14 = atmosphereConfig10.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.shutdownHook(shutdownHook15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig17.shutdownHook(shutdownHook19);
        java.lang.String str23 = atmosphereConfig17.getInitParameter("hi!", "");
        boolean boolean24 = atmosphereConfig17.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig17.shutdownHook(shutdownHook25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig26.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.properties();
        atmosphereConfig29.properties = strMap32;
        boolean boolean34 = atmosphereConfig29.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook35 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig36 = atmosphereConfig29.shutdownHook(shutdownHook35);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig26.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework38);
        atmosphereConfig39.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        atmosphereConfig43.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework46);
        atmosphereConfig47.setThrowExceptionOnCloned(false);
        int int52 = atmosphereConfig47.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = null;
        atmosphereConfig47.framework = atmosphereFramework53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = atmosphereConfig47.properties();
        atmosphereConfig43.setproperties(strMap55);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList57 = atmosphereConfig43.startUpHook;
        atmosphereConfig39.setstartUpHook(startupHookList57);
        atmosphereConfig26.startUpHook = startupHookList57;
        atmosphereConfig10.setstartUpHook(startupHookList57);
        atmosphereConfig10.supportSession = false;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework63 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig64 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework63);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig65 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList66 = atmosphereConfig65.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = atmosphereConfig65.properties();
        atmosphereConfig64.properties = strMap67;
        atmosphereConfig64.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework71 = atmosphereConfig64.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework72 = atmosphereConfig64.getframework();
        atmosphereConfig64.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig64.atmosphereHandlerConfig;
        org.slf4j.Logger logger75 = atmosphereConfig64.getlogger();
        boolean boolean76 = atmosphereConfig64.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig64.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig78 = atmosphereConfig10.populate(atmosphereConfig64);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig64.getproperties();
        atmosphereConfig0.properties = strMap79;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(logger14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig36);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(startupHookList57);
        org.junit.Assert.assertNotNull(startupHookList66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(atmosphereFramework71);
        org.junit.Assert.assertNull(atmosphereFramework72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertNotNull(logger75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(atmosphereConfig78);
        org.junit.Assert.assertNotNull(strMap79);
    }

    @Test
    public void test05426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05426");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = atmosphereConfig1.framework;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList12 = atmosphereConfig1.atmosphereHandlerConfig;
        boolean boolean13 = atmosphereConfig1.isSupportSession();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig1.getproperties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig1.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig1.framework = atmosphereFramework18;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext20 = atmosphereConfig1.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework11);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
    }

    @Test
    public void test05427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05427");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig9.properties = strMap12;
        atmosphereConfig9.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList16 = atmosphereConfig9.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList16;
        org.slf4j.Logger logger18 = atmosphereConfig0.getlogger();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean20 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.shutdownHook(shutdownHook21);
        boolean boolean23 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList16);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test05428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05428");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean8 = atmosphereConfig1.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.getframework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        atmosphereConfig1.setframework(atmosphereFramework10);
        boolean boolean12 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        boolean boolean13 = atmosphereConfig1.isSupportSession();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig1.framework;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
    }

    @Test
    public void test05429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05429");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig1.isSupportSession();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig1.properties();
        atmosphereConfig1.setThrowExceptionOnCloned(true);
        boolean boolean18 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test05430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05430");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        org.slf4j.Logger logger6 = atmosphereConfig0.getlogger();
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig9.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig13.shutdownHook(shutdownHook14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig15.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig15.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList17);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        boolean boolean21 = atmosphereConfig20.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig20.shutdownHooks;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        atmosphereConfig20.setframework(atmosphereFramework23);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig25.shutdownHook(shutdownHook27);
        java.lang.String str31 = atmosphereConfig25.getInitParameter("hi!", "");
        boolean boolean32 = atmosphereConfig25.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig25.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray35 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36, startupHookArray35);
        atmosphereConfig34.setstartUpHook((java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList36);
        atmosphereConfig20.startUpHook = startupHookList36;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig20.startupHook(startupHook40);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList43 = atmosphereConfig42.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = atmosphereConfig42.properties();
        atmosphereConfig42.setThrowExceptionOnCloned(true);
        java.lang.String str48 = atmosphereConfig42.getInitParameter("");
        atmosphereConfig42.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList50 = atmosphereConfig42.atmosphereHandlerConfig;
        atmosphereConfig42.initComplete();
        atmosphereConfig42.setThrowExceptionOnCloned(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig41.populate(atmosphereConfig42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework55 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig56 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework55);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList58 = atmosphereConfig57.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = atmosphereConfig57.properties();
        atmosphereConfig56.properties = strMap59;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook61 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig56.startupHook(startupHook61);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList63 = atmosphereConfig62.getAtmosphereHandlerConfig();
        atmosphereConfig41.atmosphereHandlerConfig = atmosphereHandlerConfigList63;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList63;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList66 = atmosphereConfig0.shutdownHooks;
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext67 = atmosphereConfig0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList50);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(startupHookList58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList63);
        org.junit.Assert.assertNotNull(shutdownHookList66);
    }

    @Test
    public void test05431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05431");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.slf4j.Logger logger6 = atmosphereConfig1.getlogger();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        atmosphereConfig10.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig10.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig10.atmosphereHandlerConfig;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList20;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory24 = atmosphereConfig1.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(logger6);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
    }

    @Test
    public void test05432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05432");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        atmosphereConfig0.initComplete();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        atmosphereConfig11.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig11.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig11.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList19;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList22 = atmosphereConfig21.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig21.shutdownHook(shutdownHook23);
        java.lang.String str27 = atmosphereConfig21.getInitParameter("hi!", "");
        boolean boolean28 = atmosphereConfig21.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig21.shutdownHook(shutdownHook29);
        atmosphereConfig30.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = atmosphereConfig0.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig0.framework = atmosphereFramework34;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig0.startUpHook;
        org.slf4j.Logger logger37 = atmosphereConfig0.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<java.lang.String> strEnumeration38 = atmosphereConfig0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(shutdownHookList22);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig33);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(logger37);
    }

    @Test
    public void test05433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05433");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.shutdownHook(shutdownHook11);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList13 = atmosphereConfig10.getAtmosphereHandlerConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig14 = atmosphereConfig10.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList13);
    }

    @Test
    public void test05434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05434");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig7.getstartUpHook();
        atmosphereConfig7.supportSession = false;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = atmosphereConfig7.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(startupHookList9);
    }

    @Test
    public void test05435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05435");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList5 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig1.framework = atmosphereFramework6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.properties();
        boolean boolean9 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig1.getshutdownHooks();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(shutdownHookList5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
    }

    @Test
    public void test05436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05436");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig8.setThrowExceptionOnCloned(true);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig17.setThrowExceptionOnCloned(true);
        java.lang.String str23 = atmosphereConfig17.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig17.getshutdownHooks();
        java.lang.String str26 = atmosphereConfig17.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig17.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig17.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig29.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig8.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        atmosphereConfig32.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList38 = atmosphereConfig37.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = atmosphereConfig37.properties();
        boolean boolean42 = atmosphereConfig37.getInitParameter("hi!", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList43 = atmosphereConfig37.shutdownHooks;
        atmosphereConfig32.setshutdownHooks(shutdownHookList43);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList45 = atmosphereConfig32.getshutdownHooks();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory46 = atmosphereConfig32.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(startupHookList38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(shutdownHookList43);
        org.junit.Assert.assertNotNull(shutdownHookList45);
    }

    @Test
    public void test05437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05437");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean20 = atmosphereConfig1.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig1.setproperties(strMap23);
        boolean boolean27 = atmosphereConfig1.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig1.getshutdownHooks();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig1.getframework();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNull(atmosphereFramework32);
    }

    @Test
    public void test05438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05438");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        boolean boolean9 = atmosphereConfig0.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
    }

    @Test
    public void test05439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05439");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        boolean boolean6 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig1.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig1.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig9.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig9.shutdownHook(shutdownHook11);
        org.slf4j.Logger logger13 = atmosphereConfig9.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = null;
        atmosphereConfig9.setframework(atmosphereFramework14);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray16 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList17, startupHookArray16);
        atmosphereConfig9.startUpHook = startupHookList17;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig9.framework = atmosphereFramework20;
        boolean boolean22 = atmosphereConfig9.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig1.populate(atmosphereConfig9);
        boolean boolean26 = atmosphereConfig23.getInitParameter("", true);
        atmosphereConfig23.supportSession = false;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory29 = atmosphereConfig23.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertNotNull(startupHookArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test05440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05440");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig0.getproperties();
        boolean boolean5 = atmosphereConfig0.supportSession;
        int int8 = atmosphereConfig0.getInitParameter("hi!", (-1));
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        atmosphereConfig10.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        atmosphereConfig10.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        atmosphereConfig10.setproperties(strMap24);
        boolean boolean29 = atmosphereConfig10.getInitParameter("", false);
        java.lang.String str32 = atmosphereConfig10.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig10.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList36 = atmosphereConfig35.shutdownHooks;
        atmosphereConfig35.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        atmosphereConfig40.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework43);
        atmosphereConfig44.setThrowExceptionOnCloned(false);
        int int49 = atmosphereConfig44.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        atmosphereConfig44.framework = atmosphereFramework50;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig44.properties();
        atmosphereConfig40.setproperties(strMap52);
        atmosphereConfig35.properties = strMap52;
        atmosphereConfig10.setproperties(strMap52);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig10.shutdownHooks;
        atmosphereConfig0.shutdownHooks = shutdownHookList56;
        org.slf4j.Logger logger58 = atmosphereConfig0.getlogger();
        int int61 = atmosphereConfig0.getInitParameter("hi!", (int) (short) 0);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList64 = atmosphereConfig0.atmosphereHandlerConfig;
        boolean boolean65 = atmosphereConfig0.isSupportSession();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(shutdownHookList36);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(logger58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test05441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05441");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] shutdownHookArray6 = new org.atmosphere.cpr.AtmosphereConfig.ShutdownHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7, shutdownHookArray6);
        atmosphereConfig0.setshutdownHooks((java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook>) shutdownHookList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig11.shutdownHook(shutdownHook13);
        org.slf4j.Logger logger15 = atmosphereConfig11.getlogger();
        java.lang.String str17 = atmosphereConfig11.getInitParameter("hi!");
        atmosphereConfig11.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig22.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig22.properties();
        atmosphereConfig21.properties = strMap24;
        boolean boolean26 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        boolean boolean27 = atmosphereConfig21.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig28.shutdownHook(shutdownHook30);
        org.slf4j.Logger logger32 = atmosphereConfig28.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig28.shutdownHook(shutdownHook33);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework35 = null;
        atmosphereConfig28.framework = atmosphereFramework35;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig21.populate(atmosphereConfig28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework38);
        atmosphereConfig39.setThrowExceptionOnCloned(false);
        int int44 = atmosphereConfig39.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework45 = null;
        atmosphereConfig39.framework = atmosphereFramework45;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig39.properties();
        boolean boolean48 = atmosphereConfig39.isSupportSession();
        boolean boolean49 = atmosphereConfig39.sessionTimeoutRemovalAllowed;
        atmosphereConfig39.initComplete();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList51 = atmosphereConfig39.atmosphereHandlerConfig;
        atmosphereConfig28.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        atmosphereConfig11.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList51;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(shutdownHookArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertNotNull(logger15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList51);
    }

    @Test
    public void test05442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05442");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        boolean boolean23 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig16.throwExceptionOnCloned;
        java.lang.String str26 = atmosphereConfig16.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig16.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig16.properties();
        atmosphereConfig13.properties = strMap29;
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig13.setSupportSession(false);
        java.lang.String str36 = atmosphereConfig13.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig37.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = atmosphereConfig37.shutdownHook(shutdownHook39);
        org.slf4j.Logger logger41 = atmosphereConfig37.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig37.shutdownHook(shutdownHook42);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList47 = atmosphereConfig46.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = atmosphereConfig46.properties();
        atmosphereConfig45.properties = strMap48;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig45.startupHook(startupHook50);
        boolean boolean52 = atmosphereConfig51.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig51.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig54 = atmosphereConfig43.populate(atmosphereConfig51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList56 = atmosphereConfig55.getAtmosphereHandlerConfig();
        boolean boolean57 = atmosphereConfig55.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework58 = atmosphereConfig55.framework;
        java.lang.String str60 = atmosphereConfig55.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = atmosphereConfig55.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig62.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig62.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = atmosphereConfig62.properties;
        atmosphereConfig55.setproperties(strMap65);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = atmosphereConfig55.shutdownHook(shutdownHook67);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig69 = atmosphereConfig51.populate(atmosphereConfig55);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = null;
        atmosphereConfig69.setframework(atmosphereFramework70);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList72 = atmosphereConfig69.getstartUpHook();
        atmosphereConfig13.setstartUpHook(startupHookList72);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster74 = atmosphereConfig13.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(atmosphereConfig40);
        org.junit.Assert.assertNotNull(logger41);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(startupHookList47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(atmosphereConfig54);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(atmosphereFramework58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(atmosphereConfig68);
        org.junit.Assert.assertNotNull(atmosphereConfig69);
        org.junit.Assert.assertNotNull(startupHookList72);
    }

    @Test
    public void test05443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05443");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig9.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig9.setThrowExceptionOnCloned(true);
        java.lang.String str15 = atmosphereConfig9.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig9.getshutdownHooks();
        atmosphereConfig1.shutdownHooks = shutdownHookList16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig1.startupHook(startupHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig1.properties;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap21 = atmosphereConfig1.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test05444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05444");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        int int10 = atmosphereConfig1.getInitParameter("hi!", (int) (byte) -1);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig1.shutdownHook(shutdownHook11);
        boolean boolean15 = atmosphereConfig12.getInitParameter("hi!", false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig12.shutdownHook(shutdownHook16);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig12.shutdownHook(shutdownHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig19.properties();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider21 = atmosphereConfig19.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test05445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05445");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        boolean boolean10 = atmosphereConfig1.isThrowExceptionOnCloned();
        boolean boolean11 = atmosphereConfig1.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = atmosphereConfig1.getframework();
        atmosphereConfig1.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig1.startupHook(startupHook15);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig19.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = atmosphereConfig19.properties();
        atmosphereConfig18.properties = strMap21;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig18.startupHook(startupHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig24.getAtmosphereHandlerConfig();
        java.lang.String str28 = atmosphereConfig24.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig29.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig29.shutdownHook(shutdownHook31);
        org.slf4j.Logger logger33 = atmosphereConfig29.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework34 = null;
        atmosphereConfig29.setframework(atmosphereFramework34);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray36 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList37, startupHookArray36);
        atmosphereConfig29.startUpHook = startupHookList37;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig29.getstartUpHook();
        atmosphereConfig29.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList43 = atmosphereConfig29.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig29.shutdownHook(shutdownHook44);
        atmosphereConfig29.supportSession = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig48 = atmosphereConfig24.populate(atmosphereConfig29);
        atmosphereConfig48.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig48.framework = atmosphereFramework51;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList53 = atmosphereConfig48.shutdownHooks;
        atmosphereConfig1.setshutdownHooks(shutdownHookList53);
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(atmosphereFramework12);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(shutdownHookList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(logger33);
        org.junit.Assert.assertNotNull(startupHookArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(startupHookList43);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig48);
        org.junit.Assert.assertNotNull(shutdownHookList53);
    }

    @Test
    public void test05446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05446");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.getframework();
        java.lang.String str11 = atmosphereConfig0.getInitParameter("", "hi!");
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test05447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05447");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        boolean boolean15 = atmosphereConfig13.isSessionTimeoutRemovalAllowed();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig13.getstartUpHook();
        boolean boolean17 = atmosphereConfig13.throwExceptionOnCloned;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test05448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05448");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean8 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList10 = atmosphereConfig9.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig9.shutdownHook(shutdownHook11);
        org.slf4j.Logger logger13 = atmosphereConfig9.getlogger();
        java.lang.String str16 = atmosphereConfig9.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        int int23 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig18.framework = atmosphereFramework24;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig18.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = atmosphereConfig18.startUpHook;
        atmosphereConfig9.setstartUpHook(startupHookList27);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig9.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList30 = atmosphereConfig9.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = atmosphereConfig0.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(shutdownHookList10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(startupHookList27);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(shutdownHookList30);
    }

    @Test
    public void test05449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05449");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList15 = atmosphereConfig14.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig14.shutdownHook(shutdownHook16);
        org.slf4j.Logger logger18 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        atmosphereConfig14.setframework(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray21 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList22, startupHookArray21);
        atmosphereConfig14.startUpHook = startupHookList22;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig14.framework = atmosphereFramework25;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        org.slf4j.Logger logger31 = atmosphereConfig27.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList33 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = atmosphereConfig32.properties();
        atmosphereConfig27.properties = strMap34;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig27.properties();
        atmosphereConfig14.setproperties(strMap36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig14.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        boolean boolean45 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook46 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig40.shutdownHook(shutdownHook46);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList48 = atmosphereConfig40.getshutdownHooks();
        atmosphereConfig14.shutdownHooks = shutdownHookList48;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig14);
        atmosphereConfig50.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig53 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList54 = atmosphereConfig53.startUpHook;
        atmosphereConfig53.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = atmosphereConfig53.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig50.populate(atmosphereConfig53);
        org.slf4j.Logger logger59 = atmosphereConfig58.getlogger();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory60 = atmosphereConfig58.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
        org.junit.Assert.assertNotNull(shutdownHookList15);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(logger18);
        org.junit.Assert.assertNotNull(startupHookArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(logger31);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
        org.junit.Assert.assertNotNull(shutdownHookList48);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
        org.junit.Assert.assertNotNull(startupHookList54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(logger59);
    }

    @Test
    public void test05450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05450");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig1.getframework();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.lang.String str13 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig14.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig14.getproperties();
        boolean boolean19 = atmosphereConfig14.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig20.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig20.shutdownHook(shutdownHook22);
        org.slf4j.Logger logger24 = atmosphereConfig20.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig20.setframework(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray27 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList28, startupHookArray27);
        atmosphereConfig20.startUpHook = startupHookList28;
        atmosphereConfig20.destroy();
        boolean boolean32 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = atmosphereConfig20.framework;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig20.shutdownHook(shutdownHook34);
        atmosphereConfig35.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = atmosphereConfig35.framework;
        atmosphereConfig35.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig40.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig40.framework();
        atmosphereConfig40.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework44);
        atmosphereConfig45.setThrowExceptionOnCloned(false);
        int int50 = atmosphereConfig45.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework51 = null;
        atmosphereConfig45.framework = atmosphereFramework51;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework53 = atmosphereConfig45.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList54 = atmosphereConfig45.shutdownHooks;
        atmosphereConfig40.shutdownHooks = shutdownHookList54;
        atmosphereConfig35.shutdownHooks = shutdownHookList54;
        atmosphereConfig14.setshutdownHooks(shutdownHookList54);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig1.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework59 = null;
        atmosphereConfig14.setframework(atmosphereFramework59);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework61 = atmosphereConfig14.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig14.setframework(atmosphereFramework62);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework64 = null;
        atmosphereConfig14.setframework(atmosphereFramework64);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(logger24);
        org.junit.Assert.assertNotNull(startupHookArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(atmosphereFramework33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNull(atmosphereFramework37);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(atmosphereFramework53);
        org.junit.Assert.assertNotNull(shutdownHookList54);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNull(atmosphereFramework61);
    }

    @Test
    public void test05451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05451");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig1.atmosphereHandlerConfig;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList10 = atmosphereConfig1.atmosphereHandlerConfig;
        boolean boolean11 = atmosphereConfig1.supportSession;
        boolean boolean12 = atmosphereConfig1.throwExceptionOnCloned;
        boolean boolean13 = atmosphereConfig1.throwExceptionOnCloned;
        atmosphereConfig1.supportSession = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig1.getproperties();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test05452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05452");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig1.setproperties(strMap15);
        boolean boolean20 = atmosphereConfig1.getInitParameter("", false);
        java.lang.String str23 = atmosphereConfig1.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig1.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework25);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList28 = atmosphereConfig27.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig27.properties();
        atmosphereConfig26.properties = strMap29;
        atmosphereConfig26.throwExceptionOnCloned = true;
        boolean boolean33 = atmosphereConfig26.sessionTimeoutRemovalAllowed;
        boolean boolean34 = atmosphereConfig26.throwExceptionOnCloned;
        java.lang.String str36 = atmosphereConfig26.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig1.populate(atmosphereConfig26);
        atmosphereConfig1.destroy();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig39.shutdownHooks;
        atmosphereConfig39.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework43 = atmosphereConfig39.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework44 = atmosphereConfig39.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig39.properties();
        atmosphereConfig1.setproperties(strMap45);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = atmosphereConfig1.framework;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(startupHookList28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNull(atmosphereFramework43);
        org.junit.Assert.assertNull(atmosphereFramework44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(atmosphereFramework47);
    }

    @Test
    public void test05453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05453");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.supportSession;
        boolean boolean7 = atmosphereConfig0.supportSession;
        atmosphereConfig0.supportSession = true;
        java.lang.String str11 = atmosphereConfig0.getInitParameter("hi!");
        boolean boolean14 = atmosphereConfig0.getInitParameter("", true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList17 = atmosphereConfig16.shutdownHooks;
        atmosphereConfig15.setshutdownHooks(shutdownHookList17);
        boolean boolean19 = atmosphereConfig15.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig15.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig15.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook22 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = atmosphereConfig15.shutdownHook(shutdownHook22);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig0.populate(atmosphereConfig15);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig0.getshutdownHooks();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(shutdownHookList17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertNotNull(atmosphereConfig23);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(shutdownHookList27);
    }

    @Test
    public void test05454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05454");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        boolean boolean4 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.startupHook(startupHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList9 = atmosphereConfig8.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig8.shutdownHook(shutdownHook10);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("hi!", "");
        boolean boolean15 = atmosphereConfig8.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig8.shutdownHook(shutdownHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig17.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig21 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig21.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig21.properties();
        atmosphereConfig20.properties = strMap23;
        boolean boolean25 = atmosphereConfig20.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook26 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig20.shutdownHook(shutdownHook26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig17.populate(atmosphereConfig20);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig28.getstartUpHook();
        atmosphereConfig7.startUpHook = startupHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig7.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework32 = atmosphereConfig7.framework();
        atmosphereConfig7.destroy();
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(shutdownHookList9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(atmosphereFramework32);
    }

    @Test
    public void test05455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05455");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig0.properties;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test05456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05456");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig1.properties();
        boolean boolean10 = atmosphereConfig1.isSupportSession();
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        atmosphereConfig1.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig15.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig15.properties();
        atmosphereConfig14.properties = strMap17;
        org.slf4j.Logger logger19 = atmosphereConfig14.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig14.framework = atmosphereFramework20;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList22 = atmosphereConfig14.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        atmosphereConfig24.setSupportSession(false);
        boolean boolean29 = atmosphereConfig24.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig24.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList31 = atmosphereConfig24.shutdownHooks;
        atmosphereConfig14.shutdownHooks = shutdownHookList31;
        atmosphereConfig1.shutdownHooks = shutdownHookList31;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = atmosphereConfig1.framework();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(logger19);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(shutdownHookList31);
        org.junit.Assert.assertNull(atmosphereFramework36);
    }

    @Test
    public void test05457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05457");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        atmosphereConfig0.supportSession = true;
        org.slf4j.Logger logger7 = atmosphereConfig0.getlogger();
        java.lang.String str9 = atmosphereConfig0.getInitParameter("");
        boolean boolean10 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig0.framework = atmosphereFramework11;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig0.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig14.framework();
        int int19 = atmosphereConfig14.getInitParameter("hi!", 0);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig14.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig14.getshutdownHooks();
        boolean boolean24 = atmosphereConfig14.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        java.lang.String str31 = atmosphereConfig25.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig25.getshutdownHooks();
        java.lang.String str34 = atmosphereConfig25.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig25.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig25.startupHook(startupHook36);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList39 = atmosphereConfig38.startUpHook;
        atmosphereConfig38.sessionTimeoutRemovalAllowed = false;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = atmosphereConfig38.properties();
        atmosphereConfig25.setproperties(strMap42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str47 = atmosphereConfig44.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework48 = atmosphereConfig44.framework;
        atmosphereConfig44.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig44.shutdownHook(shutdownHook50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = atmosphereConfig51.properties;
        atmosphereConfig25.properties = strMap52;
        atmosphereConfig14.properties = strMap52;
        atmosphereConfig0.setproperties(strMap52);
        boolean boolean56 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(logger7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(startupHookList39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(atmosphereFramework48);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test05458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05458");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        boolean boolean4 = atmosphereConfig1.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig1.startupHook(startupHook5);
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
    }

    @Test
    public void test05459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05459");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.throwExceptionOnCloned = true;
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig0.populate(atmosphereConfig6);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework16);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig18.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig18.properties();
        atmosphereConfig17.properties = strMap20;
        atmosphereConfig17.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList24 = atmosphereConfig17.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig25.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        atmosphereConfig25.setThrowExceptionOnCloned(true);
        java.lang.String str31 = atmosphereConfig25.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList32 = atmosphereConfig25.getshutdownHooks();
        atmosphereConfig17.shutdownHooks = shutdownHookList32;
        atmosphereConfig6.shutdownHooks = shutdownHookList32;
        boolean boolean35 = atmosphereConfig6.isSupportSession();
        atmosphereConfig6.setThrowExceptionOnCloned(true);
        atmosphereConfig6.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook40 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = atmosphereConfig6.shutdownHook(shutdownHook40);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory42 = atmosphereConfig6.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(shutdownHookList32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig41);
    }

    @Test
    public void test05460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05460");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.isSupportSession();
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig10.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig9.properties = strMap12;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig9.startupHook(startupHook14);
        boolean boolean16 = atmosphereConfig15.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig0.populate(atmosphereConfig15);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig15.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework19);
        atmosphereConfig20.setThrowExceptionOnCloned(false);
        boolean boolean23 = atmosphereConfig20.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig20.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig20.framework = atmosphereFramework25;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig20.properties();
        atmosphereConfig15.setproperties(strMap27);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test05461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05461");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig1.properties;
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        atmosphereConfig12.setThrowExceptionOnCloned(false);
        int int17 = atmosphereConfig12.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = null;
        atmosphereConfig12.framework = atmosphereFramework18;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig12.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig12.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        boolean boolean24 = atmosphereConfig22.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig22.framework;
        java.lang.String str27 = atmosphereConfig22.getInitParameter("");
        java.lang.String str29 = atmosphereConfig22.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig12.populate(atmosphereConfig22);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        atmosphereConfig32.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        atmosphereConfig32.setstartUpHook(startupHookList40);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework42);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList45 = atmosphereConfig44.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = atmosphereConfig44.properties();
        atmosphereConfig43.properties = strMap46;
        atmosphereConfig32.setproperties(strMap46);
        boolean boolean51 = atmosphereConfig32.getInitParameter("", false);
        java.lang.String str54 = atmosphereConfig32.getInitParameter("hi!", "hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList55 = atmosphereConfig32.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = atmosphereConfig32.getproperties();
        atmosphereConfig30.setproperties(strMap56);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig1.populate(atmosphereConfig30);
        java.lang.String str61 = atmosphereConfig1.getInitParameter("", "hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework62 = null;
        atmosphereConfig1.setframework(atmosphereFramework62);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.util.UUIDProvider uUIDProvider64 = atmosphereConfig1.uuidProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(startupHookList45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
    }

    @Test
    public void test05462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05462");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!", "hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig1.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig1.setframework(atmosphereFramework13);
        boolean boolean15 = atmosphereConfig1.throwExceptionOnCloned;
        atmosphereConfig1.initComplete();
        atmosphereConfig1.supportSession = true;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05463");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList11 = atmosphereConfig0.getstartUpHook();
        atmosphereConfig0.sessionTimeoutRemovalAllowed = true;
        atmosphereConfig0.destroy();
        boolean boolean15 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05464");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig1.shutdownHook(shutdownHook10);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        atmosphereConfig11.framework = atmosphereFramework12;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig11.getstartUpHook();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertNotNull(startupHookList14);
    }

    @Test
    public void test05465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05465");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework2 = atmosphereConfig0.framework();
        int int5 = atmosphereConfig0.getInitParameter("hi!", 0);
        boolean boolean6 = atmosphereConfig0.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        atmosphereConfig8.setThrowExceptionOnCloned(false);
        atmosphereConfig8.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        int int19 = atmosphereConfig14.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = null;
        atmosphereConfig14.framework = atmosphereFramework20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig14.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = atmosphereConfig14.getframework();
        boolean boolean24 = atmosphereConfig14.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig14.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig14.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = atmosphereConfig8.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig0.populate(atmosphereConfig8);
        boolean boolean29 = atmosphereConfig28.isThrowExceptionOnCloned();
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory30 = atmosphereConfig28.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNull(atmosphereFramework2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(atmosphereFramework23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNotNull(atmosphereConfig27);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test05466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05466");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework12);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig14.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig14.properties();
        atmosphereConfig13.properties = strMap16;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook18 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = atmosphereConfig13.startupHook(startupHook18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig13.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = null;
        atmosphereConfig13.setframework(atmosphereFramework21);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig13.startupHook(startupHook23);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList25 = atmosphereConfig13.atmosphereHandlerConfig;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList25;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework28 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(atmosphereConfig19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(atmosphereFramework28);
    }

    @Test
    public void test05467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05467");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = atmosphereConfig10.properties();
        atmosphereConfig7.setproperties(strMap12);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook14 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = atmosphereConfig7.shutdownHook(shutdownHook14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig7.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList18 = atmosphereConfig17.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook19 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig17.shutdownHook(shutdownHook19);
        org.slf4j.Logger logger21 = atmosphereConfig17.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig17.setframework(atmosphereFramework22);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray24 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList25, startupHookArray24);
        atmosphereConfig17.startUpHook = startupHookList25;
        atmosphereConfig17.destroy();
        int int31 = atmosphereConfig17.getInitParameter("", (int) ' ');
        org.slf4j.Logger logger32 = atmosphereConfig17.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework33 = null;
        atmosphereConfig17.setframework(atmosphereFramework33);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList35 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig7.setshutdownHooks(shutdownHookList35);
        boolean boolean39 = atmosphereConfig7.getInitParameter("", true);
        boolean boolean40 = atmosphereConfig7.supportSession;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = atmosphereConfig7.shutdownHook(shutdownHook41);
        java.lang.String str44 = atmosphereConfig7.getInitParameter("");
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(atmosphereConfig15);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(shutdownHookList18);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(logger21);
        org.junit.Assert.assertNotNull(startupHookArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
        org.junit.Assert.assertNotNull(logger32);
        org.junit.Assert.assertNotNull(shutdownHookList35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig42);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test05468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05468");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        java.lang.String str6 = atmosphereConfig0.getInitParameter("hi!", "");
        boolean boolean7 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig0.shutdownHook(shutdownHook8);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig0.startUpHook;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        atmosphereConfig12.setshutdownHooks(shutdownHookList14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig16.startUpHook;
        atmosphereConfig12.setstartUpHook(startupHookList17);
        atmosphereConfig0.startUpHook = startupHookList17;
        boolean boolean20 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig0.startupHook(startupHook21);
        boolean boolean23 = atmosphereConfig22.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList25 = atmosphereConfig24.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework26 = atmosphereConfig24.framework();
        atmosphereConfig24.destroy();
        java.lang.String str29 = atmosphereConfig24.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig24.getAtmosphereHandlerConfig();
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList30;
        boolean boolean32 = atmosphereConfig22.throwExceptionOnCloned;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList33 = atmosphereConfig22.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig34.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig34.properties();
        atmosphereConfig34.setThrowExceptionOnCloned(true);
        java.lang.String str40 = atmosphereConfig34.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig34.getstartUpHook();
        atmosphereConfig34.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList44 = atmosphereConfig43.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig43.properties();
        atmosphereConfig43.setThrowExceptionOnCloned(true);
        java.lang.String str49 = atmosphereConfig43.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList50 = atmosphereConfig43.getshutdownHooks();
        java.lang.String str52 = atmosphereConfig43.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList53 = atmosphereConfig43.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook54 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = atmosphereConfig43.startupHook(startupHook54);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework56 = atmosphereConfig55.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig57 = atmosphereConfig34.populate(atmosphereConfig55);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList58 = atmosphereConfig34.shutdownHooks;
        boolean boolean59 = atmosphereConfig34.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig61 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = atmosphereConfig62.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = atmosphereConfig62.properties();
        atmosphereConfig61.properties = strMap64;
        atmosphereConfig61.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList68 = atmosphereConfig61.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = atmosphereConfig61.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework70 = atmosphereConfig61.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList71 = atmosphereConfig61.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig72 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList73 = atmosphereConfig72.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = atmosphereConfig72.properties();
        atmosphereConfig72.setThrowExceptionOnCloned(true);
        java.lang.String str78 = atmosphereConfig72.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList79 = atmosphereConfig72.getshutdownHooks();
        java.lang.String str81 = atmosphereConfig72.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList82 = atmosphereConfig72.getAtmosphereHandlerConfig();
        atmosphereConfig61.atmosphereHandlerConfig = atmosphereHandlerConfigList82;
        atmosphereConfig34.atmosphereHandlerConfig = atmosphereHandlerConfigList82;
        atmosphereConfig22.atmosphereHandlerConfig = atmosphereHandlerConfigList82;
        atmosphereConfig22.supportSession = true;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(startupHookList25);
        org.junit.Assert.assertNull(atmosphereFramework26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(shutdownHookList33);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(shutdownHookList50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList53);
        org.junit.Assert.assertNotNull(atmosphereConfig55);
        org.junit.Assert.assertNull(atmosphereFramework56);
        org.junit.Assert.assertNotNull(atmosphereConfig57);
        org.junit.Assert.assertNotNull(shutdownHookList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(startupHookList63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(atmosphereFramework70);
        org.junit.Assert.assertNotNull(startupHookList71);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(shutdownHookList79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList82);
    }

    @Test
    public void test05469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05469");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        atmosphereConfig0.setSupportSession(false);
        atmosphereConfig0.setSupportSession(true);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList7 = atmosphereConfig6.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = atmosphereConfig6.shutdownHook(shutdownHook8);
        org.slf4j.Logger logger10 = atmosphereConfig6.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig6.setframework(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray13 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList14, startupHookArray13);
        atmosphereConfig6.startUpHook = startupHookList14;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList17 = atmosphereConfig6.getstartUpHook();
        atmosphereConfig6.sessionTimeoutRemovalAllowed = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig6.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig6.shutdownHook(shutdownHook21);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework23);
        atmosphereConfig24.setThrowExceptionOnCloned(false);
        atmosphereConfig24.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework29);
        atmosphereConfig30.setThrowExceptionOnCloned(false);
        int int35 = atmosphereConfig30.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework36 = null;
        atmosphereConfig30.framework = atmosphereFramework36;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig30.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = atmosphereConfig30.getframework();
        boolean boolean40 = atmosphereConfig30.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList41 = atmosphereConfig30.getstartUpHook();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework42 = atmosphereConfig30.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig43 = atmosphereConfig24.populate(atmosphereConfig30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig6.populate(atmosphereConfig43);
        atmosphereConfig44.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig47 = atmosphereConfig0.populate(atmosphereConfig44);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(shutdownHookList7);
        org.junit.Assert.assertNotNull(atmosphereConfig9);
        org.junit.Assert.assertNotNull(logger10);
        org.junit.Assert.assertNotNull(startupHookArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList17);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(atmosphereFramework39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(startupHookList41);
        org.junit.Assert.assertNull(atmosphereFramework42);
        org.junit.Assert.assertNotNull(atmosphereConfig43);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(atmosphereConfig47);
    }

    @Test
    public void test05470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05470");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        atmosphereConfig0.throwExceptionOnCloned = false;
        boolean boolean9 = atmosphereConfig0.isSupportSession();
        boolean boolean10 = atmosphereConfig0.supportSession;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test05471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05471");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        atmosphereConfig1.framework = atmosphereFramework8;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str15 = atmosphereConfig12.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig12.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        boolean boolean19 = atmosphereConfig17.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = atmosphereConfig12.populate(atmosphereConfig17);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig17.shutdownHook(shutdownHook21);
        boolean boolean23 = atmosphereConfig17.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig17.getshutdownHooks();
        atmosphereConfig1.shutdownHooks = shutdownHookList24;
        boolean boolean26 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig27 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList28 = atmosphereConfig27.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook29 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig27.shutdownHook(shutdownHook29);
        java.lang.String str33 = atmosphereConfig27.getInitParameter("hi!", "");
        boolean boolean34 = atmosphereConfig27.isThrowExceptionOnCloned();
        atmosphereConfig27.initComplete();
        boolean boolean36 = atmosphereConfig27.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList37 = atmosphereConfig27.getstartUpHook();
        atmosphereConfig1.setstartUpHook(startupHookList37);
        atmosphereConfig1.supportSession = false;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(shutdownHookList28);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(startupHookList37);
    }

    @Test
    public void test05472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05472");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList1 = atmosphereConfig0.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = atmosphereConfig0.properties;
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList7 = atmosphereConfig6.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = atmosphereConfig6.properties();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig6.getstartUpHook();
        atmosphereConfig0.startUpHook = startupHookList9;
        boolean boolean11 = atmosphereConfig0.isThrowExceptionOnCloned();
        boolean boolean12 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = atmosphereConfig0.framework;
        atmosphereConfig0.throwExceptionOnCloned = false;
        org.junit.Assert.assertNotNull(startupHookList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(atmosphereFramework13);
    }

    @Test
    public void test05473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05473");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        atmosphereConfig1.sessionTimeoutRemovalAllowed = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        atmosphereConfig1.framework = atmosphereFramework13;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig1.getframework();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig1.properties();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNull(atmosphereFramework15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test05474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05474");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        boolean boolean9 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.lang.String str12 = atmosphereConfig1.getInitParameter("", "hi!");
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.lang.String str16 = atmosphereConfig1.getInitParameter("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = atmosphereConfig1.getproperties();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test05475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05475");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.shutdownHook(shutdownHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig8.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList14 = atmosphereConfig13.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig13.properties();
        atmosphereConfig12.properties = strMap15;
        atmosphereConfig12.supportSession = false;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig12.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = atmosphereConfig12.properties;
        atmosphereConfig10.properties = strMap20;
        atmosphereConfig10.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = atmosphereConfig10.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = null;
        atmosphereConfig10.framework = atmosphereFramework25;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig10.getproperties();
        boolean boolean30 = atmosphereConfig10.getInitParameter("hi!", true);
        java.lang.String str32 = atmosphereConfig10.getInitParameter("");
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(startupHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(atmosphereFramework24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test05476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05476");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = atmosphereConfig0.getframework();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList4 = atmosphereConfig0.startUpHook;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = atmosphereConfig0.properties();
        java.lang.Class<?> wildcardClass7 = strMap6.getClass();
        org.junit.Assert.assertNull(atmosphereFramework1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(startupHookList4);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05477");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework1 = atmosphereConfig0.getframework();
        boolean boolean2 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        boolean boolean3 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList4 = atmosphereConfig0.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = atmosphereConfig7.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = atmosphereConfig7.properties();
        atmosphereConfig6.properties = strMap9;
        atmosphereConfig6.supportSession = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig13.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig13.shutdownHook(shutdownHook15);
        org.slf4j.Logger logger17 = atmosphereConfig13.getlogger();
        java.lang.String str20 = atmosphereConfig13.getInitParameter("hi!", "");
        boolean boolean21 = atmosphereConfig13.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList22 = atmosphereConfig13.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig23 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig23.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig23.shutdownHook(shutdownHook25);
        org.slf4j.Logger logger27 = atmosphereConfig23.getlogger();
        atmosphereConfig23.supportSession = true;
        boolean boolean30 = atmosphereConfig23.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework31);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig33 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList34 = atmosphereConfig33.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = atmosphereConfig33.properties();
        atmosphereConfig32.properties = strMap35;
        boolean boolean37 = atmosphereConfig32.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig32.shutdownHook(shutdownHook38);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList40 = atmosphereConfig32.getshutdownHooks();
        atmosphereConfig23.setshutdownHooks(shutdownHookList40);
        atmosphereConfig13.setshutdownHooks(shutdownHookList40);
        atmosphereConfig6.shutdownHooks = shutdownHookList40;
        atmosphereConfig0.setshutdownHooks(shutdownHookList40);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = atmosphereConfig0.framework();
        boolean boolean47 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook48 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig49 = atmosphereConfig0.shutdownHook(shutdownHook48);
        atmosphereConfig0.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework52 = atmosphereConfig0.framework;
        org.junit.Assert.assertNull(atmosphereFramework1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList4);
        org.junit.Assert.assertNotNull(startupHookList8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(logger17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(startupHookList22);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(logger27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(startupHookList34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertNotNull(shutdownHookList40);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(atmosphereFramework46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig49);
        org.junit.Assert.assertNull(atmosphereFramework52);
    }

    @Test
    public void test05478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05478");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        boolean boolean7 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletConfig servletConfig8 = atmosphereConfig1.getServletConfig();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05479");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        java.lang.String str7 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig1.framework();
        atmosphereConfig1.setSessionTimeoutRemovalAllowed(false);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList12 = atmosphereConfig11.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig11.shutdownHook(shutdownHook13);
        java.lang.String str17 = atmosphereConfig11.getInitParameter("hi!", "");
        boolean boolean18 = atmosphereConfig11.isThrowExceptionOnCloned();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig11.startUpHook;
        java.lang.String str22 = atmosphereConfig11.getInitParameter("", "hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList23 = atmosphereConfig11.startUpHook;
        atmosphereConfig1.setstartUpHook(startupHookList23);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework25 = atmosphereConfig1.framework;
        boolean boolean28 = atmosphereConfig1.getInitParameter("", false);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = null;
        atmosphereConfig1.shutdownHooks = shutdownHookList29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig1.properties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = atmosphereConfig1.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertNotNull(shutdownHookList12);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(startupHookList23);
        org.junit.Assert.assertNull(atmosphereFramework25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test05480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05480");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig5 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework4);
        atmosphereConfig5.setThrowExceptionOnCloned(false);
        int int10 = atmosphereConfig5.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        atmosphereConfig5.framework = atmosphereFramework11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig5.properties();
        atmosphereConfig1.setproperties(strMap13);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig15 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList16 = atmosphereConfig15.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig15.shutdownHook(shutdownHook17);
        java.lang.String str21 = atmosphereConfig15.getInitParameter("hi!", "");
        boolean boolean22 = atmosphereConfig15.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook23 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = atmosphereConfig15.shutdownHook(shutdownHook23);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig24.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList26 = atmosphereConfig24.atmosphereHandlerConfig;
        atmosphereConfig1.atmosphereHandlerConfig = atmosphereHandlerConfigList26;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList28 = atmosphereConfig1.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList29 = atmosphereConfig1.startUpHook;
        int int32 = atmosphereConfig1.getInitParameter("", 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(shutdownHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig24);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList28);
        org.junit.Assert.assertNotNull(startupHookList29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
    }

    @Test
    public void test05481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05481");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        atmosphereConfig0.setSupportSession(false);
        boolean boolean10 = atmosphereConfig0.supportSession;
        java.lang.String str13 = atmosphereConfig0.getInitParameter("", "");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig0.shutdownHooks;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(shutdownHookList14);
    }

    @Test
    public void test05482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05482");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        boolean boolean16 = atmosphereConfig0.getInitParameter("hi!", true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig0.startupHook(startupHook17);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList19 = atmosphereConfig0.getstartUpHook();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig0.startUpHook;
        boolean boolean21 = atmosphereConfig0.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertNotNull(startupHookList19);
        org.junit.Assert.assertNotNull(startupHookList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test05483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05483");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework14 = atmosphereConfig13.framework;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework15);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig17.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig16.properties = strMap19;
        atmosphereConfig16.throwExceptionOnCloned = true;
        boolean boolean23 = atmosphereConfig16.sessionTimeoutRemovalAllowed;
        boolean boolean24 = atmosphereConfig16.throwExceptionOnCloned;
        java.lang.String str26 = atmosphereConfig16.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = atmosphereConfig16.startupHook(startupHook27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = atmosphereConfig16.properties();
        atmosphereConfig13.properties = strMap29;
        atmosphereConfig13.setSessionTimeoutRemovalAllowed(true);
        boolean boolean35 = atmosphereConfig13.getInitParameter("", false);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig13.startupHook(startupHook36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = atmosphereConfig37.properties();
        boolean boolean39 = atmosphereConfig37.isSessionTimeoutRemovalAllowed();
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNull(atmosphereFramework14);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereConfig28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test05484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05484");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework9);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList12 = atmosphereConfig11.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties();
        atmosphereConfig10.properties = strMap13;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig10.startupHook(startupHook15);
        boolean boolean17 = atmosphereConfig16.isSupportSession();
        boolean boolean18 = atmosphereConfig16.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook21 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig19.shutdownHook(shutdownHook21);
        org.slf4j.Logger logger23 = atmosphereConfig19.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig19.setframework(atmosphereFramework24);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray26 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList27 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList27, startupHookArray26);
        atmosphereConfig19.startUpHook = startupHookList27;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = atmosphereConfig16.populate(atmosphereConfig19);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig1.populate(atmosphereConfig16);
        boolean boolean34 = atmosphereConfig31.getInitParameter("hi!", true);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig31.getAtmosphereHandlerConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList36 = atmosphereConfig31.startUpHook;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList37 = atmosphereConfig31.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook38 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = atmosphereConfig31.startupHook(startupHook38);
        int int42 = atmosphereConfig31.getInitParameter("hi!", (int) (short) 10);
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(startupHookList12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertNotNull(logger23);
        org.junit.Assert.assertNotNull(startupHookArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertNotNull(startupHookList36);
        org.junit.Assert.assertNotNull(shutdownHookList37);
        org.junit.Assert.assertNotNull(atmosphereConfig39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
    }

    @Test
    public void test05485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05485");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList5 = atmosphereConfig4.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList5);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList7 = atmosphereConfig0.startUpHook;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList9 = atmosphereConfig8.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = atmosphereConfig8.properties();
        atmosphereConfig8.setThrowExceptionOnCloned(true);
        java.lang.String str14 = atmosphereConfig8.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList15 = atmosphereConfig8.getstartUpHook();
        atmosphereConfig8.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList18 = atmosphereConfig17.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig17.properties();
        atmosphereConfig17.setThrowExceptionOnCloned(true);
        java.lang.String str23 = atmosphereConfig17.getInitParameter("");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList24 = atmosphereConfig17.getshutdownHooks();
        java.lang.String str26 = atmosphereConfig17.getInitParameter("hi!");
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList27 = atmosphereConfig17.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig17.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework30 = atmosphereConfig29.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig8.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig0.populate(atmosphereConfig29);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig32.startupHook(startupHook33);
        atmosphereConfig32.setSupportSession(false);
        boolean boolean37 = atmosphereConfig32.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory38 = atmosphereConfig32.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(startupHookList5);
        org.junit.Assert.assertNotNull(startupHookList7);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(startupHookList15);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(shutdownHookList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNull(atmosphereFramework30);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test05486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05486");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        boolean boolean8 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean9 = atmosphereConfig1.throwExceptionOnCloned;
        java.lang.String str11 = atmosphereConfig1.getInitParameter("hi!");
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook12 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = atmosphereConfig1.startupHook(startupHook12);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = atmosphereConfig13.framework;
        atmosphereConfig13.throwExceptionOnCloned = true;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(atmosphereConfig13);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertNull(atmosphereFramework15);
    }

    @Test
    public void test05487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05487");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        boolean boolean6 = atmosphereConfig1.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig1.startupHook(startupHook7);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework11);
        atmosphereConfig12.setThrowExceptionOnCloned(false);
        boolean boolean15 = atmosphereConfig12.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = atmosphereConfig12.properties;
        atmosphereConfig1.setproperties(strMap16);
        atmosphereConfig1.supportSession = false;
        boolean boolean20 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList21 = atmosphereConfig1.atmosphereHandlerConfig;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework22 = null;
        atmosphereConfig1.setframework(atmosphereFramework22);
        java.lang.String str26 = atmosphereConfig1.getInitParameter("", "");
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test05488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05488");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        atmosphereConfig1.setSupportSession(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework6 = null;
        atmosphereConfig1.framework = atmosphereFramework6;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList8 = atmosphereConfig1.atmosphereHandlerConfig;
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster9 = atmosphereConfig1.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList8);
    }

    @Test
    public void test05489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05489");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        atmosphereConfig0.destroy();
        boolean boolean12 = atmosphereConfig0.isThrowExceptionOnCloned();
        org.slf4j.Logger logger13 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str17 = atmosphereConfig14.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework18 = atmosphereConfig14.framework;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList20 = atmosphereConfig19.getAtmosphereHandlerConfig();
        boolean boolean21 = atmosphereConfig19.supportSession;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = atmosphereConfig14.populate(atmosphereConfig19);
        boolean boolean23 = atmosphereConfig19.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig24 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList26 = atmosphereConfig25.shutdownHooks;
        atmosphereConfig24.setshutdownHooks(shutdownHookList26);
        boolean boolean28 = atmosphereConfig24.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework29 = atmosphereConfig24.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList30 = atmosphereConfig24.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook31 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig24.shutdownHook(shutdownHook31);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = atmosphereConfig32.getproperties();
        atmosphereConfig19.properties = strMap33;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig0.populate(atmosphereConfig19);
        boolean boolean36 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = atmosphereConfig0.startupHook(startupHook37);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework39 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig40 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework39);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList42 = atmosphereConfig41.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = atmosphereConfig41.properties();
        atmosphereConfig40.properties = strMap43;
        atmosphereConfig40.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework47 = null;
        atmosphereConfig40.framework = atmosphereFramework47;
        boolean boolean49 = atmosphereConfig40.isSessionTimeoutRemovalAllowed();
        boolean boolean50 = atmosphereConfig40.isSupportSession();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = atmosphereConfig0.populate(atmosphereConfig40);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList52 = atmosphereConfig51.atmosphereHandlerConfig;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(logger13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(atmosphereFramework18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(shutdownHookList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(atmosphereFramework29);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList30);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig38);
        org.junit.Assert.assertNotNull(startupHookList42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig51);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList52);
    }

    @Test
    public void test05490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05490");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.lang.String str3 = atmosphereConfig0.getInitParameter("", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework4 = atmosphereConfig0.framework;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig0.shutdownHook(shutdownHook6);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList9 = atmosphereConfig8.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = atmosphereConfig8.framework();
        int int13 = atmosphereConfig8.getInitParameter("hi!", 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig8.properties;
        atmosphereConfig7.setproperties(strMap14);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig7.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = atmosphereConfig7.startupHook(startupHook17);
        boolean boolean19 = atmosphereConfig18.sessionTimeoutRemovalAllowed;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = atmosphereConfig18.getWebServerName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(atmosphereFramework4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertNotNull(startupHookList9);
        org.junit.Assert.assertNull(atmosphereFramework10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test05491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05491");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook6 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = atmosphereConfig1.startupHook(startupHook6);
        boolean boolean8 = atmosphereConfig7.isSupportSession();
        boolean boolean9 = atmosphereConfig7.supportSession;
        atmosphereConfig7.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig7.setThrowExceptionOnCloned(true);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList14 = atmosphereConfig7.shutdownHooks;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = atmosphereConfig7.properties;
        java.lang.String str17 = atmosphereConfig7.getInitParameter("");
        java.lang.String str19 = atmosphereConfig7.getInitParameter("hi!");
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList20 = atmosphereConfig7.startUpHook;
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(atmosphereConfig7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(shutdownHookList14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(startupHookList20);
    }

    @Test
    public void test05492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05492");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        boolean boolean4 = atmosphereConfig0.isSupportSession();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = atmosphereConfig0.framework();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList6 = atmosphereConfig0.getAtmosphereHandlerConfig();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = atmosphereConfig0.shutdownHook(shutdownHook7);
        atmosphereConfig0.setThrowExceptionOnCloned(false);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework13);
        atmosphereConfig14.setThrowExceptionOnCloned(false);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework17);
        atmosphereConfig18.setThrowExceptionOnCloned(false);
        int int23 = atmosphereConfig18.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework24 = null;
        atmosphereConfig18.framework = atmosphereFramework24;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = atmosphereConfig18.properties();
        atmosphereConfig14.setproperties(strMap26);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList29 = atmosphereConfig28.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig28.shutdownHook(shutdownHook30);
        java.lang.String str34 = atmosphereConfig28.getInitParameter("hi!", "");
        boolean boolean35 = atmosphereConfig28.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook36 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig37 = atmosphereConfig28.shutdownHook(shutdownHook36);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList38 = atmosphereConfig37.getshutdownHooks();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList39 = atmosphereConfig37.atmosphereHandlerConfig;
        atmosphereConfig14.atmosphereHandlerConfig = atmosphereHandlerConfigList39;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework41 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig42 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework41);
        atmosphereConfig42.setThrowExceptionOnCloned(false);
        atmosphereConfig42.setSupportSession(false);
        boolean boolean47 = atmosphereConfig42.sessionTimeoutRemovalAllowed;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList48 = atmosphereConfig42.getstartUpHook();
        atmosphereConfig14.startUpHook = startupHookList48;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework50 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig51 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework50);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig52 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList53 = atmosphereConfig52.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = atmosphereConfig52.properties();
        atmosphereConfig51.properties = strMap54;
        atmosphereConfig51.supportSession = false;
        atmosphereConfig51.setSessionTimeoutRemovalAllowed(true);
        atmosphereConfig51.sessionTimeoutRemovalAllowed = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig62 = atmosphereConfig14.populate(atmosphereConfig51);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig63 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList64 = atmosphereConfig63.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework65 = atmosphereConfig63.framework();
        atmosphereConfig63.destroy();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework67 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework67);
        atmosphereConfig68.setThrowExceptionOnCloned(false);
        int int73 = atmosphereConfig68.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework74 = null;
        atmosphereConfig68.framework = atmosphereFramework74;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework76 = atmosphereConfig68.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList77 = atmosphereConfig68.shutdownHooks;
        atmosphereConfig63.shutdownHooks = shutdownHookList77;
        atmosphereConfig63.throwExceptionOnCloned = false;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList82 = atmosphereConfig81.startUpHook;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework83 = atmosphereConfig81.framework();
        int int86 = atmosphereConfig81.getInitParameter("hi!", 0);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList87 = atmosphereConfig81.startUpHook;
        atmosphereConfig63.setstartUpHook(startupHookList87);
        atmosphereConfig51.startUpHook = startupHookList87;
        atmosphereConfig0.startUpHook = startupHookList87;
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = atmosphereConfig0.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework92 = atmosphereConfig0.framework();
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(atmosphereFramework5);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList6);
        org.junit.Assert.assertNotNull(atmosphereConfig8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(shutdownHookList29);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig37);
        org.junit.Assert.assertNotNull(shutdownHookList38);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList39);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(startupHookList48);
        org.junit.Assert.assertNotNull(startupHookList53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(atmosphereConfig62);
        org.junit.Assert.assertNotNull(startupHookList64);
        org.junit.Assert.assertNull(atmosphereFramework65);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(atmosphereFramework76);
        org.junit.Assert.assertNotNull(shutdownHookList77);
        org.junit.Assert.assertNotNull(startupHookList82);
        org.junit.Assert.assertNull(atmosphereFramework83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(startupHookList87);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(atmosphereFramework92);
    }

    @Test
    public void test05493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05493");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList2 = atmosphereConfig1.shutdownHooks;
        atmosphereConfig0.setshutdownHooks(shutdownHookList2);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig4 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList5 = atmosphereConfig4.getAtmosphereHandlerConfig();
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList5;
        boolean boolean7 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = atmosphereConfig0.framework;
        boolean boolean9 = atmosphereConfig0.throwExceptionOnCloned;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework10);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList13 = atmosphereConfig12.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = atmosphereConfig12.properties();
        atmosphereConfig11.properties = strMap14;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook16 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig11.startupHook(startupHook16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = atmosphereConfig11.properties;
        atmosphereConfig0.setproperties(strMap18);
        atmosphereConfig0.initComplete();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = null;
        atmosphereConfig0.startUpHook = startupHookList21;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig0.atmosphereHandlerConfig;
        atmosphereConfig0.throwExceptionOnCloned = true;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList27 = atmosphereConfig26.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig26.shutdownHook(shutdownHook28);
        java.lang.String str32 = atmosphereConfig26.getInitParameter("hi!", "");
        boolean boolean33 = atmosphereConfig26.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook34 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig35 = atmosphereConfig26.shutdownHook(shutdownHook34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = atmosphereConfig35.getproperties();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework37 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig38 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework37);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig39 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList40 = atmosphereConfig39.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = atmosphereConfig39.properties();
        atmosphereConfig38.properties = strMap41;
        boolean boolean43 = atmosphereConfig38.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook44 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig45 = atmosphereConfig38.shutdownHook(shutdownHook44);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig46 = atmosphereConfig35.populate(atmosphereConfig38);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = atmosphereConfig38.properties;
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList48 = atmosphereConfig38.atmosphereHandlerConfig;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = atmosphereConfig38.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig50 = atmosphereConfig0.populate(atmosphereConfig38);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.BroadcasterFactory broadcasterFactory51 = atmosphereConfig38.getBroadcasterFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList2);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(atmosphereFramework8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(startupHookList13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList27);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(startupHookList40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig45);
        org.junit.Assert.assertNotNull(atmosphereConfig46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(atmosphereConfig50);
    }

    @Test
    public void test05494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05494");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework5 = null;
        atmosphereConfig0.setframework(atmosphereFramework5);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray7 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList8 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList8, startupHookArray7);
        atmosphereConfig0.startUpHook = startupHookList8;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig0.startupHook(startupHook11);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig13 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList14 = atmosphereConfig13.getAtmosphereHandlerConfig();
        boolean boolean15 = atmosphereConfig13.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework16 = atmosphereConfig13.framework;
        java.lang.String str18 = atmosphereConfig13.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = atmosphereConfig13.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig20 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList21 = atmosphereConfig20.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = atmosphereConfig20.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = atmosphereConfig20.properties;
        atmosphereConfig13.setproperties(strMap23);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook25 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig26 = atmosphereConfig13.shutdownHook(shutdownHook25);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework27 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig28 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework27);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList30 = atmosphereConfig29.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = atmosphereConfig29.properties();
        atmosphereConfig28.properties = strMap31;
        atmosphereConfig28.throwExceptionOnCloned = true;
        atmosphereConfig28.sessionTimeoutRemovalAllowed = true;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = atmosphereConfig28.getproperties();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList38 = atmosphereConfig28.atmosphereHandlerConfig;
        atmosphereConfig26.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList38;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig41 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList42 = atmosphereConfig41.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook43 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig44 = atmosphereConfig41.shutdownHook(shutdownHook43);
        org.slf4j.Logger logger45 = atmosphereConfig41.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework46 = null;
        atmosphereConfig41.setframework(atmosphereFramework46);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray48 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList49 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList49, startupHookArray48);
        atmosphereConfig41.startUpHook = startupHookList49;
        atmosphereConfig41.destroy();
        boolean boolean53 = atmosphereConfig41.isThrowExceptionOnCloned();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework54 = atmosphereConfig41.getframework();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig55 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList56 = atmosphereConfig55.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook57 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig58 = atmosphereConfig55.shutdownHook(shutdownHook57);
        org.slf4j.Logger logger59 = atmosphereConfig55.getlogger();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework60 = null;
        atmosphereConfig55.setframework(atmosphereFramework60);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook[] startupHookArray62 = new org.atmosphere.cpr.AtmosphereConfig.StartupHook[] {};
        java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList63 = new java.util.ArrayList<org.atmosphere.cpr.AtmosphereConfig.StartupHook>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.atmosphere.cpr.AtmosphereConfig.StartupHook>) startupHookList63, startupHookArray62);
        atmosphereConfig55.startUpHook = startupHookList63;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework66 = null;
        atmosphereConfig55.framework = atmosphereFramework66;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig68 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList69 = atmosphereConfig68.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook70 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig71 = atmosphereConfig68.shutdownHook(shutdownHook70);
        org.slf4j.Logger logger72 = atmosphereConfig68.getlogger();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig73 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList74 = atmosphereConfig73.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = atmosphereConfig73.properties();
        atmosphereConfig68.properties = strMap75;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = atmosphereConfig68.properties();
        atmosphereConfig55.setproperties(strMap77);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = atmosphereConfig55.properties;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework80 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig81 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework80);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig82 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList83 = atmosphereConfig82.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = atmosphereConfig82.properties();
        atmosphereConfig81.properties = strMap84;
        boolean boolean86 = atmosphereConfig81.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook87 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig88 = atmosphereConfig81.shutdownHook(shutdownHook87);
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList89 = atmosphereConfig81.getshutdownHooks();
        atmosphereConfig55.shutdownHooks = shutdownHookList89;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig91 = atmosphereConfig41.populate(atmosphereConfig55);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList92 = atmosphereConfig41.atmosphereHandlerConfig;
        atmosphereConfig12.atmosphereHandlerConfig = atmosphereHandlerConfigList92;
        java.lang.String str96 = atmosphereConfig12.getInitParameter("hi!", "hi!");
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(startupHookArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(atmosphereFramework16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(startupHookList21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(atmosphereConfig26);
        org.junit.Assert.assertNotNull(startupHookList30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList38);
        org.junit.Assert.assertNotNull(shutdownHookList42);
        org.junit.Assert.assertNotNull(atmosphereConfig44);
        org.junit.Assert.assertNotNull(logger45);
        org.junit.Assert.assertNotNull(startupHookArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(atmosphereFramework54);
        org.junit.Assert.assertNotNull(shutdownHookList56);
        org.junit.Assert.assertNotNull(atmosphereConfig58);
        org.junit.Assert.assertNotNull(logger59);
        org.junit.Assert.assertNotNull(startupHookArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(shutdownHookList69);
        org.junit.Assert.assertNotNull(atmosphereConfig71);
        org.junit.Assert.assertNotNull(logger72);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(startupHookList83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(atmosphereConfig88);
        org.junit.Assert.assertNotNull(shutdownHookList89);
        org.junit.Assert.assertNotNull(atmosphereConfig91);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList92);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!" + "'", str96, "hi!");
    }

    @Test
    public void test05495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05495");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook5 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = atmosphereConfig0.shutdownHook(shutdownHook5);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig8 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework7);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList10 = atmosphereConfig9.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = atmosphereConfig9.properties();
        atmosphereConfig8.properties = strMap11;
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook13 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig14 = atmosphereConfig8.startupHook(startupHook13);
        boolean boolean15 = atmosphereConfig14.isSupportSession();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList16 = atmosphereConfig14.getstartUpHook();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig17 = atmosphereConfig6.populate(atmosphereConfig14);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList19 = atmosphereConfig18.getAtmosphereHandlerConfig();
        boolean boolean20 = atmosphereConfig18.supportSession;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework21 = atmosphereConfig18.framework;
        java.lang.String str23 = atmosphereConfig18.getInitParameter("");
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = atmosphereConfig18.properties;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig25 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList26 = atmosphereConfig25.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = atmosphereConfig25.properties();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = atmosphereConfig25.properties;
        atmosphereConfig18.setproperties(strMap28);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook30 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig31 = atmosphereConfig18.shutdownHook(shutdownHook30);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig32 = atmosphereConfig14.populate(atmosphereConfig18);
        java.lang.String str34 = atmosphereConfig32.getInitParameter("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, org.atmosphere.cpr.AtmosphereFramework.AtmosphereHandlerWrapper> strMap35 = atmosphereConfig32.handlers();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertNotNull(atmosphereConfig6);
        org.junit.Assert.assertNotNull(startupHookList10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(atmosphereConfig14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(startupHookList16);
        org.junit.Assert.assertNotNull(atmosphereConfig17);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(atmosphereFramework21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(startupHookList26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(atmosphereConfig31);
        org.junit.Assert.assertNotNull(atmosphereConfig32);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test05496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05496");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList1 = atmosphereConfig0.shutdownHooks;
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook2 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig3 = atmosphereConfig0.shutdownHook(shutdownHook2);
        org.slf4j.Logger logger4 = atmosphereConfig0.getlogger();
        java.lang.String str7 = atmosphereConfig0.getInitParameter("hi!", "");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework8 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig9 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework8);
        atmosphereConfig9.setThrowExceptionOnCloned(false);
        int int14 = atmosphereConfig9.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework15 = null;
        atmosphereConfig9.framework = atmosphereFramework15;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = atmosphereConfig9.framework();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList18 = atmosphereConfig9.startUpHook;
        atmosphereConfig0.setstartUpHook(startupHookList18);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework20 = atmosphereConfig0.framework;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList21 = atmosphereConfig0.getshutdownHooks();
        java.lang.String str24 = atmosphereConfig0.getInitParameter("", "hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = atmosphereConfig0.properties;
        org.junit.Assert.assertNotNull(shutdownHookList1);
        org.junit.Assert.assertNotNull(atmosphereConfig3);
        org.junit.Assert.assertNotNull(logger4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(atmosphereFramework17);
        org.junit.Assert.assertNotNull(startupHookList18);
        org.junit.Assert.assertNull(atmosphereFramework20);
        org.junit.Assert.assertNotNull(shutdownHookList21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test05497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05497");
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig0 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList1 = atmosphereConfig0.getAtmosphereHandlerConfig();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = atmosphereConfig0.properties();
        atmosphereConfig0.setThrowExceptionOnCloned(true);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = atmosphereConfig0.properties();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig6 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig7 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig7.shutdownHooks;
        atmosphereConfig6.setshutdownHooks(shutdownHookList8);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList11 = atmosphereConfig10.getAtmosphereHandlerConfig();
        atmosphereConfig6.atmosphereHandlerConfig = atmosphereHandlerConfigList11;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList13 = atmosphereConfig6.getshutdownHooks();
        atmosphereConfig0.setshutdownHooks(shutdownHookList13);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook15 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig16 = atmosphereConfig0.shutdownHook(shutdownHook15);
        atmosphereConfig0.initComplete();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig18 = new org.atmosphere.cpr.AtmosphereConfig();
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig19 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList20 = atmosphereConfig19.shutdownHooks;
        atmosphereConfig18.setshutdownHooks(shutdownHookList20);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig22 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList23 = atmosphereConfig22.getAtmosphereHandlerConfig();
        atmosphereConfig18.atmosphereHandlerConfig = atmosphereHandlerConfigList23;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList25 = atmosphereConfig18.getshutdownHooks();
        atmosphereConfig18.setSessionTimeoutRemovalAllowed(true);
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook28 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig29 = atmosphereConfig18.startupHook(startupHook28);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig30 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList31 = atmosphereConfig30.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = atmosphereConfig30.properties();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook33 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig34 = atmosphereConfig30.startupHook(startupHook33);
        java.util.List<org.atmosphere.config.AtmosphereHandlerConfig> atmosphereHandlerConfigList35 = atmosphereConfig30.getAtmosphereHandlerConfig();
        atmosphereConfig29.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        atmosphereConfig0.atmosphereHandlerConfig = atmosphereHandlerConfigList35;
        boolean boolean38 = atmosphereConfig0.sessionTimeoutRemovalAllowed;
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList11);
        org.junit.Assert.assertNotNull(shutdownHookList13);
        org.junit.Assert.assertNotNull(atmosphereConfig16);
        org.junit.Assert.assertNotNull(shutdownHookList20);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList23);
        org.junit.Assert.assertNotNull(shutdownHookList25);
        org.junit.Assert.assertNotNull(atmosphereConfig29);
        org.junit.Assert.assertNotNull(startupHookList31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(atmosphereConfig34);
        org.junit.Assert.assertNotNull(atmosphereHandlerConfigList35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test05498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05498");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = atmosphereConfig1.framework();
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook10 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig11 = atmosphereConfig1.shutdownHook(shutdownHook10);
        boolean boolean12 = atmosphereConfig11.supportSession;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig11.properties;
        boolean boolean14 = atmosphereConfig11.isSupportSession();
        boolean boolean15 = atmosphereConfig11.throwExceptionOnCloned;
        boolean boolean16 = atmosphereConfig11.isSessionTimeoutRemovalAllowed();
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework17 = null;
        atmosphereConfig11.setframework(atmosphereFramework17);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.AtmosphereResourceSessionFactory atmosphereResourceSessionFactory19 = atmosphereConfig11.sessionFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(atmosphereFramework9);
        org.junit.Assert.assertNotNull(atmosphereConfig11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test05499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05499");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        atmosphereConfig1.setThrowExceptionOnCloned(false);
        int int6 = atmosphereConfig1.getInitParameter("hi!", (int) (short) 0);
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework7 = null;
        atmosphereConfig1.framework = atmosphereFramework7;
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework9 = null;
        atmosphereConfig1.framework = atmosphereFramework9;
        boolean boolean11 = atmosphereConfig1.sessionTimeoutRemovalAllowed;
        boolean boolean12 = atmosphereConfig1.isThrowExceptionOnCloned();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = atmosphereConfig1.properties();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext14 = atmosphereConfig1.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test05500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05500");
        org.atmosphere.cpr.AtmosphereFramework atmosphereFramework0 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig1 = new org.atmosphere.cpr.AtmosphereConfig(atmosphereFramework0);
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig2 = new org.atmosphere.cpr.AtmosphereConfig();
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.StartupHook> startupHookList3 = atmosphereConfig2.startUpHook;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = atmosphereConfig2.properties();
        atmosphereConfig1.properties = strMap4;
        atmosphereConfig1.throwExceptionOnCloned = true;
        java.util.List<org.atmosphere.cpr.AtmosphereConfig.ShutdownHook> shutdownHookList8 = atmosphereConfig1.getshutdownHooks();
        org.atmosphere.cpr.AtmosphereConfig.StartupHook startupHook9 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig10 = atmosphereConfig1.startupHook(startupHook9);
        org.atmosphere.cpr.AtmosphereConfig.ShutdownHook shutdownHook11 = null;
        org.atmosphere.cpr.AtmosphereConfig atmosphereConfig12 = atmosphereConfig10.shutdownHook(shutdownHook11);
        // The following exception was thrown during execution in test generation
        try {
            org.atmosphere.cpr.MetaBroadcaster metaBroadcaster13 = atmosphereConfig10.metaBroadcaster();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(startupHookList3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(shutdownHookList8);
        org.junit.Assert.assertNotNull(atmosphereConfig10);
        org.junit.Assert.assertNotNull(atmosphereConfig12);
    }
}

