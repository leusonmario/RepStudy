/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 07 15:47:23 GMT 2021
 */

package cuke4duke.internal.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import cuke4duke.internal.groovy.GroovyLanguage;
import cuke4duke.internal.groovy.GroovyStepDefinition;
import cuke4duke.internal.java.JavaLanguage;
import cuke4duke.internal.java.JavaStepDefinition;
import cuke4duke.internal.java.ObjectFactory;
import cuke4duke.internal.java.PicoFactory;
import cuke4duke.internal.java.SpringFactory;
import cuke4duke.internal.language.LanguageMixin;
import cuke4duke.internal.language.StepDefinition;
import groovy.lang.Closure;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.lang.reflect.Method;
import java.util.LinkedList;
import java.util.List;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jruby.IncludedModuleWrapper;
import org.jruby.Ruby;
import org.jruby.RubyArray;
import org.jruby.RubyClass;
import org.jruby.RubyInstanceConfig;
import org.jruby.RubyString;
import org.jruby.RubyTempfile;
import org.jruby.runtime.ThreadContext;
import org.jruby.runtime.builtin.IRubyObject;
import org.jruby.util.ByteList;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaLanguage_ESTest extends JavaLanguage_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = "V1xp6j/<w=sC,";
      try { 
        javaLanguage0.step_definitions_for(string0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Couldn't determine class from file: V1xp6j/<w=sC,
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      Class<SpringFactory> class0 = SpringFactory.class;
      // Undeclared exception!
      try { 
        javaLanguage0.getTarget(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      // Undeclared exception!
      try { 
        javaLanguage0.begin_scenario();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = "org.jruby.internal.runtime.methods.JavaMethod$JavaMethodZeroOrOne";
      javaLanguage0.load(string0);
      javaLanguage0.load(string0);
      // Undeclared exception!
      try { 
        javaLanguage0.end_scenario();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      LanguageMixin languageMixin0 = mock(LanguageMixin.class, new ViolatedAssumptionAnswer());
      JavaLanguage javaLanguage0 = null;
      try {
        javaLanguage0 = new JavaLanguage(languageMixin0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Missing system property: cuke4duke.objectFactory
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.loadClass(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      LanguageMixin languageMixin0 = null;
      JavaLanguage javaLanguage0 = null;
      try {
        javaLanguage0 = new JavaLanguage(languageMixin0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Missing system property: cuke4duke.objectFactory
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      Class<PicoFactory> class0 = PicoFactory.class;
      // Undeclared exception!
      try { 
        javaLanguage0.getTarget(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = "";
      // Undeclared exception!
      try { 
        javaLanguage0.loadClass(string0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        javaLanguage0.getTarget(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = "";
      // Undeclared exception!
      try { 
        javaLanguage0.load(string0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = "O_ASYNC";
      try { 
        javaLanguage0.loadClass(string0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Couldn't determine class from file: O_ASYNC
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = "K91[]}k/Hb}3\"_sV";
      try { 
        javaLanguage0.load(string0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Couldn't determine class from file: K91[]}k/Hb}3\"_sV
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      // Undeclared exception!
      try { 
        javaLanguage0.end_scenario();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = "7wSxp6j/<w=s\\I";
      try { 
        javaLanguage0.load(string0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Couldn't determine class from file: 7wSxp6j/<w=s\\I
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = "^`";
      // Undeclared exception!
      try { 
        javaLanguage0.load(string0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      Class<Object> class0 = Object.class;
      javaLanguage0.registerStepDefinitionsFor(class0);
      Class<PicoFactory> class1 = PicoFactory.class;
      Object object0 = new Object();
      assertNotNull(object0);
      
      String string0 = "org.jruby.RubyString$i_method_multi$RUBYFRAMEDINVOKER$gsub_bang";
      Class class2 = javaLanguage0.loadClass(string0);
      assertFalse(class2.isArray());
      assertFalse(class2.isInterface());
      assertEquals(1, class2.getModifiers());
      assertFalse(class2.isSynthetic());
      assertFalse(class2.isEnum());
      assertFalse(class2.isAnnotation());
      assertEquals("class org.jruby.RubyString$i_method_multi$RUBYFRAMEDINVOKER$gsub", class2.toString());
      assertFalse(class2.isPrimitive());
      assertNotNull(class2);
      
      // Undeclared exception!
      try { 
        javaLanguage0.begin_scenario();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      Method method0 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.registerStepDefinitionMaybe(method0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = "t?0*a\"p)";
      Class<PicoFactory> class0 = PicoFactory.class;
      javaLanguage0.registerStepDefinitionsFor(class0);
      ObjectFactory objectFactory0 = null;
      javaLanguage0.objectFactory = objectFactory0;
      try { 
        javaLanguage0.loadClass(string0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Couldn't determine class from file: t?0*a\"p)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      PicoFactory picoFactory0 = new PicoFactory();
      assertNotNull(picoFactory0);
      
      javaLanguage0.objectFactory = (ObjectFactory) picoFactory0;
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        javaLanguage0.getTarget(class0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/picocontainer/MutablePicoContainer
         //
         verifyException("cuke4duke.internal.java.PicoFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      LanguageMixin languageMixin0 = null;
      PicoFactory picoFactory0 = new PicoFactory();
      assertNotNull(picoFactory0);
      
      javaLanguage0.objectFactory = (ObjectFactory) picoFactory0;
      javaLanguage0.languageMixin = languageMixin0;
      // Undeclared exception!
      try { 
        javaLanguage0.begin_scenario();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/picocontainer/PicoBuilder
         //
         verifyException("cuke4duke.internal.java.PicoFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      Method method0 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.registerBeforeMaybe(method0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.load(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      LanguageMixin languageMixin0 = mock(LanguageMixin.class, new ViolatedAssumptionAnswer());
      javaLanguage0.languageMixin = languageMixin0;
      Method method0 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.registerAfterMaybe(method0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      PicoFactory picoFactory0 = new PicoFactory();
      assertNotNull(picoFactory0);
      
      javaLanguage0.objectFactory = (ObjectFactory) picoFactory0;
      Class<InputStream> class0 = InputStream.class;
      javaLanguage0.registerStepDefinitionsFor(class0);
      // Undeclared exception!
      try { 
        javaLanguage0.end_scenario();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/picocontainer/MutablePicoContainer
         //
         verifyException("cuke4duke.internal.java.PicoFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      String string0 = "";
      String string1 = ".java";
      Class<Object> class0 = Object.class;
      LanguageMixin languageMixin0 = mock(LanguageMixin.class, new ViolatedAssumptionAnswer());
      JavaLanguage javaLanguage0 = null;
      try {
        javaLanguage0 = new JavaLanguage(languageMixin0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Missing system property: cuke4duke.objectFactory
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      Class<PushbackInputStream> class0 = PushbackInputStream.class;
      javaLanguage0.registerStepDefinitionsFor(class0);
      Class<Object> class1 = Object.class;
      Class<Object> class2 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.registerStepDefinitionsFor(class2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string0 = "7wSxp6j/<w=s\\I";
      ObjectFactory objectFactory0 = javaLanguage0.objectFactory;
      assertNull(objectFactory0);
      
      javaLanguage0.objectFactory = objectFactory0;
      List<StepDefinition> list0 = new LinkedList<StepDefinition>();
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotNull(list0);
      
      Class<Object> class0 = Object.class;
      javaLanguage0.registerStepDefinitionsFor(class0);
      try { 
        javaLanguage0.loadClass(string0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // Couldn't determine class from file: 7wSxp6j/<w=s\\I
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      JavaLanguage javaLanguage0 = new JavaLanguage();
      assertNotNull(javaLanguage0);
      
      String string1 = "org.jruby.internal.runtime.methods.JavaMethod$JavaMethodZeroOrOne";
      javaLanguage0.load(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
  }
}
