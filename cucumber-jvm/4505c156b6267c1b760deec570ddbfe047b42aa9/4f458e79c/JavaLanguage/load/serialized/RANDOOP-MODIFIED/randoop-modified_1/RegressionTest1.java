import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage11.getlanguageMixin();
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage11.registerStepDefinitionMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        javaLanguage11.addStepDefinition(stepDefinition16);
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage11.addStepDefinition(stepDefinition18);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage11.serializedObjectSupporter;
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        java.lang.String str25 = serializedObjectSupporter20.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage8.getlanguageMixin();
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerAfterMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage8.languageMixin;
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerStepDefinitionMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage14.serializedObjectSupporter;
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        java.lang.reflect.Method method23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage10.registerAfterMaybe(method23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(objectFactory22);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        java.lang.String str11 = serializedObjectSupporter9.deserializeObjectString1();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.PicoFactory picoFactory18 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = serializedObjectSupporter9.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/Strix.java" + "'", str12, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(picoFactory18);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(picoFactory7);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass9 = serializedObjectSupporter6.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage4.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage4.getobjectFactory();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNotNull(objectFactory13);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter25 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter25.deserializeObjectJavaLanguage2();
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter25;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage24.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage30.serializedObjectSupporter = serializedObjectSupporter31;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter31;
        java.lang.String str35 = serializedObjectSupporter31.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter31;
        cuke4duke.internal.java.PicoFactory picoFactory38 = serializedObjectSupporter31.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNull(languageMixin28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(picoFactory38);
        org.junit.Assert.assertNotNull(javaLanguage39);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage1.serializedObjectSupporter;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.lang.Class class7 = javaLanguage2.loadClass("foo/java/lang/String.java");
        javaLanguage2.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class10 = javaLanguage2.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(class7);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage4.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage4.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        java.lang.Class<?> wildcardClass15 = serializedObjectSupporter13.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage4.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition20 = null;
        javaLanguage4.addStepDefinition(stepDefinition20);
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage4.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(stepDefinitionList19);
        org.junit.Assert.assertNull(languageMixin22);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage2.addStepDefinition(stepDefinition9);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory12 = serializedObjectSupporter11.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter11);
        org.junit.Assert.assertNotNull(picoFactory12);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage7.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(javaLanguage17);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.Class<?> wildcardClass10 = picoFactory9.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        java.lang.reflect.Method method3 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage9.registerBeforeMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage15.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter22;
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter22;
        java.lang.String str26 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage30.getlanguageMixin();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/String.java" + "'", str26, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNull(languageMixin31);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter4.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        javaLanguage8.begin_scenario();
        java.lang.Class<?> wildcardClass10 = javaLanguage8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage1.addStepDefinition(stepDefinition12);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class21 = javaLanguage19.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str10 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/Strix.java" + "'", str10, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        java.lang.Class<?> wildcardClass7 = javaLanguage1.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str9 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage9.objectFactory;
        java.lang.Class class13 = javaLanguage9.loadClass("foo/java/lang/String.java");
        javaLanguage2.registerStepDefinitionsFor(class13);
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        java.lang.String str19 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter16.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter16;
        java.lang.reflect.Method method25 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(class13);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(picoFactory22);
        org.junit.Assert.assertNotNull(javaLanguage23);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory4);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.getobjectFactory();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerBeforeMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage1.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(objectFactory14);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage4.getobjectFactory();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage10.registerStepDefinitionMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage7.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.lang.Class class7 = javaLanguage2.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = null;
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = javaLanguage10.serializedObjectSupporter;
        java.lang.Class<?> wildcardClass14 = javaLanguage10.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(class7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(objectFactory16);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage11.addStepDefinition(stepDefinition12);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage15.objectFactory;
        java.lang.Class<?> wildcardClass18 = objectFactory17.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        java.lang.String str20 = serializedObjectSupporter13.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter13.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter24.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter26.deserializeObjectJavaLanguage2();
        javaLanguage25.serializedObjectSupporter = serializedObjectSupporter26;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage25.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter30 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter30.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = serializedObjectSupporter32.deserializeObjectJavaLanguage2();
        javaLanguage31.serializedObjectSupporter = serializedObjectSupporter32;
        javaLanguage25.serializedObjectSupporter = serializedObjectSupporter32;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter32.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory37 = serializedObjectSupporter32.deserializeObjectObjectFactory2();
        java.lang.String str38 = serializedObjectSupporter32.deserializeObjectString2();
        java.lang.String str39 = serializedObjectSupporter32.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter32.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory41 = serializedObjectSupporter32.deserializeObjectObjectFactory2();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter32;
        javaLanguage23.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/Strix.java" + "'", str21, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNull(languageMixin29);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(javaLanguage33);
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(picoFactory37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "foo/java/lang/Strix.java" + "'", str38, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foo/java/lang/String.java" + "'", str39, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(picoFactory41);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage14.serializedObjectSupporter;
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        java.lang.String str23 = serializedObjectSupporter20.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(picoFactory22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory24);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = serializedObjectSupporter3.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage1.serializedObjectSupporter;
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage8.objectFactory;
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerStepDefinitionMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(serializedObjectSupporter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(objectFactory10);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage4.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage4.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage11.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter18;
        java.lang.String str22 = serializedObjectSupporter18.deserializeObjectString1();
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage4.begin_scenario();
        java.lang.Class class25 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerStepDefinitionsFor(class25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage8.getlanguageMixin();
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerStepDefinitionMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter11;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter11;
        java.lang.reflect.Method method16 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerBeforeMaybe(method16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        javaLanguage16.addStepDefinition(stepDefinition17);
        java.lang.Class class20 = javaLanguage16.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.reflect.Method method22 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerBeforeMaybe(method22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(class20);
        org.junit.Assert.assertNotNull(objectFactory21);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage3.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage7.objectFactory;
        java.lang.Class<?> wildcardClass10 = objectFactory9.getClass();
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage3.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(picoFactory16);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(javaLanguage19);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage5.addStepDefinition(stepDefinition6);
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerBeforeMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage8.addStepDefinition(stepDefinition13);
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage8.addStepDefinition(stepDefinition15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage8.serializedObjectSupporter;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter17;
        java.lang.String str19 = serializedObjectSupporter17.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage20.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/Strix.java" + "'", str19, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage3.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage3.serializedObjectSupporter;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerBeforeMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage8.addStepDefinition(stepDefinition13);
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage8.addStepDefinition(stepDefinition15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage8.serializedObjectSupporter;
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter17;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.lang.Class class7 = javaLanguage2.loadClass("foo/java/lang/String.java");
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(class7);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage12.registerBeforeMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage1.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.objectFactory;
        java.lang.Class class10 = javaLanguage6.loadClass("foo/java/lang/String.java");
        javaLanguage4.registerStepDefinitionsFor(class10);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage4.getlanguageMixin();
        javaLanguage4.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(class10);
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter3.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass5);
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage1.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage1.addStepDefinition(stepDefinition9);
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage1.serializedObjectSupporter;
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList10 = javaLanguage8.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(serializedObjectSupporter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.Class<?> wildcardClass7 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.lang.Class class7 = javaLanguage2.loadClass("foo/java/lang/String.java");
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.getobjectFactory();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(class7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        java.lang.String str14 = serializedObjectSupporter8.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(picoFactory16);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList10 = javaLanguage2.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage6.step_definitions_for("foo/java/lang/String.java");
        java.lang.Class<?> wildcardClass9 = javaLanguage6.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(stepDefinitionList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter3.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass5);
        javaLanguage1.load("foo/java/lang/String.java");
        java.lang.Class class10 = javaLanguage1.loadClass("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class12 = javaLanguage1.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(class10);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter6.deserializeObjectString1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter6;
        java.lang.String str14 = serializedObjectSupporter6.deserializeObjectString1();
        java.lang.String str15 = serializedObjectSupporter6.deserializeObjectString1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage4.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class7 = javaLanguage4.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage9.objectFactory;
        java.lang.Class class13 = javaLanguage9.loadClass("foo/java/lang/String.java");
        javaLanguage2.registerStepDefinitionsFor(class13);
        javaLanguage2.load("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(class13);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage7.languageMixin;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        java.lang.String str14 = serializedObjectSupporter8.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = serializedObjectSupporter8.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage9.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage9.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage9.getlanguageMixin();
        javaLanguage9.begin_scenario();
        java.lang.Class class16 = javaLanguage9.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage19.languageMixin;
        javaLanguage19.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = javaLanguage19.serializedObjectSupporter;
        java.lang.Class class24 = javaLanguage19.loadClass("foo/java/lang/String.java");
        javaLanguage9.registerStepDefinitionsFor(class24);
        javaLanguage1.registerStepDefinitionsFor(class24);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNotNull(class16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNull(serializedObjectSupporter22);
        org.junit.Assert.assertNotNull(class24);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        javaLanguage11.addStepDefinition(stepDefinition16);
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage11.addStepDefinition(stepDefinition18);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage11.serializedObjectSupporter;
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        java.lang.String str24 = serializedObjectSupporter20.deserializeObjectString2();
        java.lang.String str25 = serializedObjectSupporter20.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory26 = serializedObjectSupporter20.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/Strix.java" + "'", str24, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory26);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter3.deserializeObjectObjectFactory2();
        java.lang.String str10 = serializedObjectSupporter3.deserializeObjectString1();
        java.lang.String str11 = serializedObjectSupporter3.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/Strix.java" + "'", str11, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        java.lang.String str22 = serializedObjectSupporter20.deserializeObjectString1();
        java.lang.String str23 = serializedObjectSupporter20.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory28 = serializedObjectSupporter26.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter26.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter26;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory33 = serializedObjectSupporter32.deserializeObjectObjectFactory2();
        java.lang.String str34 = serializedObjectSupporter32.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/Strix.java" + "'", str23, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory28);
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(objectFactory31);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(picoFactory33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "foo/java/lang/Strix.java" + "'", str34, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString1();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory17 = serializedObjectSupporter16.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(picoFactory17);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.objectFactory;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class12 = javaLanguage10.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage9.objectFactory;
        java.lang.Class class13 = javaLanguage9.loadClass("foo/java/lang/String.java");
        javaLanguage2.registerStepDefinitionsFor(class13);
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        java.lang.String str19 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter16.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter16;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList26 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(class13);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(picoFactory22);
        org.junit.Assert.assertNotNull(javaLanguage23);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        java.lang.String str5 = serializedObjectSupporter3.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        javaLanguage2.begin_scenario();
        java.lang.Class class8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionsFor(class8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage4.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage4.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        java.lang.Class<?> wildcardClass15 = serializedObjectSupporter13.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage4.step_definitions_for("foo/java/lang/String.java");
        javaLanguage4.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(stepDefinitionList19);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList12 = javaLanguage10.step_definitions_for("foo/java/lang/String.java");
        java.lang.Class<?> wildcardClass13 = javaLanguage10.getClass();
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass13);
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage8.getobjectFactory();
        java.lang.Class<?> wildcardClass16 = javaLanguage8.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(stepDefinitionList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        java.lang.Class class8 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage1.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(class8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(objectFactory11);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage13.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage13.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class17 = javaLanguage13.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertNull(languageMixin15);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.registerBeforeMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        java.lang.String str22 = serializedObjectSupporter20.deserializeObjectString1();
        java.lang.String str23 = serializedObjectSupporter20.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage2.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/Strix.java" + "'", str23, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory26);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage1.getobjectFactory();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter4.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass7 = serializedObjectSupporter4.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass7);
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter3.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass5);
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage1.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage1.addStepDefinition(stepDefinition9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage1.getobjectFactory();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(objectFactory11);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage5.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList9 = javaLanguage5.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.getlanguageMixin();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerBeforeMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        javaLanguage16.addStepDefinition(stepDefinition17);
        java.lang.reflect.Method method19 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerStepDefinitionMaybe(method19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString1();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage2.languageMixin;
        javaLanguage2.load("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage2.addStepDefinition(stepDefinition18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage2.objectFactory;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(objectFactory20);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage4.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage4.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter4.deserializeObjectObjectFactory2();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter4.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter4.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(picoFactory10);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage11.addStepDefinition(stepDefinition12);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage15.objectFactory;
        java.lang.Class<?> wildcardClass18 = objectFactory17.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage1.objectFactory;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(objectFactory21);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage2.addStepDefinition(stepDefinition9);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage13.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage3.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage7.objectFactory;
        java.lang.Class<?> wildcardClass10 = objectFactory9.getClass();
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage3.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        java.lang.String str15 = serializedObjectSupporter13.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter17.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory19 = serializedObjectSupporter17.deserializeObjectObjectFactory2();
        java.lang.Class<?> wildcardClass20 = picoFactory19.getClass();
        javaLanguage16.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage3.languageMixin;
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList25 = javaLanguage3.step_definitions_for("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/Strix.java" + "'", str15, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(picoFactory19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(languageMixin23);
        org.junit.Assert.assertNotNull(stepDefinitionList25);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.load("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition14 = null;
        javaLanguage13.addStepDefinition(stepDefinition14);
        java.lang.reflect.Method method16 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage13.registerAfterMaybe(method16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory20 = serializedObjectSupporter18.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        java.lang.String str24 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory26 = serializedObjectSupporter18.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass27 = serializedObjectSupporter18.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class30 = javaLanguage1.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory20);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/String.java" + "'", str24, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertNotNull(picoFactory26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(picoFactory5);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        java.lang.Class class8 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(class8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.language.StepDefinition stepDefinition21 = null;
        javaLanguage16.addStepDefinition(stepDefinition21);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = javaLanguage16.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage24.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage28.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = javaLanguage28.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = javaLanguage28.serializedObjectSupporter;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.PicoFactory picoFactory36 = serializedObjectSupporter34.deserializeObjectObjectFactory2();
        java.lang.String str37 = serializedObjectSupporter34.deserializeObjectString1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter39;
        java.lang.reflect.Method method47 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage13.registerAfterMaybe(method47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter23);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNull(languageMixin33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(picoFactory36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "foo/java/lang/String.java" + "'", str40, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "foo/java/lang/String.java" + "'", str42, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage43);
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(javaLanguage45);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.PicoFactory picoFactory18 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage19.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter24.deserializeObjectJavaLanguage2();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter24;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory30 = serializedObjectSupporter27.deserializeObjectObjectFactory1();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = javaLanguage23.serializedObjectSupporter;
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter32;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList35 = javaLanguage19.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(picoFactory18);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/String.java" + "'", str28, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(picoFactory30);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        java.lang.String str9 = serializedObjectSupporter2.deserializeObjectString1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method19 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage18.registerStepDefinitionMaybe(method19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/Strix.java" + "'", str16, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory5);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage8.addStepDefinition(stepDefinition13);
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage8.addStepDefinition(stepDefinition15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage8.serializedObjectSupporter;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter17;
        java.lang.String str19 = serializedObjectSupporter17.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter17.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/Strix.java" + "'", str19, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(picoFactory21);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage2.languageMixin;
        java.lang.Class class21 = javaLanguage2.loadClass("foo/java/lang/String.java");
        java.lang.reflect.Method method22 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(class21);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage1.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage10.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage17.objectFactory;
        java.lang.Class class21 = javaLanguage17.loadClass("foo/java/lang/String.java");
        javaLanguage10.registerStepDefinitionsFor(class21);
        javaLanguage1.registerStepDefinitionsFor(class21);
        cuke4duke.internal.language.StepDefinition stepDefinition24 = null;
        javaLanguage1.addStepDefinition(stepDefinition24);
        java.lang.Class<?> wildcardClass26 = javaLanguage1.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNotNull(class21);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str10 = serializedObjectSupporter0.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage7.addStepDefinition(stepDefinition8);
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerBeforeMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.getobjectFactory();
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerAfterMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(objectFactory10);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage4.languageMixin;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerBeforeMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage3.languageMixin;
        javaLanguage3.begin_scenario();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage11.addStepDefinition(stepDefinition12);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage15.objectFactory;
        java.lang.Class<?> wildcardClass18 = objectFactory17.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition23 = null;
        javaLanguage1.addStepDefinition(stepDefinition23);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage8.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage2();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter15;
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.String str19 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter15.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter15.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.reflect.Method method24 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(picoFactory22);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition3 = null;
        javaLanguage2.addStepDefinition(stepDefinition3);
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage5.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.StepDefinition stepDefinition14 = null;
        javaLanguage9.addStepDefinition(stepDefinition14);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage21.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = javaLanguage21.serializedObjectSupporter;
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.language.StepDefinition stepDefinition31 = null;
        javaLanguage5.addStepDefinition(stepDefinition31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class34 = javaLanguage5.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNull(languageMixin26);
        org.junit.Assert.assertNotNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(picoFactory29);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage17.step_definitions_for("foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(stepDefinitionList19);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage1.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter7.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter7;
        javaLanguage1.load("foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(javaLanguage10);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.PicoFactory picoFactory18 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        java.lang.String str20 = serializedObjectSupporter13.deserializeObjectString2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(picoFactory18);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage8.languageMixin;
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerBeforeMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        java.lang.String str8 = serializedObjectSupporter6.deserializeObjectString1();
        java.lang.String str9 = serializedObjectSupporter6.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter6;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = serializedObjectSupporter6.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/Strix.java" + "'", str9, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/Strix.java" + "'", str8, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter3.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass5);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        javaLanguage1.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage1.languageMixin;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage5.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage5.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage9.objectFactory;
        java.lang.Class class13 = javaLanguage9.loadClass("foo/java/lang/String.java");
        javaLanguage2.registerStepDefinitionsFor(class13);
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage2.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class17 = javaLanguage2.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(class13);
        org.junit.Assert.assertNotNull(objectFactory15);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass9 = serializedObjectSupporter6.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage4.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage9.objectFactory;
        java.lang.Class class13 = javaLanguage9.loadClass("foo/java/lang/String.java");
        javaLanguage2.registerStepDefinitionsFor(class13);
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        java.lang.String str19 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter16.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter16;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class26 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(class13);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(picoFactory22);
        org.junit.Assert.assertNotNull(javaLanguage23);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        java.lang.String str9 = serializedObjectSupporter3.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/Strix.java" + "'", str9, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage6.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage6.addStepDefinition(stepDefinition9);
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage15.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage22.objectFactory;
        java.lang.Class class26 = javaLanguage22.loadClass("foo/java/lang/String.java");
        javaLanguage15.registerStepDefinitionsFor(class26);
        javaLanguage6.registerStepDefinitionsFor(class26);
        javaLanguage1.registerStepDefinitionsFor(class26);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter30 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter30.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter33;
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage32.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage32.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        java.lang.String str41 = serializedObjectSupporter39.deserializeObjectString1();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory43 = serializedObjectSupporter39.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter39;
        cuke4duke.internal.java.JavaLanguage javaLanguage48 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter39;
        cuke4duke.internal.java.PicoFactory picoFactory50 = serializedObjectSupporter39.deserializeObjectObjectFactory1();
        java.lang.String str51 = serializedObjectSupporter39.deserializeObjectString1();
        java.lang.String str52 = serializedObjectSupporter39.deserializeObjectString1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(stepDefinitionList8);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertNotNull(objectFactory24);
        org.junit.Assert.assertNotNull(class26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foo/java/lang/String.java" + "'", str31, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "foo/java/lang/String.java" + "'", str34, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage35);
        org.junit.Assert.assertNull(languageMixin37);
        org.junit.Assert.assertNull(languageMixin38);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "foo/java/lang/String.java" + "'", str41, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "foo/java/lang/Strix.java" + "'", str42, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory43);
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(javaLanguage45);
        org.junit.Assert.assertNotNull(javaLanguage46);
        org.junit.Assert.assertNotNull(javaLanguage48);
        org.junit.Assert.assertNotNull(picoFactory50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "foo/java/lang/String.java" + "'", str51, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "foo/java/lang/String.java" + "'", str52, "foo/java/lang/String.java");
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter25 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter25.deserializeObjectJavaLanguage2();
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter25;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage24.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage30.serializedObjectSupporter = serializedObjectSupporter31;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter31;
        java.lang.String str35 = serializedObjectSupporter31.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter31;
        java.lang.String str38 = serializedObjectSupporter31.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNull(languageMixin28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "foo/java/lang/Strix.java" + "'", str38, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage2.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/Strix.java" + "'", str16, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNull(languageMixin18);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage4.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        java.lang.Class<?> wildcardClass11 = serializedObjectSupporter6.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        java.lang.String str14 = serializedObjectSupporter8.deserializeObjectString2();
        java.lang.String str15 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class18 = javaLanguage16.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter5.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter5.deserializeObjectObjectFactory1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter5;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition11 = null;
        javaLanguage1.addStepDefinition(stepDefinition11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList14 = javaLanguage1.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(serializedObjectSupporter10);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage3.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage7.objectFactory;
        java.lang.Class<?> wildcardClass10 = objectFactory9.getClass();
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage3.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter13;
        javaLanguage3.end_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot stop.  Current container state was: DISPOSED");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(picoFactory16);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage5.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.StepDefinition stepDefinition14 = null;
        javaLanguage9.addStepDefinition(stepDefinition14);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage21.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = javaLanguage21.serializedObjectSupporter;
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.PicoFactory picoFactory31 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNull(languageMixin26);
        org.junit.Assert.assertNotNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(picoFactory31);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition3 = null;
        javaLanguage2.addStepDefinition(stepDefinition3);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter14;
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage13.addStepDefinition(stepDefinition18);
        cuke4duke.internal.language.StepDefinition stepDefinition20 = null;
        javaLanguage13.addStepDefinition(stepDefinition20);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = javaLanguage13.serializedObjectSupporter;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage7.getlanguageMixin();
        java.lang.Class class26 = javaLanguage7.loadClass("foo/java/lang/String.java");
        javaLanguage4.registerStepDefinitionsFor(class26);
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList29 = javaLanguage4.step_definitions_for("foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(serializedObjectSupporter22);
        org.junit.Assert.assertNull(languageMixin24);
        org.junit.Assert.assertNotNull(class26);
        org.junit.Assert.assertNotNull(stepDefinitionList29);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString1();
        java.lang.String str13 = serializedObjectSupporter9.deserializeObjectString2();
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = null;
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter10;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        java.lang.Class class8 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage1.objectFactory;
        javaLanguage1.begin_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(class8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(objectFactory12);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.lang.Class class7 = javaLanguage2.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(class7);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.String str9 = serializedObjectSupporter7.deserializeObjectString1();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.String str13 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter7;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList18 = javaLanguage16.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/Strix.java" + "'", str10, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList7 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(stepDefinitionList7);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage1.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = serializedObjectSupporter16.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(serializedObjectSupporter16);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage3.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage7.objectFactory;
        java.lang.Class<?> wildcardClass10 = objectFactory9.getClass();
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage3.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        java.lang.String str15 = serializedObjectSupporter13.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter17.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory19 = serializedObjectSupporter17.deserializeObjectObjectFactory2();
        java.lang.Class<?> wildcardClass20 = picoFactory19.getClass();
        javaLanguage16.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        java.lang.reflect.Method method23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerBeforeMaybe(method23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/Strix.java" + "'", str15, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(picoFactory19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass7 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage5.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList9 = javaLanguage5.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        javaLanguage11.addStepDefinition(stepDefinition16);
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage11.addStepDefinition(stepDefinition18);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage11.serializedObjectSupporter;
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method24 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage23.registerAfterMaybe(method24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage23);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage5.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage5.addStepDefinition(stepDefinition8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage5.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage5.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage5.addStepDefinition(stepDefinition8);
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage5.languageMixin;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class7 = javaLanguage5.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class10 = javaLanguage8.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage1.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNull(languageMixin11);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage7.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage7.getobjectFactory();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(objectFactory9);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.String str9 = serializedObjectSupporter7.deserializeObjectString1();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.String str13 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter7;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.Class class18 = javaLanguage16.loadClass("foo/java/lang/String.java");
        java.lang.reflect.Method method19 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerBeforeMaybe(method19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/Strix.java" + "'", str10, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(class18);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage3.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage7.objectFactory;
        java.lang.Class<?> wildcardClass10 = objectFactory9.getClass();
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerAfterMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        java.lang.String str8 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        java.lang.reflect.Method method4 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage2.begin_scenario();
        javaLanguage2.end_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage8.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage8.getlanguageMixin();
        javaLanguage8.begin_scenario();
        java.lang.Class class15 = javaLanguage8.loadClass("foo/java/lang/String.java");
        javaLanguage1.registerStepDefinitionsFor(class15);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNotNull(class15);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerStepDefinitionMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage1.getlanguageMixin();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage10.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass15 = serializedObjectSupporter12.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage1.load("foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        javaLanguage2.load("foo/java/lang/String.java");
        java.lang.Class<?> wildcardClass11 = javaLanguage2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        java.lang.String str11 = serializedObjectSupporter9.deserializeObjectString1();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter19.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter19.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory23 = serializedObjectSupporter19.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass25 = serializedObjectSupporter19.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        java.lang.reflect.Method method27 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage18.registerBeforeMaybe(method27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/Strix.java" + "'", str12, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory21);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory23);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage8.begin_scenario();
        javaLanguage8.end_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.lang.Class class7 = javaLanguage2.loadClass("foo/java/lang/String.java");
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(class7);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage14.registerAfterMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage4.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str13 = serializedObjectSupporter9.deserializeObjectString2();
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage4.languageMixin;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNull(languageMixin15);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage13.registerBeforeMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage10.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage2();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        java.lang.String str23 = serializedObjectSupporter21.deserializeObjectString1();
        java.lang.String str24 = serializedObjectSupporter21.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter28 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter28.deserializeObjectJavaLanguage1();
        javaLanguage30.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition32 = null;
        javaLanguage30.addStepDefinition(stepDefinition32);
        javaLanguage30.end_scenario();
        java.lang.Class<?> wildcardClass35 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage10.languageMixin;
        java.lang.reflect.Method method40 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage10.registerAfterMaybe(method40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/Strix.java" + "'", str24, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foo/java/lang/String.java" + "'", str29, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(languageMixin39);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        java.lang.String str9 = serializedObjectSupporter6.deserializeObjectString1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        javaLanguage12.begin_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage8.begin_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage1.languageMixin;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        java.lang.String str5 = serializedObjectSupporter3.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString1();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList17 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage1.getlanguageMixin();
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter3.deserializeObjectObjectFactory2();
        java.lang.String str8 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        java.lang.String str10 = serializedObjectSupporter3.deserializeObjectString1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerBeforeMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        java.lang.String str22 = serializedObjectSupporter20.deserializeObjectString1();
        java.lang.String str23 = serializedObjectSupporter20.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage2.objectFactory;
        javaLanguage2.end_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage2.getobjectFactory();
        javaLanguage2.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/Strix.java" + "'", str23, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory26);
        org.junit.Assert.assertNotNull(objectFactory28);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class5 = javaLanguage3.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(picoFactory9);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.StepDefinition stepDefinition14 = null;
        javaLanguage9.addStepDefinition(stepDefinition14);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage21.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = javaLanguage21.serializedObjectSupporter;
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory32 = serializedObjectSupporter27.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method34 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage33.registerAfterMaybe(method34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNull(languageMixin26);
        org.junit.Assert.assertNotNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(picoFactory32);
        org.junit.Assert.assertNotNull(javaLanguage33);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        java.lang.String str5 = serializedObjectSupporter3.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter9;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(javaLanguage15);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage1.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory17 = serializedObjectSupporter15.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter15.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter15.deserializeObjectJavaLanguage2();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter15.deserializeObjectObjectFactory1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage1.objectFactory;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory17);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(picoFactory22);
        org.junit.Assert.assertNotNull(objectFactory24);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage3.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage7.objectFactory;
        java.lang.Class<?> wildcardClass10 = objectFactory9.getClass();
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage3.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory19 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(picoFactory16);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(picoFactory19);
        org.junit.Assert.assertNotNull(javaLanguage20);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage10.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass15 = serializedObjectSupporter12.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method method18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage10.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass15 = serializedObjectSupporter12.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage1.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage1.getlanguageMixin();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNull(languageMixin20);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin14 = javaLanguage1.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList16 = javaLanguage1.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(languageMixin14);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter9;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = serializedObjectSupporter9.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter25 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter25.deserializeObjectJavaLanguage2();
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter25;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage24.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage30.serializedObjectSupporter = serializedObjectSupporter31;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter31;
        java.lang.String str35 = serializedObjectSupporter31.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter31;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter38 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter38.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory40 = javaLanguage39.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage39.objectFactory;
        java.lang.Class class43 = javaLanguage39.loadClass("foo/java/lang/String.java");
        javaLanguage19.registerStepDefinitionsFor(class43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList46 = javaLanguage19.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNull(languageMixin28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(javaLanguage39);
        org.junit.Assert.assertNotNull(objectFactory40);
        org.junit.Assert.assertNotNull(objectFactory41);
        org.junit.Assert.assertNotNull(class43);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage16.begin_scenario();
        javaLanguage16.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition19 = null;
        javaLanguage16.addStepDefinition(stepDefinition19);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter24;
        cuke4duke.internal.language.StepDefinition stepDefinition28 = null;
        javaLanguage23.addStepDefinition(stepDefinition28);
        cuke4duke.internal.language.StepDefinition stepDefinition30 = null;
        javaLanguage23.addStepDefinition(stepDefinition30);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = javaLanguage23.serializedObjectSupporter;
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter32;
        java.lang.Class<?> wildcardClass34 = javaLanguage16.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class37 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter17.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage2();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter17.deserializeObjectObjectFactory2();
        java.lang.String str22 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory23 = serializedObjectSupporter17.deserializeObjectObjectFactory1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter17;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory23);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage8.begin_scenario();
        javaLanguage8.end_scenario();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage15.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter22;
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter22;
        java.lang.String str26 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method32 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage31.registerBeforeMaybe(method32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/String.java" + "'", str26, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage31);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        javaLanguage11.addStepDefinition(stepDefinition16);
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage11.addStepDefinition(stepDefinition18);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage11.serializedObjectSupporter;
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter20;
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList23 = javaLanguage4.step_definitions_for("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList25 = javaLanguage4.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(stepDefinitionList23);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage11.addStepDefinition(stepDefinition12);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage15.objectFactory;
        java.lang.Class<?> wildcardClass18 = objectFactory17.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage1.load("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage1.serializedObjectSupporter;
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(serializedObjectSupporter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory8);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        javaLanguage2.begin_scenario();
        javaLanguage2.end_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage12.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage12.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage12.getlanguageMixin();
        java.lang.Class class18 = javaLanguage12.loadClass("foo/java/lang/String.java");
        javaLanguage2.registerStepDefinitionsFor(class18);
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition25 = null;
        javaLanguage24.addStepDefinition(stepDefinition25);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter27.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage28.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage28.objectFactory;
        java.lang.Class<?> wildcardClass31 = objectFactory30.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = javaLanguage24.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot stop.  Current container state was: DISPOSED");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNotNull(class18);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(objectFactory29);
        org.junit.Assert.assertNotNull(objectFactory30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass5 = picoFactory4.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage15.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter22;
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter22;
        java.lang.String str26 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = serializedObjectSupporter22.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/String.java" + "'", str26, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage31);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        java.lang.String str11 = serializedObjectSupporter9.deserializeObjectString1();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.PicoFactory picoFactory18 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        java.lang.String str19 = serializedObjectSupporter9.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/Strix.java" + "'", str12, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(picoFactory18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        javaLanguage4.end_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage4.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList13 = javaLanguage11.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        java.lang.String str16 = serializedObjectSupporter14.deserializeObjectString1();
        java.lang.String str17 = serializedObjectSupporter14.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage18.begin_scenario();
        java.lang.Class<?> wildcardClass20 = javaLanguage18.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(stepDefinitionList13);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/Strix.java" + "'", str17, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = null;
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage11.serializedObjectSupporter;
        java.lang.Class class16 = javaLanguage11.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = null;
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = javaLanguage19.serializedObjectSupporter;
        java.lang.Class<?> wildcardClass23 = javaLanguage19.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter26.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage27.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage27.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage27.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage27.getlanguageMixin();
        javaLanguage27.begin_scenario();
        java.lang.Class class34 = javaLanguage27.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin35 = javaLanguage27.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage27.getlanguageMixin();
        java.lang.Class<?> wildcardClass37 = javaLanguage27.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        java.lang.reflect.Method method39 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(class16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNull(serializedObjectSupporter22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(objectFactory28);
        org.junit.Assert.assertNotNull(objectFactory29);
        org.junit.Assert.assertNotNull(objectFactory30);
        org.junit.Assert.assertNull(languageMixin31);
        org.junit.Assert.assertNotNull(class34);
        org.junit.Assert.assertNull(languageMixin35);
        org.junit.Assert.assertNull(languageMixin36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(picoFactory9);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = javaLanguage3.serializedObjectSupporter;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerStepDefinitionMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage6.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage6.addStepDefinition(stepDefinition9);
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage15.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage22.objectFactory;
        java.lang.Class class26 = javaLanguage22.loadClass("foo/java/lang/String.java");
        javaLanguage15.registerStepDefinitionsFor(class26);
        javaLanguage6.registerStepDefinitionsFor(class26);
        javaLanguage1.registerStepDefinitionsFor(class26);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter30 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter30.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter33;
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage32.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage32.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        java.lang.String str41 = serializedObjectSupporter39.deserializeObjectString1();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory43 = serializedObjectSupporter39.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter39;
        cuke4duke.internal.java.JavaLanguage javaLanguage48 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter39;
        java.lang.String str50 = serializedObjectSupporter39.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory51 = serializedObjectSupporter39.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(stepDefinitionList8);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertNotNull(objectFactory24);
        org.junit.Assert.assertNotNull(class26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foo/java/lang/String.java" + "'", str31, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "foo/java/lang/String.java" + "'", str34, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage35);
        org.junit.Assert.assertNull(languageMixin37);
        org.junit.Assert.assertNull(languageMixin38);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "foo/java/lang/String.java" + "'", str41, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "foo/java/lang/Strix.java" + "'", str42, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory43);
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(javaLanguage45);
        org.junit.Assert.assertNotNull(javaLanguage46);
        org.junit.Assert.assertNotNull(javaLanguage48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "foo/java/lang/Strix.java" + "'", str50, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory51);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory12 = serializedObjectSupporter11.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter11.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter11);
        org.junit.Assert.assertNotNull(picoFactory12);
        org.junit.Assert.assertNotNull(picoFactory13);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerAfterMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory3);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage9.languageMixin;
        java.lang.Class<?> wildcardClass11 = javaLanguage9.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage6.getobjectFactory();
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.registerBeforeMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertNotNull(objectFactory14);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage9.languageMixin;
        java.lang.Class<?> wildcardClass11 = javaLanguage9.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage6.addStepDefinition(stepDefinition15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter17.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage2();
        javaLanguage18.serializedObjectSupporter = serializedObjectSupporter19;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter19.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.getobjectFactory();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter4.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass7 = serializedObjectSupporter4.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition19 = null;
        javaLanguage18.addStepDefinition(stepDefinition19);
        java.lang.reflect.Method method21 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage18.registerAfterMaybe(method21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/Strix.java" + "'", str16, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage8.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage8.addStepDefinition(stepDefinition10);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter14.deserializeObjectObjectFactory2();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.String str18 = serializedObjectSupporter14.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory19 = serializedObjectSupporter14.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter14;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = javaLanguage8.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/Strix.java" + "'", str18, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory19);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(serializedObjectSupporter22);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage19.getobjectFactory();
        java.lang.Class class22 = javaLanguage19.loadClass("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertNotNull(class22);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.getlanguageMixin();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerAfterMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage13.languageMixin;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNull(languageMixin15);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerAfterMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage6.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage6.addStepDefinition(stepDefinition9);
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage15.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage22.objectFactory;
        java.lang.Class class26 = javaLanguage22.loadClass("foo/java/lang/String.java");
        javaLanguage15.registerStepDefinitionsFor(class26);
        javaLanguage6.registerStepDefinitionsFor(class26);
        javaLanguage1.registerStepDefinitionsFor(class26);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(stepDefinitionList8);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertNotNull(objectFactory24);
        org.junit.Assert.assertNotNull(class26);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        javaLanguage9.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition11 = null;
        javaLanguage9.addStepDefinition(stepDefinition11);
        javaLanguage9.end_scenario();
        java.lang.Class<?> wildcardClass14 = javaLanguage9.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage6.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage6.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class19 = javaLanguage6.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNotNull(objectFactory17);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage3.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage7.objectFactory;
        java.lang.Class<?> wildcardClass10 = objectFactory9.getClass();
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage3.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory19 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method21 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage20.registerAfterMaybe(method21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(picoFactory16);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(picoFactory19);
        org.junit.Assert.assertNotNull(javaLanguage20);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method4 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerBeforeMaybe(method4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        javaLanguage2.end_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot stop.  Current container state was: DISPOSED");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        java.lang.Class class5 = javaLanguage1.loadClass("foo/java/lang/String.java");
        javaLanguage1.begin_scenario();
        java.lang.Class class8 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage1.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage1.addStepDefinition(stepDefinition10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList13 = javaLanguage1.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(class5);
        org.junit.Assert.assertNotNull(class8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage5.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage5.objectFactory;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.languageMixin;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter25 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter25.deserializeObjectJavaLanguage2();
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter25;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage24.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage30.serializedObjectSupporter = serializedObjectSupporter31;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter31;
        java.lang.String str35 = serializedObjectSupporter31.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter31;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter38 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter38.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory40 = javaLanguage39.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter41 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = serializedObjectSupporter41.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = serializedObjectSupporter41.deserializeObjectJavaLanguage2();
        javaLanguage39.serializedObjectSupporter = serializedObjectSupporter41;
        cuke4duke.internal.java.PicoFactory picoFactory45 = serializedObjectSupporter41.deserializeObjectObjectFactory2();
        java.lang.String str46 = serializedObjectSupporter41.deserializeObjectString2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter41;
        java.lang.reflect.Method method48 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage19.registerBeforeMaybe(method48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNull(languageMixin28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(javaLanguage39);
        org.junit.Assert.assertNotNull(objectFactory40);
        org.junit.Assert.assertNotNull(javaLanguage42);
        org.junit.Assert.assertNotNull(javaLanguage43);
        org.junit.Assert.assertNotNull(picoFactory45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "foo/java/lang/Strix.java" + "'", str46, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage8.addStepDefinition(stepDefinition13);
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage8.addStepDefinition(stepDefinition15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage8.serializedObjectSupporter;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.String str28 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory31 = serializedObjectSupporter24.deserializeObjectObjectFactory1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter24;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter33.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage34.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter36 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = serializedObjectSupporter36.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter36.deserializeObjectJavaLanguage2();
        javaLanguage34.serializedObjectSupporter = serializedObjectSupporter36;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter40 = javaLanguage34.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter41 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str42 = serializedObjectSupporter41.deserializeObjectString1();
        java.lang.Class<?> wildcardClass43 = serializedObjectSupporter41.getClass();
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage34.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter47 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage48 = serializedObjectSupporter47.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter49 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = serializedObjectSupporter49.deserializeObjectJavaLanguage2();
        javaLanguage48.serializedObjectSupporter = serializedObjectSupporter49;
        cuke4duke.internal.language.LanguageMixin languageMixin52 = javaLanguage48.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter53 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = serializedObjectSupporter53.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter55 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = serializedObjectSupporter55.deserializeObjectJavaLanguage2();
        javaLanguage54.serializedObjectSupporter = serializedObjectSupporter55;
        javaLanguage48.serializedObjectSupporter = serializedObjectSupporter55;
        java.lang.String str59 = serializedObjectSupporter55.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage60 = serializedObjectSupporter55.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage61 = serializedObjectSupporter55.deserializeObjectJavaLanguage2();
        javaLanguage34.serializedObjectSupporter = serializedObjectSupporter55;
        cuke4duke.internal.java.JavaLanguage javaLanguage63 = serializedObjectSupporter55.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = serializedObjectSupporter55.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter55;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/String.java" + "'", str28, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage29);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(picoFactory31);
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertNotNull(objectFactory35);
        org.junit.Assert.assertNotNull(javaLanguage37);
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertNotNull(serializedObjectSupporter40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "foo/java/lang/String.java" + "'", str42, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(javaLanguage48);
        org.junit.Assert.assertNotNull(javaLanguage50);
        org.junit.Assert.assertNull(languageMixin52);
        org.junit.Assert.assertNotNull(javaLanguage54);
        org.junit.Assert.assertNotNull(javaLanguage56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "foo/java/lang/String.java" + "'", str59, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage60);
        org.junit.Assert.assertNotNull(javaLanguage61);
        org.junit.Assert.assertNotNull(javaLanguage63);
        org.junit.Assert.assertNotNull(javaLanguage64);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage2.addStepDefinition(stepDefinition9);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage14.languageMixin;
        javaLanguage14.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage14.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory19 = serializedObjectSupporter18.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory20 = serializedObjectSupporter18.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter18;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage2.objectFactory;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNotNull(picoFactory19);
        org.junit.Assert.assertNotNull(picoFactory20);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(objectFactory26);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage2.getlanguageMixin();
        java.lang.reflect.Method method20 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin19);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class4 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.String str9 = serializedObjectSupporter7.deserializeObjectString1();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.String str13 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter7;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage5.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage5.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/Strix.java" + "'", str10, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(objectFactory17);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage4.languageMixin;
        javaLanguage4.end_scenario();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList12 = javaLanguage4.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage14.serializedObjectSupporter;
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter20.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(picoFactory22);
        org.junit.Assert.assertNotNull(javaLanguage23);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.String str7 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        java.lang.String str11 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage1.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage10.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage17.objectFactory;
        java.lang.Class class21 = javaLanguage17.loadClass("foo/java/lang/String.java");
        javaLanguage10.registerStepDefinitionsFor(class21);
        javaLanguage1.registerStepDefinitionsFor(class21);
        cuke4duke.internal.language.StepDefinition stepDefinition24 = null;
        javaLanguage1.addStepDefinition(stepDefinition24);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNotNull(class21);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage1.serializedObjectSupporter;
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        java.lang.String str10 = serializedObjectSupporter6.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = serializedObjectSupporter6.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(serializedObjectSupporter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage1.languageMixin;
        java.lang.Class<?> wildcardClass13 = javaLanguage1.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.String str7 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage10.languageMixin;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNull(languageMixin11);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage1.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage1.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(serializedObjectSupporter16);
        org.junit.Assert.assertNull(languageMixin17);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.PicoFactory picoFactory18 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage19.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter24.deserializeObjectJavaLanguage2();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter24;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory30 = serializedObjectSupporter27.deserializeObjectObjectFactory1();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = javaLanguage23.serializedObjectSupporter;
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter32;
        cuke4duke.internal.java.PicoFactory picoFactory34 = serializedObjectSupporter32.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = serializedObjectSupporter32.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(picoFactory18);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/String.java" + "'", str28, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(picoFactory30);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(picoFactory34);
        org.junit.Assert.assertNotNull(javaLanguage35);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        javaLanguage18.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/Strix.java" + "'", str16, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage2.addStepDefinition(stepDefinition9);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage13.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage6.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage6.addStepDefinition(stepDefinition9);
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage15.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage22.objectFactory;
        java.lang.Class class26 = javaLanguage22.loadClass("foo/java/lang/String.java");
        javaLanguage15.registerStepDefinitionsFor(class26);
        javaLanguage6.registerStepDefinitionsFor(class26);
        javaLanguage1.registerStepDefinitionsFor(class26);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter30 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter30.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter33;
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage32.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage32.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        java.lang.String str41 = serializedObjectSupporter39.deserializeObjectString1();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory43 = serializedObjectSupporter39.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter39;
        cuke4duke.internal.java.JavaLanguage javaLanguage48 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter39;
        cuke4duke.internal.language.LanguageMixin languageMixin50 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition51 = null;
        javaLanguage1.addStepDefinition(stepDefinition51);
        cuke4duke.internal.java.ObjectFactory objectFactory53 = javaLanguage1.objectFactory;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(stepDefinitionList8);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertNotNull(objectFactory24);
        org.junit.Assert.assertNotNull(class26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foo/java/lang/String.java" + "'", str31, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "foo/java/lang/String.java" + "'", str34, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage35);
        org.junit.Assert.assertNull(languageMixin37);
        org.junit.Assert.assertNull(languageMixin38);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "foo/java/lang/String.java" + "'", str41, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "foo/java/lang/Strix.java" + "'", str42, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory43);
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(javaLanguage45);
        org.junit.Assert.assertNotNull(javaLanguage46);
        org.junit.Assert.assertNotNull(javaLanguage48);
        org.junit.Assert.assertNull(languageMixin50);
        org.junit.Assert.assertNotNull(objectFactory53);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        javaLanguage11.addStepDefinition(stepDefinition16);
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage11.addStepDefinition(stepDefinition18);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage11.serializedObjectSupporter;
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory23 = serializedObjectSupporter20.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = serializedObjectSupporter20.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory23);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(javaLanguage25);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.objectFactory;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage12.registerBeforeMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = javaLanguage10.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNull(serializedObjectSupporter12);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage10.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass15 = serializedObjectSupporter12.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method method18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerAfterMaybe(method18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class8 = javaLanguage6.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.String str9 = serializedObjectSupporter7.deserializeObjectString1();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.String str13 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter7;
        javaLanguage5.begin_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/Strix.java" + "'", str10, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage10.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerBeforeMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        java.lang.String str14 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        java.lang.String str16 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.String str17 = serializedObjectSupporter8.deserializeObjectString2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/Strix.java" + "'", str17, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory20 = serializedObjectSupporter18.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        java.lang.String str24 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory26 = serializedObjectSupporter18.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass27 = serializedObjectSupporter18.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage1.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList31 = javaLanguage1.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory20);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/String.java" + "'", str24, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertNotNull(picoFactory26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter14;
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage13.addStepDefinition(stepDefinition18);
        cuke4duke.internal.language.StepDefinition stepDefinition20 = null;
        javaLanguage13.addStepDefinition(stepDefinition20);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = javaLanguage13.serializedObjectSupporter;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage7.getlanguageMixin();
        java.lang.Class class26 = javaLanguage7.loadClass("foo/java/lang/String.java");
        javaLanguage4.registerStepDefinitionsFor(class26);
        cuke4duke.internal.language.StepDefinition stepDefinition28 = null;
        javaLanguage4.addStepDefinition(stepDefinition28);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(serializedObjectSupporter22);
        org.junit.Assert.assertNull(languageMixin24);
        org.junit.Assert.assertNotNull(class26);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = javaLanguage13.getlanguageMixin();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNull(languageMixin14);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerStepDefinitionsFor(class5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage8.begin_scenario();
        java.lang.Class<?> wildcardClass10 = javaLanguage8.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.end_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage15.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter22;
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter22;
        java.lang.String str26 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        java.lang.String str32 = serializedObjectSupporter22.deserializeObjectString1();
        java.lang.String str33 = serializedObjectSupporter22.deserializeObjectString1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/String.java" + "'", str26, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "foo/java/lang/String.java" + "'", str32, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "foo/java/lang/String.java" + "'", str33, "foo/java/lang/String.java");
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage14.serializedObjectSupporter;
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage10.objectFactory;
        java.lang.Class<?> wildcardClass24 = javaLanguage10.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(objectFactory22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = javaLanguage1.serializedObjectSupporter;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class5 = javaLanguage3.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter5.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter5.deserializeObjectObjectFactory1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter5;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage11.registerAfterMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(javaLanguage11);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = javaLanguage1.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList15 = javaLanguage1.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.String str9 = serializedObjectSupporter7.deserializeObjectString1();
        java.lang.String str10 = serializedObjectSupporter7.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        java.lang.String str13 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter7;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage5.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage5.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage20.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage20.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter27.deserializeObjectJavaLanguage2();
        java.lang.String str29 = serializedObjectSupporter27.deserializeObjectString1();
        java.lang.String str30 = serializedObjectSupporter27.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory31 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter27.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter27.deserializeObjectJavaLanguage2();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter37 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory39 = serializedObjectSupporter37.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter37.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory41 = serializedObjectSupporter37.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = serializedObjectSupporter37.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass43 = serializedObjectSupporter37.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/Strix.java" + "'", str10, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNull(languageMixin25);
        org.junit.Assert.assertNull(languageMixin26);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foo/java/lang/String.java" + "'", str29, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/Strix.java" + "'", str30, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory31);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(javaLanguage33);
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "foo/java/lang/String.java" + "'", str38, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory39);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(picoFactory41);
        org.junit.Assert.assertNotNull(javaLanguage42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage6.addStepDefinition(stepDefinition7);
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter5.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter5.deserializeObjectObjectFactory1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter5;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter10.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(picoFactory11);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList7 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        java.lang.Class<?> wildcardClass8 = javaLanguage2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(stepDefinitionList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage5.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage5.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory12 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(picoFactory15);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage3.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter5.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter5.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString2();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        java.lang.String str15 = serializedObjectSupporter9.deserializeObjectString1();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter20;
        java.lang.String str24 = serializedObjectSupporter20.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter20;
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/Strix.java" + "'", str12, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/String.java" + "'", str21, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/String.java" + "'", str24, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage25);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        java.lang.String str9 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str10 = serializedObjectSupporter2.deserializeObjectString1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString1();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        javaLanguage11.addStepDefinition(stepDefinition16);
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage11.addStepDefinition(stepDefinition18);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage11.serializedObjectSupporter;
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter20;
        java.lang.String str22 = serializedObjectSupporter20.deserializeObjectString2();
        java.lang.String str23 = serializedObjectSupporter20.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/Strix.java" + "'", str22, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter4.deserializeObjectObjectFactory2();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter4.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory12 = serializedObjectSupporter10.deserializeObjectObjectFactory2();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString2();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter10;
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage9.registerStepDefinitionMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage10.languageMixin;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNull(languageMixin11);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage2.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage1.serializedObjectSupporter;
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        java.lang.String str10 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory12 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(serializedObjectSupporter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(picoFactory12);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str11 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/Strix.java" + "'", str11, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.String str8 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.languageMixin;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass9 = serializedObjectSupporter6.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage4.addStepDefinition(stepDefinition12);
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerAfterMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNull(languageMixin11);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage2.begin_scenario();
        javaLanguage2.end_scenario();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(stepDefinitionList6);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage1.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(objectFactory12);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter6.deserializeObjectString1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter6;
        javaLanguage1.begin_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage9.addStepDefinition(stepDefinition10);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter14.deserializeObjectObjectFactory2();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.String str18 = serializedObjectSupporter14.deserializeObjectString2();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter14;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/Strix.java" + "'", str18, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        java.lang.Class<?> wildcardClass21 = serializedObjectSupporter19.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        java.lang.String str25 = serializedObjectSupporter23.deserializeObjectString1();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage27.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass32 = serializedObjectSupporter29.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.language.LanguageMixin languageMixin35 = javaLanguage2.getlanguageMixin();
        java.lang.reflect.Method method36 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNull(languageMixin35);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage5.begin_scenario();
        javaLanguage5.end_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot stop.  Current container state was: DISPOSED");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter6.deserializeObjectString1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        java.lang.String str10 = serializedObjectSupporter2.deserializeObjectString1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage1.serializedObjectSupporter;
        java.lang.Class<?> wildcardClass9 = serializedObjectSupporter8.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.PicoFactory picoFactory18 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage19.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter24.deserializeObjectJavaLanguage2();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter24;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory30 = serializedObjectSupporter27.deserializeObjectObjectFactory1();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = javaLanguage23.serializedObjectSupporter;
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter32;
        cuke4duke.internal.java.PicoFactory picoFactory34 = serializedObjectSupporter32.deserializeObjectObjectFactory2();
        java.lang.Class<?> wildcardClass35 = serializedObjectSupporter32.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(picoFactory18);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/String.java" + "'", str28, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(picoFactory30);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(picoFactory34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage11.getlanguageMixin();
        javaLanguage11.begin_scenario();
        java.lang.Class<?> wildcardClass18 = javaLanguage11.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage16.begin_scenario();
        javaLanguage16.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition19 = null;
        javaLanguage16.addStepDefinition(stepDefinition19);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter24;
        cuke4duke.internal.language.StepDefinition stepDefinition28 = null;
        javaLanguage23.addStepDefinition(stepDefinition28);
        cuke4duke.internal.language.StepDefinition stepDefinition30 = null;
        javaLanguage23.addStepDefinition(stepDefinition30);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = javaLanguage23.serializedObjectSupporter;
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter32;
        java.lang.Class<?> wildcardClass34 = javaLanguage16.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList37 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = null;
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage20.languageMixin;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNull(languageMixin23);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage4.languageMixin;
        javaLanguage4.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList12 = javaLanguage10.step_definitions_for("foo/java/lang/String.java");
        java.lang.Class<?> wildcardClass13 = javaLanguage10.getClass();
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass13);
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage8.getobjectFactory();
        javaLanguage8.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(stepDefinitionList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(objectFactory15);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/Strix.java" + "'", str8, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        java.lang.String str20 = serializedObjectSupporter13.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter13.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter13.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = serializedObjectSupporter13.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/Strix.java" + "'", str21, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter4.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter4.deserializeObjectString1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        javaLanguage8.begin_scenario();
        java.lang.Class<?> wildcardClass10 = javaLanguage8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        java.lang.String str14 = serializedObjectSupporter8.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(picoFactory16);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        java.lang.Class class5 = javaLanguage1.loadClass("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList7 = javaLanguage1.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(class5);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class5 = javaLanguage3.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage3.serializedObjectSupporter;
        javaLanguage3.load("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(class5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString1();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        javaLanguage2.end_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition21 = null;
        javaLanguage2.addStepDefinition(stepDefinition21);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin20);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        java.lang.String str20 = serializedObjectSupporter13.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter13.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList25 = javaLanguage23.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/Strix.java" + "'", str21, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter25 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter25.deserializeObjectJavaLanguage2();
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter25;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage24.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage30.serializedObjectSupporter = serializedObjectSupporter31;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter31;
        java.lang.String str35 = serializedObjectSupporter31.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter31;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter38 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter38.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory40 = javaLanguage39.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter41 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = serializedObjectSupporter41.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = serializedObjectSupporter41.deserializeObjectJavaLanguage2();
        javaLanguage39.serializedObjectSupporter = serializedObjectSupporter41;
        cuke4duke.internal.java.PicoFactory picoFactory45 = serializedObjectSupporter41.deserializeObjectObjectFactory2();
        java.lang.String str46 = serializedObjectSupporter41.deserializeObjectString2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter41;
        cuke4duke.internal.java.PicoFactory picoFactory48 = serializedObjectSupporter41.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNull(languageMixin28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(javaLanguage39);
        org.junit.Assert.assertNotNull(objectFactory40);
        org.junit.Assert.assertNotNull(javaLanguage42);
        org.junit.Assert.assertNotNull(javaLanguage43);
        org.junit.Assert.assertNotNull(picoFactory45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "foo/java/lang/Strix.java" + "'", str46, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory48);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage4.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        java.lang.Class<?> wildcardClass9 = javaLanguage4.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(stepDefinitionList6);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/Strix.java" + "'", str5, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerBeforeMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter3.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass5);
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage1.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage1.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class11 = javaLanguage1.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory12 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList15 = javaLanguage7.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory12);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString1();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage9.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage7.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage8.begin_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory19 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/Strix.java" + "'", str16, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(picoFactory19);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        java.lang.String str20 = serializedObjectSupporter13.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter13.deserializeObjectString2();
        java.lang.String str22 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass24 = serializedObjectSupporter13.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/Strix.java" + "'", str21, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        javaLanguage1.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage1.addStepDefinition(stepDefinition9);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage1.getlanguageMixin();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class4 = javaLanguage1.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.getobjectFactory();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage4.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str13 = serializedObjectSupporter9.deserializeObjectString2();
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str15 = serializedObjectSupporter9.deserializeObjectString2();
        java.lang.String str16 = serializedObjectSupporter9.deserializeObjectString2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/Strix.java" + "'", str15, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/Strix.java" + "'", str16, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.String str8 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter5.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter5.deserializeObjectObjectFactory1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter5;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter13;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/Strix.java" + "'", str5, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.lang.Class class7 = javaLanguage2.loadClass("foo/java/lang/String.java");
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(class7);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage15.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter22;
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter22;
        java.lang.String str26 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter22;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/String.java" + "'", str26, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage28);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        java.lang.String str9 = serializedObjectSupporter3.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.StepDefinition stepDefinition14 = null;
        javaLanguage9.addStepDefinition(stepDefinition14);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage21.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = javaLanguage21.serializedObjectSupporter;
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory32 = serializedObjectSupporter27.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class35 = javaLanguage33.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNull(languageMixin26);
        org.junit.Assert.assertNotNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(picoFactory32);
        org.junit.Assert.assertNotNull(javaLanguage33);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        java.lang.Class<?> wildcardClass21 = serializedObjectSupporter19.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        java.lang.String str25 = serializedObjectSupporter23.deserializeObjectString1();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage27.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass32 = serializedObjectSupporter29.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage2.end_scenario();
        javaLanguage2.load("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter3.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass5);
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage1.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage1.addStepDefinition(stepDefinition9);
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNull(languageMixin13);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage2.objectFactory;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage9.objectFactory;
        java.lang.Class class13 = javaLanguage9.loadClass("foo/java/lang/String.java");
        javaLanguage2.registerStepDefinitionsFor(class13);
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory17 = serializedObjectSupporter16.deserializeObjectObjectFactory1();
        java.lang.String str18 = serializedObjectSupporter16.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        java.lang.String str20 = serializedObjectSupporter16.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter16;
        java.lang.String str22 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory23 = serializedObjectSupporter16.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(class13);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNotNull(picoFactory17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/Strix.java" + "'", str18, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory23);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        java.lang.String str11 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage14.objectFactory;
        java.lang.Class class18 = javaLanguage14.loadClass("foo/java/lang/String.java");
        javaLanguage12.registerStepDefinitionsFor(class18);
        javaLanguage1.registerStepDefinitionsFor(class18);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = serializedObjectSupporter21.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(class18);
        org.junit.Assert.assertNotNull(serializedObjectSupporter21);
        org.junit.Assert.assertNotNull(javaLanguage22);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method3 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        javaLanguage11.addStepDefinition(stepDefinition16);
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage11.addStepDefinition(stepDefinition18);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = javaLanguage11.serializedObjectSupporter;
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.language.StepDefinition stepDefinition22 = null;
        javaLanguage4.addStepDefinition(stepDefinition22);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = javaLanguage4.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(serializedObjectSupporter20);
        org.junit.Assert.assertNotNull(serializedObjectSupporter24);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.getobjectFactory();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage8.addStepDefinition(stepDefinition13);
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage8.addStepDefinition(stepDefinition15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage8.serializedObjectSupporter;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter17;
        java.lang.String str19 = serializedObjectSupporter17.deserializeObjectString2();
        java.lang.String str20 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter17.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/Strix.java" + "'", str19, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass11 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerStepDefinitionMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage4.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage8.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage2();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter15;
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString1();
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter15;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage1.getlanguageMixin();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage1.languageMixin;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage4.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage4.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        java.lang.Class<?> wildcardClass15 = serializedObjectSupporter13.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage4.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.StepDefinition stepDefinition20 = null;
        javaLanguage4.addStepDefinition(stepDefinition20);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage4.objectFactory;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(stepDefinitionList19);
        org.junit.Assert.assertNotNull(objectFactory22);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage9.begin_scenario();
        javaLanguage9.end_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage9.languageMixin;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.Class<?> wildcardClass10 = serializedObjectSupporter8.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage15.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter22;
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter22;
        java.lang.String str26 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory31 = serializedObjectSupporter22.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/String.java" + "'", str26, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(picoFactory31);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString1();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage2.languageMixin;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter16);
        org.junit.Assert.assertNull(languageMixin17);
        org.junit.Assert.assertNull(languageMixin18);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage1.serializedObjectSupporter;
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage8.getobjectFactory();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(serializedObjectSupporter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(objectFactory10);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage3.begin_scenario();
        javaLanguage3.end_scenario();
        javaLanguage3.begin_scenario();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage13.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNull(languageMixin14);
        org.junit.Assert.assertNull(serializedObjectSupporter15);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage1.languageMixin;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNull(languageMixin13);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        java.lang.Class class8 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        javaLanguage12.addStepDefinition(stepDefinition17);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = javaLanguage12.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage2();
        javaLanguage20.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter22.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter25 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter25.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter25.deserializeObjectJavaLanguage2();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter25;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage23.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage23.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        java.lang.String str33 = serializedObjectSupporter31.deserializeObjectString1();
        java.lang.String str34 = serializedObjectSupporter31.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory35 = serializedObjectSupporter31.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter38 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str39 = serializedObjectSupporter38.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter38.deserializeObjectJavaLanguage1();
        javaLanguage40.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition42 = null;
        javaLanguage40.addStepDefinition(stepDefinition42);
        javaLanguage40.end_scenario();
        java.lang.Class<?> wildcardClass45 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin50 = javaLanguage1.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList52 = javaLanguage1.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(class8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter19);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(objectFactory24);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(objectFactory29);
        org.junit.Assert.assertNull(languageMixin30);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "foo/java/lang/String.java" + "'", str33, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "foo/java/lang/Strix.java" + "'", str34, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory35);
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(javaLanguage37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foo/java/lang/String.java" + "'", str39, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNull(languageMixin50);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(picoFactory16);
        org.junit.Assert.assertNotNull(javaLanguage17);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.language.StepDefinition stepDefinition21 = null;
        javaLanguage16.addStepDefinition(stepDefinition21);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = javaLanguage16.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage24.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage28.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = javaLanguage28.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = javaLanguage28.serializedObjectSupporter;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.PicoFactory picoFactory36 = serializedObjectSupporter34.deserializeObjectObjectFactory2();
        java.lang.String str37 = serializedObjectSupporter34.deserializeObjectString1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter39;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = serializedObjectSupporter39.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter23);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNull(languageMixin33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(picoFactory36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "foo/java/lang/String.java" + "'", str40, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "foo/java/lang/String.java" + "'", str42, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage43);
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(javaLanguage45);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.objectFactory;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = serializedObjectSupporter8.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList16 = javaLanguage14.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        javaLanguage1.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage1.getlanguageMixin();
        javaLanguage1.load("foo/java/lang/String.java");
        javaLanguage1.end_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        javaLanguage2.begin_scenario();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList7 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(stepDefinitionList7);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.PicoFactory picoFactory18 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass20 = serializedObjectSupporter13.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(picoFactory18);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition3 = null;
        javaLanguage2.addStepDefinition(stepDefinition3);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass7 = serializedObjectSupporter2.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage7.addStepDefinition(stepDefinition12);
        javaLanguage7.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter18;
        java.lang.String str22 = serializedObjectSupporter18.deserializeObjectString1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter18;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        java.lang.Class<?> wildcardClass26 = serializedObjectSupporter24.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        java.lang.reflect.Method method29 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        java.lang.Class<?> wildcardClass21 = serializedObjectSupporter19.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        java.lang.String str25 = serializedObjectSupporter23.deserializeObjectString1();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage27.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass32 = serializedObjectSupporter29.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage2.end_scenario();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList37 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage6.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage3.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage3.addStepDefinition(stepDefinition5);
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage3.objectFactory;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage5.objectFactory;
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class5 = javaLanguage3.loadClass("foo/java/lang/String.java");
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerBeforeMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(class5);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        java.lang.String str11 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage12.registerAfterMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList10 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = javaLanguage3.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage3.getlanguageMixin();
        javaLanguage3.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class8 = javaLanguage3.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString1();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = serializedObjectSupporter17.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.String str7 = serializedObjectSupporter2.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.language.StepDefinition stepDefinition21 = null;
        javaLanguage16.addStepDefinition(stepDefinition21);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = javaLanguage16.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage24.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage28.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = javaLanguage28.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = javaLanguage28.serializedObjectSupporter;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.PicoFactory picoFactory36 = serializedObjectSupporter34.deserializeObjectObjectFactory2();
        java.lang.String str37 = serializedObjectSupporter34.deserializeObjectString1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter34.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter34.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage40.getobjectFactory();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter23);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNull(languageMixin33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(picoFactory36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage39);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(objectFactory41);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.language.StepDefinition stepDefinition21 = null;
        javaLanguage16.addStepDefinition(stepDefinition21);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = javaLanguage16.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage24.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage28.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = javaLanguage28.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = javaLanguage28.serializedObjectSupporter;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.PicoFactory picoFactory36 = serializedObjectSupporter34.deserializeObjectObjectFactory2();
        java.lang.String str37 = serializedObjectSupporter34.deserializeObjectString1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter34.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter34.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class42 = javaLanguage40.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter23);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNull(languageMixin33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(picoFactory36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage39);
        org.junit.Assert.assertNotNull(javaLanguage40);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage2.begin_scenario();
        javaLanguage2.end_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        java.lang.Class class9 = javaLanguage2.loadClass("foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(class9);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.language.StepDefinition stepDefinition21 = null;
        javaLanguage16.addStepDefinition(stepDefinition21);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = javaLanguage16.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage24.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage28.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = javaLanguage28.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = javaLanguage28.serializedObjectSupporter;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.PicoFactory picoFactory36 = serializedObjectSupporter34.deserializeObjectObjectFactory2();
        java.lang.String str37 = serializedObjectSupporter34.deserializeObjectString1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str40 = serializedObjectSupporter39.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        java.lang.String str42 = serializedObjectSupporter39.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = serializedObjectSupporter39.deserializeObjectJavaLanguage2();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter39;
        javaLanguage13.begin_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter23);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNull(languageMixin33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(picoFactory36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "foo/java/lang/String.java" + "'", str40, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "foo/java/lang/String.java" + "'", str42, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage43);
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(javaLanguage45);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage4.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str13 = serializedObjectSupporter9.deserializeObjectString2();
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        javaLanguage1.load("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter10.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(serializedObjectSupporter10);
        org.junit.Assert.assertNotNull(picoFactory11);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        java.lang.String str11 = serializedObjectSupporter9.deserializeObjectString1();
        java.lang.String str12 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter20;
        java.lang.String str24 = serializedObjectSupporter20.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter20;
        java.lang.Class class29 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionsFor(class29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/Strix.java" + "'", str12, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/String.java" + "'", str21, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/Strix.java" + "'", str24, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(javaLanguage27);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter6.deserializeObjectString1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory14);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage5.addStepDefinition(stepDefinition6);
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        java.lang.String str20 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage21.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage16.begin_scenario();
        javaLanguage16.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition19 = null;
        javaLanguage16.addStepDefinition(stepDefinition19);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter24;
        cuke4duke.internal.language.StepDefinition stepDefinition28 = null;
        javaLanguage23.addStepDefinition(stepDefinition28);
        cuke4duke.internal.language.StepDefinition stepDefinition30 = null;
        javaLanguage23.addStepDefinition(stepDefinition30);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = javaLanguage23.serializedObjectSupporter;
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter32;
        java.lang.Class<?> wildcardClass34 = javaLanguage16.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter37 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str38 = serializedObjectSupporter37.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter37.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter40 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = serializedObjectSupporter40.deserializeObjectJavaLanguage1();
        javaLanguage39.serializedObjectSupporter = serializedObjectSupporter40;
        cuke4duke.internal.language.StepDefinition stepDefinition44 = null;
        javaLanguage39.addStepDefinition(stepDefinition44);
        cuke4duke.internal.language.StepDefinition stepDefinition46 = null;
        javaLanguage39.addStepDefinition(stepDefinition46);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter48 = javaLanguage39.serializedObjectSupporter;
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = serializedObjectSupporter48.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter51 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str52 = serializedObjectSupporter51.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage53 = serializedObjectSupporter51.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = serializedObjectSupporter51.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition55 = null;
        javaLanguage54.addStepDefinition(stepDefinition55);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter57 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage58 = serializedObjectSupporter57.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory59 = javaLanguage58.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory60 = javaLanguage58.objectFactory;
        java.lang.Class<?> wildcardClass61 = objectFactory60.getClass();
        javaLanguage54.registerStepDefinitionsFor((java.lang.Class) wildcardClass61);
        javaLanguage54.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter64 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory65 = serializedObjectSupporter64.deserializeObjectObjectFactory2();
        java.lang.String str66 = serializedObjectSupporter64.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = serializedObjectSupporter64.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter68 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage69 = serializedObjectSupporter68.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory70 = serializedObjectSupporter68.deserializeObjectObjectFactory2();
        java.lang.Class<?> wildcardClass71 = picoFactory70.getClass();
        javaLanguage67.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        javaLanguage54.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        javaLanguage50.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList77 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "foo/java/lang/String.java" + "'", str38, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "foo/java/lang/String.java" + "'", str41, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage42);
        org.junit.Assert.assertNotNull(serializedObjectSupporter48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "foo/java/lang/String.java" + "'", str49, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "foo/java/lang/String.java" + "'", str52, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage53);
        org.junit.Assert.assertNotNull(javaLanguage54);
        org.junit.Assert.assertNotNull(javaLanguage58);
        org.junit.Assert.assertNotNull(objectFactory59);
        org.junit.Assert.assertNotNull(objectFactory60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(picoFactory65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "foo/java/lang/Strix.java" + "'", str66, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage67);
        org.junit.Assert.assertNotNull(javaLanguage69);
        org.junit.Assert.assertNotNull(picoFactory70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.lang.Class class7 = javaLanguage2.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage9.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter16;
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = serializedObjectSupporter16.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(class7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage2.addStepDefinition(stepDefinition9);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage14.languageMixin;
        javaLanguage14.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage14.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory19 = serializedObjectSupporter18.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory20 = serializedObjectSupporter18.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter18;
        java.lang.String str26 = serializedObjectSupporter18.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter18.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
        org.junit.Assert.assertNotNull(picoFactory19);
        org.junit.Assert.assertNotNull(picoFactory20);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(picoFactory6);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage8.addStepDefinition(stepDefinition13);
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage8.addStepDefinition(stepDefinition15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage8.serializedObjectSupporter;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory23 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass27 = serializedObjectSupporter21.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage2.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory23);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        java.lang.String str14 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        java.lang.String str16 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.String str17 = serializedObjectSupporter8.deserializeObjectString1();
        java.lang.String str18 = serializedObjectSupporter8.deserializeObjectString2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/Strix.java" + "'", str18, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.objectFactory;
        javaLanguage2.end_scenario();
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage4.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class10 = javaLanguage7.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage4.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage4.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage11.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage2();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter18;
        java.lang.String str22 = serializedObjectSupporter18.deserializeObjectString1();
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter18;
        cuke4duke.internal.language.StepDefinition stepDefinition24 = null;
        javaLanguage4.addStepDefinition(stepDefinition24);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList22 = javaLanguage20.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(javaLanguage20);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter7;
        java.lang.Class<?> wildcardClass11 = javaLanguage6.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter13.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter13.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str18 = serializedObjectSupporter13.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = serializedObjectSupporter13.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNull(languageMixin2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage2.objectFactory;
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage4.serializedObjectSupporter;
        javaLanguage4.end_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage10.load("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class14 = javaLanguage10.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(javaLanguage10);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory4);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage2.addStepDefinition(stepDefinition9);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        java.lang.String str20 = serializedObjectSupporter13.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter13.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter13.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter24.deserializeObjectObjectFactory2();
        java.lang.String str26 = serializedObjectSupporter24.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter24.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter24.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = serializedObjectSupporter24.deserializeObjectJavaLanguage2();
        javaLanguage23.serializedObjectSupporter = serializedObjectSupporter24;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter24.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/Strix.java" + "'", str21, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(javaLanguage29);
        org.junit.Assert.assertNotNull(javaLanguage31);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.objectFactory;
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage8.addStepDefinition(stepDefinition13);
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage8.addStepDefinition(stepDefinition15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage8.serializedObjectSupporter;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter17;
        java.lang.String str19 = serializedObjectSupporter17.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage5.objectFactory;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerBeforeMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage9.addStepDefinition(stepDefinition10);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage3.addStepDefinition(stepDefinition4);
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage7.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.reflect.Method method19 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerBeforeMaybe(method19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage15);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.lang.String str12 = serializedObjectSupporter10.deserializeObjectString1();
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage17.registerAfterMaybe(method18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter16);
        org.junit.Assert.assertNotNull(javaLanguage17);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str14 = serializedObjectSupporter8.deserializeObjectString2();
        java.lang.String str15 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage9.registerStepDefinitionMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str12 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.objectFactory;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        java.lang.Class class7 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage1.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = javaLanguage1.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(class7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage9.languageMixin;
        java.lang.Class<?> wildcardClass11 = javaLanguage9.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage6.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition14 = null;
        javaLanguage6.addStepDefinition(stepDefinition14);
        java.lang.reflect.Method method16 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.registerAfterMaybe(method16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(languageMixin13);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage2();
        java.lang.String str22 = serializedObjectSupporter20.deserializeObjectString1();
        java.lang.String str23 = serializedObjectSupporter20.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory28 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/Strix.java" + "'", str23, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory26);
        org.junit.Assert.assertNotNull(serializedObjectSupporter27);
        org.junit.Assert.assertNotNull(picoFactory28);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        java.lang.Class<?> wildcardClass21 = serializedObjectSupporter19.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        java.lang.String str25 = serializedObjectSupporter23.deserializeObjectString1();
        java.lang.String str26 = serializedObjectSupporter23.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage27.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass32 = serializedObjectSupporter29.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        java.lang.reflect.Method method35 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        java.lang.Class class5 = javaLanguage1.loadClass("foo/java/lang/String.java");
        javaLanguage1.begin_scenario();
        java.lang.Class class8 = javaLanguage1.loadClass("foo/java/lang/String.java");
        javaLanguage1.end_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage1.addStepDefinition(stepDefinition10);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(class5);
        org.junit.Assert.assertNotNull(class8);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage3.getobjectFactory();
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerBeforeMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage2.languageMixin;
        java.lang.Class class21 = javaLanguage2.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(class21);
        org.junit.Assert.assertNotNull(serializedObjectSupporter22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/Strix.java" + "'", str23, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter4.deserializeObjectObjectFactory2();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter4.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage9.getlanguageMixin();
        javaLanguage9.begin_scenario();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage1.languageMixin;
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList10 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(stepDefinitionList10);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass7 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage4.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList7 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(stepDefinitionList7);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        java.lang.String str9 = serializedObjectSupporter3.deserializeObjectString2();
        java.lang.String str10 = serializedObjectSupporter3.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/Strix.java" + "'", str9, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str9 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        java.lang.reflect.Method method4 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.language.StepDefinition stepDefinition21 = null;
        javaLanguage16.addStepDefinition(stepDefinition21);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = javaLanguage16.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage24.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage28.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = javaLanguage28.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = javaLanguage28.serializedObjectSupporter;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.PicoFactory picoFactory36 = serializedObjectSupporter34.deserializeObjectObjectFactory2();
        java.lang.String str37 = serializedObjectSupporter34.deserializeObjectString1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter34;
        javaLanguage13.begin_scenario();
        java.lang.Class class41 = javaLanguage13.loadClass("foo/java/lang/String.java");
        javaLanguage13.end_scenario();
        java.lang.reflect.Method method43 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage13.registerStepDefinitionMaybe(method43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter23);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNull(languageMixin33);
        org.junit.Assert.assertNotNull(serializedObjectSupporter34);
        org.junit.Assert.assertNotNull(picoFactory36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(class41);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage1.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage2();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage9.getobjectFactory();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        java.lang.reflect.Method method20 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage7.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str21 = serializedObjectSupporter20.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter23;
        cuke4duke.internal.language.StepDefinition stepDefinition27 = null;
        javaLanguage22.addStepDefinition(stepDefinition27);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = javaLanguage22.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage30.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str33 = serializedObjectSupporter32.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter32.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter35 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = serializedObjectSupporter35.deserializeObjectJavaLanguage1();
        javaLanguage34.serializedObjectSupporter = serializedObjectSupporter35;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage34.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter40 = javaLanguage34.serializedObjectSupporter;
        javaLanguage30.serializedObjectSupporter = serializedObjectSupporter40;
        cuke4duke.internal.java.PicoFactory picoFactory42 = serializedObjectSupporter40.deserializeObjectObjectFactory2();
        java.lang.String str43 = serializedObjectSupporter40.deserializeObjectString1();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter40;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter45 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str46 = serializedObjectSupporter45.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = serializedObjectSupporter45.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter48 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = serializedObjectSupporter48.deserializeObjectJavaLanguage1();
        javaLanguage47.serializedObjectSupporter = serializedObjectSupporter48;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = serializedObjectSupporter48.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter53 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str54 = serializedObjectSupporter53.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory55 = serializedObjectSupporter53.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = serializedObjectSupporter53.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage57 = serializedObjectSupporter53.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage58 = serializedObjectSupporter53.deserializeObjectJavaLanguage2();
        javaLanguage52.serializedObjectSupporter = serializedObjectSupporter53;
        cuke4duke.internal.language.LanguageMixin languageMixin60 = javaLanguage52.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter61 = javaLanguage52.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter62 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage63 = serializedObjectSupporter62.deserializeObjectJavaLanguage2();
        java.lang.String str64 = serializedObjectSupporter62.deserializeObjectString1();
        java.lang.String str65 = serializedObjectSupporter62.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory66 = serializedObjectSupporter62.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = serializedObjectSupporter62.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage68 = serializedObjectSupporter62.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter69 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str70 = serializedObjectSupporter69.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage71 = serializedObjectSupporter69.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin72 = javaLanguage71.languageMixin;
        java.lang.Class<?> wildcardClass73 = javaLanguage71.getClass();
        javaLanguage68.registerStepDefinitionsFor((java.lang.Class) wildcardClass73);
        cuke4duke.internal.language.LanguageMixin languageMixin75 = javaLanguage68.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter76 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str77 = serializedObjectSupporter76.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory78 = serializedObjectSupporter76.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage79 = serializedObjectSupporter76.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass80 = serializedObjectSupporter76.getClass();
        javaLanguage68.registerStepDefinitionsFor((java.lang.Class) wildcardClass80);
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass80);
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass80);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass80);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/String.java" + "'", str21, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/String.java" + "'", str24, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertNotNull(serializedObjectSupporter29);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(objectFactory31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "foo/java/lang/String.java" + "'", str33, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foo/java/lang/String.java" + "'", str36, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage37);
        org.junit.Assert.assertNull(languageMixin39);
        org.junit.Assert.assertNotNull(serializedObjectSupporter40);
        org.junit.Assert.assertNotNull(picoFactory42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foo/java/lang/String.java" + "'", str43, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "foo/java/lang/String.java" + "'", str46, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "foo/java/lang/String.java" + "'", str49, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage50);
        org.junit.Assert.assertNotNull(javaLanguage52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "foo/java/lang/String.java" + "'", str54, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory55);
        org.junit.Assert.assertNotNull(javaLanguage56);
        org.junit.Assert.assertNotNull(javaLanguage57);
        org.junit.Assert.assertNotNull(javaLanguage58);
        org.junit.Assert.assertNull(languageMixin60);
        org.junit.Assert.assertNotNull(serializedObjectSupporter61);
        org.junit.Assert.assertNotNull(javaLanguage63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "foo/java/lang/String.java" + "'", str64, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "foo/java/lang/Strix.java" + "'", str65, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory66);
        org.junit.Assert.assertNotNull(javaLanguage67);
        org.junit.Assert.assertNotNull(javaLanguage68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "foo/java/lang/String.java" + "'", str70, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage71);
        org.junit.Assert.assertNull(languageMixin72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNull(languageMixin75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "foo/java/lang/String.java" + "'", str77, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory78);
        org.junit.Assert.assertNotNull(javaLanguage79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage2.languageMixin;
        java.lang.Class class21 = javaLanguage2.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(class21);
        org.junit.Assert.assertNotNull(serializedObjectSupporter22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.String str17 = serializedObjectSupporter13.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter20.deserializeObjectObjectFactory2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter20;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter25 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter25.deserializeObjectJavaLanguage2();
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter25;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage24.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage30.serializedObjectSupporter = serializedObjectSupporter31;
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter31;
        java.lang.String str35 = serializedObjectSupporter31.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter31.deserializeObjectJavaLanguage2();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter31;
        cuke4duke.internal.java.PicoFactory picoFactory38 = serializedObjectSupporter31.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        java.lang.String str40 = serializedObjectSupporter31.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNull(languageMixin28);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(picoFactory38);
        org.junit.Assert.assertNotNull(javaLanguage39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "foo/java/lang/Strix.java" + "'", str40, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        java.lang.Class class7 = javaLanguage2.loadClass("foo/java/lang/String.java");
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertNotNull(class7);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(stepDefinitionList11);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage10.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage10.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = javaLanguage10.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        java.lang.Class class5 = javaLanguage1.loadClass("foo/java/lang/String.java");
        javaLanguage1.begin_scenario();
        java.lang.Class class8 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = javaLanguage1.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(class5);
        org.junit.Assert.assertNotNull(class8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        java.lang.String str17 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(javaLanguage19);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.objectFactory;
        java.lang.Class class10 = javaLanguage6.loadClass("foo/java/lang/String.java");
        javaLanguage4.registerStepDefinitionsFor(class10);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        java.lang.String str14 = serializedObjectSupporter12.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage4.getobjectFactory();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(class10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(objectFactory17);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage4.begin_scenario();
        javaLanguage4.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage4.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage4.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        java.lang.Class<?> wildcardClass15 = serializedObjectSupporter13.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = javaLanguage4.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = javaLanguage4.serializedObjectSupporter;
        java.lang.reflect.Method method20 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerStepDefinitionMaybe(method20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        javaLanguage2.begin_scenario();
        javaLanguage2.end_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage2.addStepDefinition(stepDefinition10);
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin7);
    }
}

