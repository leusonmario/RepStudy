import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method2 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class5 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        java.lang.reflect.Method method3 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        cuke4duke.internal.language.LanguageMixin languageMixin0 = null;
        // The following exception was thrown during execution in test generation
        try {
            cuke4duke.internal.java.JavaLanguage javaLanguage1 = new cuke4duke.internal.java.JavaLanguage(languageMixin0);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: Missing system property: cuke4duke.objectFactory");
        } catch (java.lang.RuntimeException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage1.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList5 = javaLanguage1.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class5 = javaLanguage2.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        java.lang.reflect.Method method4 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        javaLanguage2.begin_scenario();
        java.lang.Class<?> wildcardClass6 = javaLanguage2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.getlanguageMixin();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method4 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerStepDefinitionMaybe(method4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = serializedObjectSupporter9.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method4 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter6;
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(picoFactory10);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList9 = javaLanguage1.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage11.addStepDefinition(stepDefinition13);
        java.lang.Class<?> wildcardClass15 = javaLanguage11.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        javaLanguage2.load("foo/java/lang/String.java");
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage11.addStepDefinition(stepDefinition13);
        java.lang.Class<?> wildcardClass15 = javaLanguage11.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage1.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage1.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList10 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class6 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method16 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage15.registerBeforeMaybe(method16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.Class class14 = javaLanguage2.loadClass("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(class14);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = javaLanguage2.serializedObjectSupporter;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter13);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter3.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = serializedObjectSupporter3.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage10.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter16;
        java.lang.Class<?> wildcardClass20 = serializedObjectSupporter16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        java.lang.reflect.Method method26 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage17.registerBeforeMaybe(method18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = serializedObjectSupporter9.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        java.lang.reflect.Method method3 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.registerAfterMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage6.serializedObjectSupporter;
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter17;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = serializedObjectSupporter17.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass5 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage11.addStepDefinition(stepDefinition13);
        java.lang.Class<?> wildcardClass15 = javaLanguage11.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class9 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        java.lang.reflect.Method method4 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage6.serializedObjectSupporter;
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.java.PicoFactory picoFactory19 = serializedObjectSupporter17.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass20 = picoFactory19.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertNotNull(picoFactory19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = serializedObjectSupporter9.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class10 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage11.addStepDefinition(stepDefinition13);
        java.lang.Class<?> wildcardClass15 = javaLanguage11.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class18 = javaLanguage2.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        java.lang.reflect.Method method4 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNull(languageMixin3);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        java.lang.Class class8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionsFor(class8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class11 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage3.languageMixin;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.Class<?> wildcardClass19 = serializedObjectSupporter14.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage3.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage3.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(objectFactory9);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.Class<?> wildcardClass13 = javaLanguage2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = javaLanguage1.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage1.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter10.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = serializedObjectSupporter10.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory14);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = javaLanguage1.serializedObjectSupporter;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage6.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList9 = javaLanguage6.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        java.lang.Class<?> wildcardClass8 = javaLanguage2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class6 = javaLanguage4.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(picoFactory6);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        java.lang.Class<?> wildcardClass7 = javaLanguage2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage7.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter6;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class13 = javaLanguage1.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(picoFactory10);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage3.languageMixin;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerStepDefinitionMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = serializedObjectSupporter14.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(picoFactory7);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage6.serializedObjectSupporter;
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter17;
        java.lang.reflect.Method method19 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerStepDefinitionMaybe(method19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.objectFactory;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerAfterMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class16 = javaLanguage14.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition22 = null;
        javaLanguage20.addStepDefinition(stepDefinition22);
        cuke4duke.internal.language.StepDefinition stepDefinition24 = null;
        javaLanguage20.addStepDefinition(stepDefinition24);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage27.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage27.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = javaLanguage27.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter34.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage36.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage36.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage40.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter42 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str43 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        javaLanguage40.serializedObjectSupporter = serializedObjectSupporter42;
        java.lang.Class<?> wildcardClass46 = serializedObjectSupporter42.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        java.lang.reflect.Method method54 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage17.registerStepDefinitionMaybe(method54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(objectFactory28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(objectFactory37);
        org.junit.Assert.assertNull(languageMixin38);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(objectFactory41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foo/java/lang/String.java" + "'", str43, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerBeforeMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerAfterMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition22 = null;
        javaLanguage20.addStepDefinition(stepDefinition22);
        cuke4duke.internal.language.StepDefinition stepDefinition24 = null;
        javaLanguage20.addStepDefinition(stepDefinition24);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage27.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage27.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = javaLanguage27.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter34.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage36.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage36.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage40.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter42 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str43 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        javaLanguage40.serializedObjectSupporter = serializedObjectSupporter42;
        java.lang.Class<?> wildcardClass46 = serializedObjectSupporter42.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage17.begin_scenario();
        java.lang.reflect.Method method55 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage17.registerAfterMaybe(method55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(objectFactory28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(objectFactory37);
        org.junit.Assert.assertNull(languageMixin38);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(objectFactory41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foo/java/lang/String.java" + "'", str43, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = serializedObjectSupporter21.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage11.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage11.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter18;
        java.lang.String str23 = serializedObjectSupporter18.deserializeObjectString2();
        java.lang.String str24 = serializedObjectSupporter18.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter18;
        java.lang.reflect.Method method26 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/Strix.java" + "'", str23, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/String.java" + "'", str24, "foo/java/lang/String.java");
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class5 = javaLanguage1.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = javaLanguage1.serializedObjectSupporter;
        javaLanguage1.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage11.addStepDefinition(stepDefinition13);
        java.lang.Class<?> wildcardClass15 = javaLanguage11.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.Class<?> wildcardClass19 = serializedObjectSupporter14.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class22 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.Class<?> wildcardClass19 = serializedObjectSupporter14.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter21;
        java.lang.reflect.Method method23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage7.addStepDefinition(stepDefinition10);
        javaLanguage7.end_scenario();
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerStepDefinitionMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage6.serializedObjectSupporter;
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter17;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class20 = javaLanguage3.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage12.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter18;
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter18.deserializeObjectObjectFactory2();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter18;
        java.lang.reflect.Method method24 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage3.languageMixin;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerAfterMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage11.addStepDefinition(stepDefinition13);
        java.lang.Class<?> wildcardClass15 = javaLanguage11.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage2.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNull(languageMixin17);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage3.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage7.addStepDefinition(stepDefinition10);
        javaLanguage7.end_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        java.lang.Class class16 = javaLanguage14.loadClass("foo/java/lang/String.java");
        javaLanguage7.registerStepDefinitionsFor(class16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage7.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(class16);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter15;
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter15.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter15.deserializeObjectObjectFactory1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter15;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList25 = javaLanguage2.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory21);
        org.junit.Assert.assertNotNull(picoFactory22);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage2.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class12 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition14 = null;
        javaLanguage2.addStepDefinition(stepDefinition14);
        java.lang.reflect.Method method16 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter13);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass4 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class8 = javaLanguage6.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter3.deserializeObjectObjectFactory2();
        java.lang.String str8 = serializedObjectSupporter3.deserializeObjectString2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/Strix.java" + "'", str8, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.String str7 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(picoFactory9);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage12.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter18;
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter18.deserializeObjectObjectFactory2();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter18;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = serializedObjectSupporter18.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage1.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class7 = javaLanguage1.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method4 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerAfterMaybe(method4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = javaLanguage1.serializedObjectSupporter;
        javaLanguage1.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage2.getlanguageMixin();
        java.lang.Class<?> wildcardClass10 = javaLanguage2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str13 = serializedObjectSupporter8.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage14.registerAfterMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage1.languageMixin;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.Class<?> wildcardClass12 = serializedObjectSupporter8.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass12);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        javaLanguage2.load("foo/java/lang/String.java");
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.Class<?> wildcardClass12 = serializedObjectSupporter8.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass12);
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass6 = javaLanguage5.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.Class<?> wildcardClass12 = serializedObjectSupporter8.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage19.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition21 = null;
        javaLanguage19.addStepDefinition(stepDefinition21);
        cuke4duke.internal.language.StepDefinition stepDefinition23 = null;
        javaLanguage19.addStepDefinition(stepDefinition23);
        java.lang.Class<?> wildcardClass25 = javaLanguage19.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList28 = javaLanguage2.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = serializedObjectSupporter14.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage7.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.getobjectFactory();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerBeforeMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage3.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class11 = javaLanguage3.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(objectFactory9);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage2.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerBeforeMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(objectFactory13);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.registerAfterMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage6.getlanguageMixin();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage3.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = javaLanguage3.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList12 = javaLanguage3.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(serializedObjectSupporter10);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method29 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage28.registerStepDefinitionMaybe(method29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.String str7 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class10 = javaLanguage8.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.Class<?> wildcardClass8 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage3.getlanguageMixin();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerAfterMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.Class<?> wildcardClass19 = serializedObjectSupporter14.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter21;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class10 = javaLanguage8.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        java.lang.Class class5 = javaLanguage2.loadClass("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(class5);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.getlanguageMixin();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class10 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class10 = javaLanguage2.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage2.addStepDefinition(stepDefinition9);
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition11 = null;
        javaLanguage2.addStepDefinition(stepDefinition11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList14 = javaLanguage2.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class16 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.objectFactory;
        javaLanguage2.end_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage2.addStepDefinition(stepDefinition12);
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.Class<?> wildcardClass16 = serializedObjectSupporter12.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList9 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerStepDefinitionMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(picoFactory16);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        java.lang.Class<?> wildcardClass14 = javaLanguage2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.languageMixin;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage4.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage4.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition29 = null;
        javaLanguage28.addStepDefinition(stepDefinition29);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList32 = javaLanguage28.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        javaLanguage16.addStepDefinition(stepDefinition17);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        java.lang.String str21 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter19.deserializeObjectObjectFactory2();
        java.lang.String str23 = serializedObjectSupporter19.deserializeObjectString1();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter19;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/String.java" + "'", str21, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage17.getlanguageMixin();
        java.lang.reflect.Method method19 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage17.registerAfterMaybe(method19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNull(languageMixin18);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        cuke4duke.internal.language.StepDefinition stepDefinition11 = null;
        javaLanguage7.addStepDefinition(stepDefinition11);
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage7.addStepDefinition(stepDefinition13);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage17.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter23;
        cuke4duke.internal.java.PicoFactory picoFactory26 = serializedObjectSupporter23.deserializeObjectObjectFactory2();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter23;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter23;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter23;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList31 = javaLanguage2.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(picoFactory26);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage6.languageMixin;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter6;
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(picoFactory10);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage2.getlanguageMixin();
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage17.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage21.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter23;
        java.lang.Class<?> wildcardClass27 = serializedObjectSupporter23.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class31 = javaLanguage2.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(objectFactory22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/String.java" + "'", str24, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.Class class14 = javaLanguage2.loadClass("foo/java/lang/String.java");
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(class14);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage2.getlanguageMixin();
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter36 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter36.deserializeObjectJavaLanguage1();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory40 = serializedObjectSupporter36.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter36;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter42 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        java.lang.String str44 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory45 = serializedObjectSupporter42.deserializeObjectObjectFactory2();
        java.lang.String str46 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter48 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = serializedObjectSupporter48.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory51 = javaLanguage50.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin52 = javaLanguage50.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter53 = javaLanguage50.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter54 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str55 = serializedObjectSupporter54.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = serializedObjectSupporter54.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory57 = javaLanguage56.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin58 = javaLanguage56.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory59 = javaLanguage56.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter60 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage61 = serializedObjectSupporter60.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory62 = javaLanguage61.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter63 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str64 = serializedObjectSupporter63.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage65 = serializedObjectSupporter63.deserializeObjectJavaLanguage1();
        javaLanguage61.serializedObjectSupporter = serializedObjectSupporter63;
        javaLanguage56.serializedObjectSupporter = serializedObjectSupporter63;
        java.lang.String str68 = serializedObjectSupporter63.deserializeObjectString2();
        java.lang.String str69 = serializedObjectSupporter63.deserializeObjectString1();
        javaLanguage50.serializedObjectSupporter = serializedObjectSupporter63;
        cuke4duke.internal.java.PicoFactory picoFactory71 = serializedObjectSupporter63.deserializeObjectObjectFactory2();
        javaLanguage47.serializedObjectSupporter = serializedObjectSupporter63;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter73 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage74 = serializedObjectSupporter73.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter75 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage76 = serializedObjectSupporter75.deserializeObjectJavaLanguage1();
        javaLanguage74.serializedObjectSupporter = serializedObjectSupporter75;
        java.lang.String str78 = serializedObjectSupporter75.deserializeObjectString1();
        java.lang.String str79 = serializedObjectSupporter75.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage80 = serializedObjectSupporter75.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage81 = serializedObjectSupporter75.deserializeObjectJavaLanguage2();
        javaLanguage47.serializedObjectSupporter = serializedObjectSupporter75;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter75;
        java.lang.reflect.Method method84 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foo/java/lang/Strix.java" + "'", str39, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory40);
        org.junit.Assert.assertNotNull(javaLanguage43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "foo/java/lang/String.java" + "'", str44, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "foo/java/lang/String.java" + "'", str46, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "foo/java/lang/String.java" + "'", str49, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage50);
        org.junit.Assert.assertNotNull(objectFactory51);
        org.junit.Assert.assertNull(languageMixin52);
        org.junit.Assert.assertNull(serializedObjectSupporter53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "foo/java/lang/String.java" + "'", str55, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage56);
        org.junit.Assert.assertNotNull(objectFactory57);
        org.junit.Assert.assertNull(languageMixin58);
        org.junit.Assert.assertNotNull(objectFactory59);
        org.junit.Assert.assertNotNull(javaLanguage61);
        org.junit.Assert.assertNotNull(objectFactory62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "foo/java/lang/String.java" + "'", str64, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "foo/java/lang/Strix.java" + "'", str68, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "foo/java/lang/String.java" + "'", str69, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory71);
        org.junit.Assert.assertNotNull(javaLanguage74);
        org.junit.Assert.assertNotNull(javaLanguage76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "foo/java/lang/String.java" + "'", str78, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "foo/java/lang/Strix.java" + "'", str79, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage80);
        org.junit.Assert.assertNotNull(javaLanguage81);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage2.addStepDefinition(stepDefinition15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class18 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str13 = serializedObjectSupporter8.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = serializedObjectSupporter8.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory1 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass3 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertNotNull(picoFactory1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class16 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.String str7 = serializedObjectSupporter3.deserializeObjectString1();
        java.lang.String str8 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.objectFactory;
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage9.registerStepDefinitionMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        javaLanguage2.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter15;
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory23 = serializedObjectSupporter15.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass24 = picoFactory23.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = javaLanguage5.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory4);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage29.objectFactory;
        java.lang.reflect.Method method31 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage29.registerAfterMaybe(method31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(javaLanguage29);
        org.junit.Assert.assertNotNull(objectFactory30);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class37 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage3.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage3.languageMixin;
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerStepDefinitionMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage3.objectFactory;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory12 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition20 = null;
        javaLanguage18.addStepDefinition(stepDefinition20);
        cuke4duke.internal.language.StepDefinition stepDefinition22 = null;
        javaLanguage18.addStepDefinition(stepDefinition22);
        javaLanguage18.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter25 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str26 = serializedObjectSupporter25.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter25.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage27.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition29 = null;
        javaLanguage27.addStepDefinition(stepDefinition29);
        java.lang.Class<?> wildcardClass31 = javaLanguage27.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        java.lang.reflect.Method method35 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(picoFactory12);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/String.java" + "'", str26, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(objectFactory28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerBeforeMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.objectFactory;
        javaLanguage15.load("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class12 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage3.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage3.languageMixin;
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerAfterMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method36 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage7.addStepDefinition(stepDefinition10);
        javaLanguage7.end_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        java.lang.Class class16 = javaLanguage14.loadClass("foo/java/lang/String.java");
        javaLanguage7.registerStepDefinitionsFor(class16);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage7.objectFactory;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(class16);
        org.junit.Assert.assertNotNull(objectFactory18);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter15;
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter15.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter15;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class24 = javaLanguage2.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/String.java" + "'", str21, "foo/java/lang/String.java");
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage9.addStepDefinition(stepDefinition10);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str3 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage4.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage4.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage4.addStepDefinition(stepDefinition7);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage4.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage4.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.String str18 = serializedObjectSupporter14.deserializeObjectString1();
        javaLanguage4.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter14;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = serializedObjectSupporter14.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage2.languageMixin;
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerBeforeMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class3 = javaLanguage1.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage6.serializedObjectSupporter;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        cuke4duke.internal.language.StepDefinition stepDefinition11 = null;
        javaLanguage7.addStepDefinition(stepDefinition11);
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage7.addStepDefinition(stepDefinition13);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage17.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter23;
        cuke4duke.internal.java.PicoFactory picoFactory26 = serializedObjectSupporter23.deserializeObjectObjectFactory2();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter23;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter23;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter23;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage30.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(picoFactory26);
        org.junit.Assert.assertNotNull(javaLanguage30);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        java.lang.Class<?> wildcardClass5 = javaLanguage2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/Strix.java" + "'", str2, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage4.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.objectFactory;
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage15.registerBeforeMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = serializedObjectSupporter21.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class10 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter10.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        javaLanguage2.addStepDefinition(stepDefinition16);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage20.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage20.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition24 = null;
        javaLanguage20.addStepDefinition(stepDefinition24);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage20.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter27.deserializeObjectJavaLanguage2();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = javaLanguage20.serializedObjectSupporter;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter32;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = serializedObjectSupporter32.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertNull(languageMixin22);
        org.junit.Assert.assertNull(languageMixin23);
        org.junit.Assert.assertNull(languageMixin26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/String.java" + "'", str28, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.objectFactory;
        java.lang.Class<?> wildcardClass5 = objectFactory4.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(objectFactory9);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage8.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage19.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        java.lang.String str26 = serializedObjectSupporter21.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter21.deserializeObjectString1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str36 = serializedObjectSupporter33.deserializeObjectString1();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter33.deserializeObjectJavaLanguage2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str41 = serializedObjectSupporter33.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str42 = serializedObjectSupporter33.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foo/java/lang/String.java" + "'", str36, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/Strix.java" + "'", str37, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertNotNull(javaLanguage39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "foo/java/lang/Strix.java" + "'", str41, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage6.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage8.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage19.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        java.lang.String str26 = serializedObjectSupporter21.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter21.deserializeObjectString1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str36 = serializedObjectSupporter33.deserializeObjectString1();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter33.deserializeObjectJavaLanguage2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter33;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class42 = javaLanguage5.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foo/java/lang/String.java" + "'", str36, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/Strix.java" + "'", str37, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertNotNull(javaLanguage39);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerStepDefinitionMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass13 = serializedObjectSupporter6.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage5.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage5.objectFactory;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter15;
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter15.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter15;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class24 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/String.java" + "'", str21, "foo/java/lang/String.java");
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage2.serializedObjectSupporter;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.String str10 = serializedObjectSupporter2.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/Strix.java" + "'", str10, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage7.addStepDefinition(stepDefinition10);
        javaLanguage7.end_scenario();
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerAfterMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerBeforeMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage17.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage21.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str24 = serializedObjectSupporter23.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter23;
        java.lang.Class<?> wildcardClass27 = serializedObjectSupporter23.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter30 = javaLanguage2.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(objectFactory22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/String.java" + "'", str24, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(serializedObjectSupporter30);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage2.addStepDefinition(stepDefinition9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class12 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str13 = serializedObjectSupporter8.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass15 = javaLanguage14.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage6.getlanguageMixin();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = serializedObjectSupporter8.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(picoFactory14);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = serializedObjectSupporter9.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory15);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList15 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.Class<?> wildcardClass16 = serializedObjectSupporter12.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage2.objectFactory;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(serializedObjectSupporter18);
        org.junit.Assert.assertNotNull(objectFactory19);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = serializedObjectSupporter9.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(picoFactory16);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage5.serializedObjectSupporter;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerAfterMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage11.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition14 = null;
        javaLanguage11.addStepDefinition(stepDefinition14);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = javaLanguage11.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage11.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage20.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage20.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage25.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        javaLanguage25.serializedObjectSupporter = serializedObjectSupporter27;
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter27;
        java.lang.Class<?> wildcardClass32 = serializedObjectSupporter27.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList36 = javaLanguage6.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNull(serializedObjectSupporter16);
        org.junit.Assert.assertNull(languageMixin17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertNull(languageMixin22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertNotNull(objectFactory26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/String.java" + "'", str28, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class6 = javaLanguage1.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition29 = null;
        javaLanguage28.addStepDefinition(stepDefinition29);
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage28.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage28.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNull(languageMixin31);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage14.registerBeforeMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition11 = null;
        javaLanguage2.addStepDefinition(stepDefinition11);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class14 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition22 = null;
        javaLanguage20.addStepDefinition(stepDefinition22);
        cuke4duke.internal.language.StepDefinition stepDefinition24 = null;
        javaLanguage20.addStepDefinition(stepDefinition24);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage27.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage27.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = javaLanguage27.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter34.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage36.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage36.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage40.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter42 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str43 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        javaLanguage40.serializedObjectSupporter = serializedObjectSupporter42;
        java.lang.Class<?> wildcardClass46 = serializedObjectSupporter42.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage17.begin_scenario();
        java.lang.reflect.Method method55 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage17.registerBeforeMaybe(method55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(objectFactory28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(objectFactory37);
        org.junit.Assert.assertNull(languageMixin38);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(objectFactory41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foo/java/lang/String.java" + "'", str43, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        java.lang.String str9 = serializedObjectSupporter4.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory7);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage11.addStepDefinition(stepDefinition13);
        java.lang.Class<?> wildcardClass15 = javaLanguage11.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        javaLanguage2.addStepDefinition(stepDefinition17);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage6.serializedObjectSupporter;
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter20 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter20.deserializeObjectJavaLanguage1();
        java.lang.Class class23 = javaLanguage21.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage21.getobjectFactory();
        java.lang.Class<?> wildcardClass25 = objectFactory24.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        java.lang.reflect.Method method27 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage19.registerAfterMaybe(method27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(class23);
        org.junit.Assert.assertNotNull(objectFactory24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage8.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage19.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        java.lang.String str26 = serializedObjectSupporter21.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter21.deserializeObjectString1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str36 = serializedObjectSupporter33.deserializeObjectString1();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter33.deserializeObjectJavaLanguage2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.reflect.Method method41 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerStepDefinitionMaybe(method41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foo/java/lang/String.java" + "'", str36, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/Strix.java" + "'", str37, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertNotNull(javaLanguage39);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage1.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        javaLanguage16.addStepDefinition(stepDefinition17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage16.objectFactory;
        java.lang.Class class20 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerStepDefinitionsFor(class20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory19);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory6);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList7 = javaLanguage2.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        javaLanguage2.end_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class3 = javaLanguage1.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.Class<?> wildcardClass19 = serializedObjectSupporter14.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage2.languageMixin;
        java.lang.reflect.Method method22 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNull(languageMixin21);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.Class class14 = javaLanguage2.loadClass("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList16 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(class14);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(picoFactory6);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory17 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = serializedObjectSupporter9.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(picoFactory17);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(javaLanguage29);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(objectFactory9);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        java.lang.String str8 = serializedObjectSupporter2.deserializeObjectString2();
        java.lang.Class<?> wildcardClass9 = serializedObjectSupporter2.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/Strix.java" + "'", str8, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerBeforeMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter11.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage17.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage17.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.String str29 = serializedObjectSupporter24.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory32 = serializedObjectSupporter24.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass33 = picoFactory32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.java.ObjectFactory objectFactory36 = javaLanguage8.objectFactory;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foo/java/lang/Strix.java" + "'", str29, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(picoFactory32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(objectFactory36);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method29 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage28.registerAfterMaybe(method29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = serializedObjectSupporter9.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(picoFactory14);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.Class<?> wildcardClass17 = serializedObjectSupporter13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage24.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition26 = null;
        javaLanguage24.addStepDefinition(stepDefinition26);
        cuke4duke.internal.language.StepDefinition stepDefinition28 = null;
        javaLanguage24.addStepDefinition(stepDefinition28);
        java.lang.Class<?> wildcardClass30 = javaLanguage24.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory25);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNull(languageMixin36);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        javaLanguage16.addStepDefinition(stepDefinition17);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        java.lang.String str21 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory22 = serializedObjectSupporter19.deserializeObjectObjectFactory2();
        java.lang.String str23 = serializedObjectSupporter19.deserializeObjectString1();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter19;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage16.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class28 = javaLanguage16.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/String.java" + "'", str21, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin25);
        org.junit.Assert.assertNull(languageMixin26);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage8.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage19.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        java.lang.String str26 = serializedObjectSupporter21.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter21.deserializeObjectString1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str36 = serializedObjectSupporter33.deserializeObjectString1();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter33.deserializeObjectJavaLanguage2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.reflect.Method method41 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerAfterMaybe(method41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foo/java/lang/String.java" + "'", str36, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/Strix.java" + "'", str37, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertNotNull(javaLanguage39);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList15 = javaLanguage2.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNull(serializedObjectSupporter13);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.String str5 = serializedObjectSupporter0.deserializeObjectString1();
        java.lang.Class<?> wildcardClass6 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter11.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage17.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage17.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.String str29 = serializedObjectSupporter24.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory32 = serializedObjectSupporter24.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass33 = picoFactory32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        java.lang.reflect.Method method36 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.registerStepDefinitionMaybe(method36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertNull(languageMixin19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foo/java/lang/Strix.java" + "'", str29, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(picoFactory32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter36 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter36.deserializeObjectJavaLanguage1();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory40 = serializedObjectSupporter36.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter36;
        java.lang.reflect.Method method42 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foo/java/lang/Strix.java" + "'", str39, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory40);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage21.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition23 = null;
        javaLanguage21.addStepDefinition(stepDefinition23);
        cuke4duke.internal.language.StepDefinition stepDefinition25 = null;
        javaLanguage21.addStepDefinition(stepDefinition25);
        javaLanguage21.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter28 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = serializedObjectSupporter28.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage29.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        javaLanguage29.serializedObjectSupporter = serializedObjectSupporter31;
        java.lang.Class<?> wildcardClass35 = serializedObjectSupporter31.getClass();
        javaLanguage21.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(objectFactory22);
        org.junit.Assert.assertNotNull(javaLanguage29);
        org.junit.Assert.assertNotNull(objectFactory30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "foo/java/lang/String.java" + "'", str32, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage33);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = languageMixin8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.Class<?> wildcardClass12 = serializedObjectSupporter8.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass12);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter9.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass17 = serializedObjectSupporter9.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(picoFactory16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition29 = null;
        javaLanguage28.addStepDefinition(stepDefinition29);
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage28.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class33 = javaLanguage28.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNull(languageMixin31);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.Class<?> wildcardClass16 = serializedObjectSupporter12.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage2.end_scenario();
        java.lang.reflect.Method method19 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        javaLanguage2.load("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage3.languageMixin;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerBeforeMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage9.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage9.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter16;
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter16.deserializeObjectObjectFactory1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter16;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(picoFactory21);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory6);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage11.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage11.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter18;
        java.lang.String str23 = serializedObjectSupporter18.deserializeObjectString2();
        java.lang.String str24 = serializedObjectSupporter18.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter18;
        java.lang.reflect.Method method26 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/Strix.java" + "'", str23, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/String.java" + "'", str24, "foo/java/lang/String.java");
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        java.lang.String str15 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory16 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        java.lang.Class<?> wildcardClass17 = serializedObjectSupporter9.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage11.addStepDefinition(stepDefinition13);
        java.lang.Class<?> wildcardClass15 = javaLanguage11.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList18 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage21.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage21.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage21.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter25 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter25.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory27 = javaLanguage26.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter28 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str29 = serializedObjectSupporter28.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter28.deserializeObjectJavaLanguage1();
        javaLanguage26.serializedObjectSupporter = serializedObjectSupporter28;
        javaLanguage21.serializedObjectSupporter = serializedObjectSupporter28;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = javaLanguage21.serializedObjectSupporter;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage2.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList37 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(stepDefinitionList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(objectFactory22);
        org.junit.Assert.assertNull(languageMixin23);
        org.junit.Assert.assertNotNull(objectFactory24);
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(objectFactory27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foo/java/lang/String.java" + "'", str29, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertNotNull(objectFactory35);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage1.objectFactory;
        javaLanguage1.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage1.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage1.getlanguageMixin();
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerBeforeMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str7 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter7.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter7.deserializeObjectObjectFactory1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(picoFactory9);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class8 = javaLanguage2.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method20 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage19.registerAfterMaybe(method20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(javaLanguage19);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.objectFactory;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition11 = null;
        javaLanguage9.addStepDefinition(stepDefinition11);
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage9.addStepDefinition(stepDefinition13);
        javaLanguage9.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition20 = null;
        javaLanguage18.addStepDefinition(stepDefinition20);
        java.lang.Class<?> wildcardClass22 = javaLanguage18.getClass();
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage6.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(objectFactory25);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        javaLanguage17.addStepDefinition(stepDefinition18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList21 = javaLanguage17.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class11 = javaLanguage2.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.String str7 = serializedObjectSupporter3.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = serializedObjectSupporter3.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage8.addStepDefinition(stepDefinition10);
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage8.addStepDefinition(stepDefinition12);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = javaLanguage15.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage24.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage24.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage28.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter30 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter30.deserializeObjectJavaLanguage1();
        javaLanguage28.serializedObjectSupporter = serializedObjectSupporter30;
        java.lang.Class<?> wildcardClass34 = serializedObjectSupporter30.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.language.StepDefinition stepDefinition42 = null;
        javaLanguage2.addStepDefinition(stepDefinition42);
        java.lang.reflect.Method method44 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory25);
        org.junit.Assert.assertNull(languageMixin26);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(objectFactory29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foo/java/lang/String.java" + "'", str31, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage1.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage12.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertNull(languageMixin3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage15.getlanguageMixin();
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage15.registerBeforeMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNull(languageMixin16);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory32 = serializedObjectSupporter29.deserializeObjectObjectFactory1();
        java.lang.String str33 = serializedObjectSupporter29.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        javaLanguage28.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = serializedObjectSupporter29.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method38 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage37.registerBeforeMaybe(method38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(picoFactory32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "foo/java/lang/Strix.java" + "'", str33, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertNotNull(javaLanguage35);
        org.junit.Assert.assertNotNull(javaLanguage37);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        java.lang.Class<?> wildcardClass14 = picoFactory13.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = serializedObjectSupporter6.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.getobjectFactory();
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory36 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method37 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(objectFactory36);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        java.lang.String str16 = serializedObjectSupporter14.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = serializedObjectSupporter14.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage16.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNull(languageMixin17);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        cuke4duke.internal.language.StepDefinition stepDefinition11 = null;
        javaLanguage7.addStepDefinition(stepDefinition11);
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage7.addStepDefinition(stepDefinition13);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage17.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter23;
        cuke4duke.internal.java.PicoFactory picoFactory26 = serializedObjectSupporter23.deserializeObjectObjectFactory2();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter23;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter23;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter23;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter23.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList32 = javaLanguage30.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(picoFactory26);
        org.junit.Assert.assertNotNull(javaLanguage30);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage5.addStepDefinition(stepDefinition6);
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerStepDefinitionMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage15.languageMixin;
        java.lang.reflect.Method method18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage15.registerAfterMaybe(method18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNull(languageMixin17);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter10.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        java.lang.Class class17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerStepDefinitionsFor(class17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = serializedObjectSupporter0.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage3.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage5.getlanguageMixin();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        java.lang.String str13 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter11.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter11;
        java.lang.reflect.Method method16 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/Strix.java" + "'", str5, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        javaLanguage15.addStepDefinition(stepDefinition16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage15.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter14.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = serializedObjectSupporter14.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory6);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition14 = null;
        javaLanguage2.addStepDefinition(stepDefinition14);
        java.lang.reflect.Method method16 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(languageMixin13);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        javaLanguage2.begin_scenario();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList7 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage2.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage8.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage19.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        java.lang.String str26 = serializedObjectSupporter21.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter21.deserializeObjectString1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str36 = serializedObjectSupporter33.deserializeObjectString1();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter33.deserializeObjectJavaLanguage2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.Class<?> wildcardClass41 = javaLanguage5.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foo/java/lang/String.java" + "'", str36, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/Strix.java" + "'", str37, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertNotNull(javaLanguage39);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage15.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        java.lang.Class class21 = javaLanguage19.loadClass("foo/java/lang/String.java");
        javaLanguage15.registerStepDefinitionsFor(class21);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage15.getlanguageMixin();
        java.lang.reflect.Method method24 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage15.registerAfterMaybe(method24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNull(languageMixin17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(class21);
        org.junit.Assert.assertNull(languageMixin23);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage2.addStepDefinition(stepDefinition9);
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage6.serializedObjectSupporter;
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass22 = serializedObjectSupporter19.getClass();
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        java.lang.reflect.Method method24 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerAfterMaybe(method24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass4 = serializedObjectSupporter0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.String str7 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage8.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter11.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter11.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage17.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage17.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter23;
        cuke4duke.internal.java.PicoFactory picoFactory26 = serializedObjectSupporter23.deserializeObjectObjectFactory2();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter23;
        java.lang.Class class29 = javaLanguage17.loadClass("foo/java/lang/String.java");
        javaLanguage14.registerStepDefinitionsFor(class29);
        javaLanguage8.registerStepDefinitionsFor(class29);
        java.lang.Class<?> wildcardClass32 = javaLanguage8.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(objectFactory18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(picoFactory26);
        org.junit.Assert.assertNotNull(class29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter10.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter10.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter10.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage19.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition21 = null;
        javaLanguage19.addStepDefinition(stepDefinition21);
        cuke4duke.internal.language.StepDefinition stepDefinition23 = null;
        javaLanguage19.addStepDefinition(stepDefinition23);
        javaLanguage19.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage28.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition30 = null;
        javaLanguage28.addStepDefinition(stepDefinition30);
        java.lang.Class<?> wildcardClass32 = javaLanguage28.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage16.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage2.languageMixin;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(objectFactory29);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNull(languageMixin36);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        javaLanguage16.addStepDefinition(stepDefinition17);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = javaLanguage16.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage16.getobjectFactory();
        java.lang.Class class21 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerStepDefinitionsFor(class21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNull(serializedObjectSupporter19);
        org.junit.Assert.assertNotNull(objectFactory20);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage6.serializedObjectSupporter;
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage3.objectFactory;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertNotNull(objectFactory19);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage2.addStepDefinition(stepDefinition15);
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(languageMixin13);
        org.junit.Assert.assertNull(serializedObjectSupporter14);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage3.getobjectFactory();
        javaLanguage3.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter36 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter36.deserializeObjectJavaLanguage1();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory40 = serializedObjectSupporter36.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter36;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter42 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        java.lang.String str44 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory45 = serializedObjectSupporter42.deserializeObjectObjectFactory2();
        java.lang.String str46 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter48 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = serializedObjectSupporter48.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory51 = javaLanguage50.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin52 = javaLanguage50.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter53 = javaLanguage50.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter54 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str55 = serializedObjectSupporter54.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = serializedObjectSupporter54.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory57 = javaLanguage56.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin58 = javaLanguage56.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory59 = javaLanguage56.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter60 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage61 = serializedObjectSupporter60.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory62 = javaLanguage61.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter63 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str64 = serializedObjectSupporter63.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage65 = serializedObjectSupporter63.deserializeObjectJavaLanguage1();
        javaLanguage61.serializedObjectSupporter = serializedObjectSupporter63;
        javaLanguage56.serializedObjectSupporter = serializedObjectSupporter63;
        java.lang.String str68 = serializedObjectSupporter63.deserializeObjectString2();
        java.lang.String str69 = serializedObjectSupporter63.deserializeObjectString1();
        javaLanguage50.serializedObjectSupporter = serializedObjectSupporter63;
        cuke4duke.internal.java.PicoFactory picoFactory71 = serializedObjectSupporter63.deserializeObjectObjectFactory2();
        javaLanguage47.serializedObjectSupporter = serializedObjectSupporter63;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter73 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage74 = serializedObjectSupporter73.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter75 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage76 = serializedObjectSupporter75.deserializeObjectJavaLanguage1();
        javaLanguage74.serializedObjectSupporter = serializedObjectSupporter75;
        java.lang.String str78 = serializedObjectSupporter75.deserializeObjectString1();
        java.lang.String str79 = serializedObjectSupporter75.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage80 = serializedObjectSupporter75.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage81 = serializedObjectSupporter75.deserializeObjectJavaLanguage2();
        javaLanguage47.serializedObjectSupporter = serializedObjectSupporter75;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter75;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter84 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory85 = javaLanguage2.getobjectFactory();
        javaLanguage2.end_scenario();
        java.lang.reflect.Method method87 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foo/java/lang/Strix.java" + "'", str39, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory40);
        org.junit.Assert.assertNotNull(javaLanguage43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "foo/java/lang/String.java" + "'", str44, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "foo/java/lang/String.java" + "'", str46, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "foo/java/lang/String.java" + "'", str49, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage50);
        org.junit.Assert.assertNotNull(objectFactory51);
        org.junit.Assert.assertNull(languageMixin52);
        org.junit.Assert.assertNull(serializedObjectSupporter53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "foo/java/lang/String.java" + "'", str55, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage56);
        org.junit.Assert.assertNotNull(objectFactory57);
        org.junit.Assert.assertNull(languageMixin58);
        org.junit.Assert.assertNotNull(objectFactory59);
        org.junit.Assert.assertNotNull(javaLanguage61);
        org.junit.Assert.assertNotNull(objectFactory62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "foo/java/lang/String.java" + "'", str64, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "foo/java/lang/Strix.java" + "'", str68, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "foo/java/lang/String.java" + "'", str69, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory71);
        org.junit.Assert.assertNotNull(javaLanguage74);
        org.junit.Assert.assertNotNull(javaLanguage76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "foo/java/lang/String.java" + "'", str78, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "foo/java/lang/Strix.java" + "'", str79, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage80);
        org.junit.Assert.assertNotNull(javaLanguage81);
        org.junit.Assert.assertNotNull(serializedObjectSupporter84);
        org.junit.Assert.assertNotNull(objectFactory85);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class11 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerStepDefinitionMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter14.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerBeforeMaybe(method17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory36 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method37 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(objectFactory36);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.objectFactory;
        javaLanguage2.end_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage2.addStepDefinition(stepDefinition12);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot stop.  Current container state was: DISPOSED");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory13 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter8.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = serializedObjectSupporter8.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(picoFactory13);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage12.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter18;
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter18.deserializeObjectObjectFactory2();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter18;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(stepDefinitionList8);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage20.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage20.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage25.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        javaLanguage25.serializedObjectSupporter = serializedObjectSupporter27;
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter27.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage34.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage34.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter37 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter37.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        javaLanguage38.serializedObjectSupporter = serializedObjectSupporter39;
        cuke4duke.internal.java.PicoFactory picoFactory42 = serializedObjectSupporter39.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory43 = serializedObjectSupporter39.deserializeObjectObjectFactory2();
        javaLanguage34.serializedObjectSupporter = serializedObjectSupporter39;
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter39;
        java.lang.Class<?> wildcardClass46 = javaLanguage32.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        java.lang.reflect.Method method48 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertNull(languageMixin22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertNotNull(javaLanguage25);
        org.junit.Assert.assertNotNull(objectFactory26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/String.java" + "'", str28, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage29);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertNotNull(objectFactory35);
        org.junit.Assert.assertNull(languageMixin36);
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(picoFactory42);
        org.junit.Assert.assertNotNull(picoFactory43);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        javaLanguage1.load("foo/java/lang/String.java");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage1.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage3.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class6 = javaLanguage3.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition29 = null;
        javaLanguage28.addStepDefinition(stepDefinition29);
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage28.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = serializedObjectSupporter32.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = serializedObjectSupporter34.deserializeObjectJavaLanguage1();
        javaLanguage33.serializedObjectSupporter = serializedObjectSupporter34;
        cuke4duke.internal.java.PicoFactory picoFactory37 = serializedObjectSupporter34.deserializeObjectObjectFactory2();
        java.lang.String str38 = serializedObjectSupporter34.deserializeObjectString2();
        java.lang.String str39 = serializedObjectSupporter34.deserializeObjectString1();
        javaLanguage28.serializedObjectSupporter = serializedObjectSupporter34;
        java.lang.String str41 = serializedObjectSupporter34.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNull(languageMixin31);
        org.junit.Assert.assertNotNull(javaLanguage33);
        org.junit.Assert.assertNotNull(javaLanguage35);
        org.junit.Assert.assertNotNull(picoFactory37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "foo/java/lang/Strix.java" + "'", str38, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foo/java/lang/String.java" + "'", str39, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "foo/java/lang/Strix.java" + "'", str41, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList9 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage2.getobjectFactory();
        java.lang.Class<?> wildcardClass8 = javaLanguage2.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage1.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage1.objectFactory;
        javaLanguage1.begin_scenario();
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerStepDefinitionMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        java.lang.String str16 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory17 = serializedObjectSupporter14.deserializeObjectObjectFactory2();
        java.lang.String str18 = serializedObjectSupporter14.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = serializedObjectSupporter14.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory7);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        javaLanguage2.end_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = javaLanguage2.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        javaLanguage16.addStepDefinition(stepDefinition17);
        java.lang.reflect.Method method19 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerBeforeMaybe(method19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(objectFactory11);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage15.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class18 = javaLanguage15.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNull(languageMixin16);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage15.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class19 = javaLanguage15.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(objectFactory17);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        java.lang.String str13 = serializedObjectSupporter8.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter8.deserializeObjectObjectFactory1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = serializedObjectSupporter8.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/Strix.java" + "'", str13, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory14);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.objectFactory;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.registerStepDefinitionMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.load("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter14.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        java.lang.reflect.Method method18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage16.registerBeforeMaybe(method18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage7.addStepDefinition(stepDefinition10);
        javaLanguage7.end_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        java.lang.Class class16 = javaLanguage14.loadClass("foo/java/lang/String.java");
        javaLanguage7.registerStepDefinitionsFor(class16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class19 = javaLanguage7.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(class16);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        javaLanguage3.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory2);
        org.junit.Assert.assertNotNull(javaLanguage3);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        java.lang.String str12 = serializedObjectSupporter6.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter15;
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter15.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.reflect.Method method23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/String.java" + "'", str21, "foo/java/lang/String.java");
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class10 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage16.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage16.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage16.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage28.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage28.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(objectFactory29);
        org.junit.Assert.assertNull(languageMixin30);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.Class<?> wildcardClass19 = serializedObjectSupporter14.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        java.lang.reflect.Method method21 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNull(languageMixin15);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter3.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory8 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter3.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        javaLanguage13.addStepDefinition(stepDefinition15);
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        javaLanguage13.addStepDefinition(stepDefinition17);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter22;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = javaLanguage20.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage29.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage29.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = serializedObjectSupporter32.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage33.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter35 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str36 = serializedObjectSupporter35.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = serializedObjectSupporter35.deserializeObjectJavaLanguage1();
        javaLanguage33.serializedObjectSupporter = serializedObjectSupporter35;
        java.lang.Class<?> wildcardClass39 = serializedObjectSupporter35.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        javaLanguage13.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter47 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str48 = serializedObjectSupporter47.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = serializedObjectSupporter47.deserializeObjectJavaLanguage1();
        java.lang.String str50 = serializedObjectSupporter47.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory51 = serializedObjectSupporter47.deserializeObjectObjectFactory2();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter47;
        javaLanguage13.begin_scenario();
        java.lang.Class class55 = javaLanguage13.loadClass("foo/java/lang/String.java");
        javaLanguage10.registerStepDefinitionsFor(class55);
        java.lang.reflect.Method method57 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage10.registerAfterMaybe(method57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(picoFactory8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(serializedObjectSupporter26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/String.java" + "'", str28, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage29);
        org.junit.Assert.assertNotNull(objectFactory30);
        org.junit.Assert.assertNull(languageMixin31);
        org.junit.Assert.assertNotNull(javaLanguage33);
        org.junit.Assert.assertNotNull(objectFactory34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foo/java/lang/String.java" + "'", str36, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "foo/java/lang/String.java" + "'", str48, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "foo/java/lang/Strix.java" + "'", str50, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory51);
        org.junit.Assert.assertNotNull(class55);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage15.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage15.serializedObjectSupporter;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNull(serializedObjectSupporter17);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage4.registerStepDefinitionMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/String.java" + "'", str3, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter15;
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter15.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage2.getobjectFactory();
        javaLanguage2.begin_scenario();
        java.lang.reflect.Method method25 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/String.java" + "'", str21, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(objectFactory23);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        java.lang.String str7 = serializedObjectSupporter4.deserializeObjectString2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter4;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage3.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage3.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage3.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/Strix.java" + "'", str7, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNull(languageMixin11);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage2.getlanguageMixin();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList36 = javaLanguage2.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter2.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage9.registerStepDefinitionMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(javaLanguage9);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage7.addStepDefinition(stepDefinition10);
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerBeforeMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage8.addStepDefinition(stepDefinition10);
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage8.addStepDefinition(stepDefinition12);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str18 = serializedObjectSupporter17.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter17.deserializeObjectJavaLanguage1();
        javaLanguage15.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = javaLanguage15.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter22 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str23 = serializedObjectSupporter22.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter22.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage24.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage24.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter27.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage28.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter30 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str31 = serializedObjectSupporter30.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter30.deserializeObjectJavaLanguage1();
        javaLanguage28.serializedObjectSupporter = serializedObjectSupporter30;
        java.lang.Class<?> wildcardClass34 = serializedObjectSupporter30.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList43 = javaLanguage2.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "foo/java/lang/String.java" + "'", str18, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(serializedObjectSupporter21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory25);
        org.junit.Assert.assertNull(languageMixin26);
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(objectFactory29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "foo/java/lang/String.java" + "'", str31, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.reflect.Method method18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage2.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.Class<?> wildcardClass19 = serializedObjectSupporter14.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage2.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNull(languageMixin21);
        org.junit.Assert.assertNull(languageMixin22);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter13;
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNull(languageMixin11);
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage7.addStepDefinition(stepDefinition10);
        javaLanguage7.end_scenario();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Cannot stop.  Current container state was: DISPOSED");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage7.begin_scenario();
        javaLanguage7.begin_scenario();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage7.addStepDefinition(stepDefinition10);
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerStepDefinitionMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage14.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(javaLanguage14);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(picoFactory7);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage5.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str8 = serializedObjectSupporter7.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage9.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.java.PicoFactory picoFactory18 = serializedObjectSupporter15.deserializeObjectObjectFactory2();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.Class class21 = javaLanguage9.loadClass("foo/java/lang/String.java");
        javaLanguage5.registerStepDefinitionsFor(class21);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/Strix.java" + "'", str4, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(picoFactory18);
        org.junit.Assert.assertNotNull(class21);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter15;
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString2();
        java.lang.String str21 = serializedObjectSupporter15.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter15;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        java.lang.reflect.Method method24 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage23.registerStepDefinitionMaybe(method24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "foo/java/lang/String.java" + "'", str21, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class16 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory6 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter2.deserializeObjectObjectFactory2();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(picoFactory6);
        org.junit.Assert.assertNotNull(picoFactory7);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage3.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.String str19 = serializedObjectSupporter14.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter14;
        cuke4duke.internal.java.PicoFactory picoFactory23 = serializedObjectSupporter14.deserializeObjectObjectFactory1();
        java.lang.String str24 = serializedObjectSupporter14.deserializeObjectString1();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/Strix.java" + "'", str19, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(picoFactory23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "foo/java/lang/String.java" + "'", str24, "foo/java/lang/String.java");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage15.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        java.lang.Class class21 = javaLanguage19.loadClass("foo/java/lang/String.java");
        javaLanguage15.registerStepDefinitionsFor(class21);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage15.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage15.objectFactory;
        java.lang.reflect.Method method25 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage15.registerStepDefinitionMaybe(method25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNull(languageMixin17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(class21);
        org.junit.Assert.assertNull(languageMixin23);
        org.junit.Assert.assertNotNull(objectFactory24);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage8.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage19.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        java.lang.String str26 = serializedObjectSupporter21.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter21.deserializeObjectString1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str36 = serializedObjectSupporter33.deserializeObjectString1();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter33.deserializeObjectJavaLanguage2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter33;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter42 = javaLanguage41.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage41.getobjectFactory();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foo/java/lang/String.java" + "'", str36, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/Strix.java" + "'", str37, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertNotNull(javaLanguage39);
        org.junit.Assert.assertNotNull(javaLanguage41);
        org.junit.Assert.assertNull(serializedObjectSupporter42);
        org.junit.Assert.assertNotNull(objectFactory43);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = javaLanguage7.serializedObjectSupporter;
        javaLanguage7.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage11.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage20.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter23 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = serializedObjectSupporter23.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage24.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str27 = serializedObjectSupporter26.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        javaLanguage24.serializedObjectSupporter = serializedObjectSupporter26;
        java.lang.Class<?> wildcardClass30 = serializedObjectSupporter26.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNull(serializedObjectSupporter8);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertNull(languageMixin22);
        org.junit.Assert.assertNotNull(javaLanguage24);
        org.junit.Assert.assertNotNull(objectFactory25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage2.getobjectFactory();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList14 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(stepDefinitionList11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(stepDefinitionList14);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage3.begin_scenario();
        javaLanguage3.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage3.languageMixin;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.languageMixin;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory17 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter12;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = serializedObjectSupporter12.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory17);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter36 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter36.deserializeObjectJavaLanguage1();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory40 = serializedObjectSupporter36.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter36;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter42 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        java.lang.String str44 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory45 = serializedObjectSupporter42.deserializeObjectObjectFactory2();
        java.lang.String str46 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter48 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str49 = serializedObjectSupporter48.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = serializedObjectSupporter48.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory51 = javaLanguage50.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin52 = javaLanguage50.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter53 = javaLanguage50.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter54 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str55 = serializedObjectSupporter54.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = serializedObjectSupporter54.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory57 = javaLanguage56.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin58 = javaLanguage56.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory59 = javaLanguage56.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter60 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage61 = serializedObjectSupporter60.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory62 = javaLanguage61.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter63 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str64 = serializedObjectSupporter63.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage65 = serializedObjectSupporter63.deserializeObjectJavaLanguage1();
        javaLanguage61.serializedObjectSupporter = serializedObjectSupporter63;
        javaLanguage56.serializedObjectSupporter = serializedObjectSupporter63;
        java.lang.String str68 = serializedObjectSupporter63.deserializeObjectString2();
        java.lang.String str69 = serializedObjectSupporter63.deserializeObjectString1();
        javaLanguage50.serializedObjectSupporter = serializedObjectSupporter63;
        cuke4duke.internal.java.PicoFactory picoFactory71 = serializedObjectSupporter63.deserializeObjectObjectFactory2();
        javaLanguage47.serializedObjectSupporter = serializedObjectSupporter63;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter73 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage74 = serializedObjectSupporter73.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter75 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage76 = serializedObjectSupporter75.deserializeObjectJavaLanguage1();
        javaLanguage74.serializedObjectSupporter = serializedObjectSupporter75;
        java.lang.String str78 = serializedObjectSupporter75.deserializeObjectString1();
        java.lang.String str79 = serializedObjectSupporter75.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage80 = serializedObjectSupporter75.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage81 = serializedObjectSupporter75.deserializeObjectJavaLanguage2();
        javaLanguage47.serializedObjectSupporter = serializedObjectSupporter75;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter75;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter84 = javaLanguage2.serializedObjectSupporter;
        java.lang.String str85 = serializedObjectSupporter84.deserializeObjectString2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foo/java/lang/Strix.java" + "'", str39, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory40);
        org.junit.Assert.assertNotNull(javaLanguage43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "foo/java/lang/String.java" + "'", str44, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "foo/java/lang/String.java" + "'", str46, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "foo/java/lang/String.java" + "'", str49, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage50);
        org.junit.Assert.assertNotNull(objectFactory51);
        org.junit.Assert.assertNull(languageMixin52);
        org.junit.Assert.assertNull(serializedObjectSupporter53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "foo/java/lang/String.java" + "'", str55, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage56);
        org.junit.Assert.assertNotNull(objectFactory57);
        org.junit.Assert.assertNull(languageMixin58);
        org.junit.Assert.assertNotNull(objectFactory59);
        org.junit.Assert.assertNotNull(javaLanguage61);
        org.junit.Assert.assertNotNull(objectFactory62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "foo/java/lang/String.java" + "'", str64, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "foo/java/lang/Strix.java" + "'", str68, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "foo/java/lang/String.java" + "'", str69, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory71);
        org.junit.Assert.assertNotNull(javaLanguage74);
        org.junit.Assert.assertNotNull(javaLanguage76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "foo/java/lang/String.java" + "'", str78, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "foo/java/lang/Strix.java" + "'", str79, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage80);
        org.junit.Assert.assertNotNull(javaLanguage81);
        org.junit.Assert.assertNotNull(serializedObjectSupporter84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "foo/java/lang/Strix.java" + "'", str85, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter9.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage2.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage6.serializedObjectSupporter;
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass22 = serializedObjectSupporter19.getClass();
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory27 = javaLanguage26.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage26.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage26.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter30 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter30.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = javaLanguage31.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str34 = serializedObjectSupporter33.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage31.serializedObjectSupporter = serializedObjectSupporter33;
        javaLanguage26.serializedObjectSupporter = serializedObjectSupporter33;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter33.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage40.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage40.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter43 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter43.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter45 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = serializedObjectSupporter45.deserializeObjectJavaLanguage1();
        javaLanguage44.serializedObjectSupporter = serializedObjectSupporter45;
        cuke4duke.internal.java.PicoFactory picoFactory48 = serializedObjectSupporter45.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory49 = serializedObjectSupporter45.deserializeObjectObjectFactory2();
        javaLanguage40.serializedObjectSupporter = serializedObjectSupporter45;
        javaLanguage38.serializedObjectSupporter = serializedObjectSupporter45;
        cuke4duke.internal.java.PicoFactory picoFactory52 = serializedObjectSupporter45.deserializeObjectObjectFactory2();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter45;
        cuke4duke.internal.java.ObjectFactory objectFactory54 = javaLanguage3.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin55 = javaLanguage3.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory56 = javaLanguage3.objectFactory;
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(objectFactory27);
        org.junit.Assert.assertNull(languageMixin28);
        org.junit.Assert.assertNotNull(objectFactory29);
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(objectFactory32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "foo/java/lang/String.java" + "'", str34, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage35);
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(objectFactory41);
        org.junit.Assert.assertNull(languageMixin42);
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(javaLanguage46);
        org.junit.Assert.assertNotNull(picoFactory48);
        org.junit.Assert.assertNotNull(picoFactory49);
        org.junit.Assert.assertNotNull(picoFactory52);
        org.junit.Assert.assertNotNull(objectFactory54);
        org.junit.Assert.assertNull(languageMixin55);
        org.junit.Assert.assertNotNull(objectFactory56);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter36 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str37 = serializedObjectSupporter36.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter36.deserializeObjectJavaLanguage1();
        java.lang.String str39 = serializedObjectSupporter36.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory40 = serializedObjectSupporter36.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter36;
        javaLanguage2.begin_scenario();
        java.lang.Class class44 = javaLanguage2.loadClass("foo/java/lang/String.java");
        java.lang.reflect.Method method45 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/String.java" + "'", str37, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "foo/java/lang/Strix.java" + "'", str39, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory40);
        org.junit.Assert.assertNotNull(class44);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str8 = serializedObjectSupporter0.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/String.java" + "'", str8, "foo/java/lang/String.java");
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str16 = serializedObjectSupporter15.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        javaLanguage13.serializedObjectSupporter = serializedObjectSupporter15;
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter15;
        java.lang.String str20 = serializedObjectSupporter15.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter15.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory23 = serializedObjectSupporter15.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass24 = picoFactory23.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        java.lang.String str28 = serializedObjectSupporter26.deserializeObjectString2();
        java.lang.String str29 = serializedObjectSupporter26.deserializeObjectString2();
        java.lang.String str30 = serializedObjectSupporter26.deserializeObjectString2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter26;
        java.lang.reflect.Method method32 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage5.registerAfterMaybe(method32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/Strix.java" + "'", str20, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(picoFactory23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/Strix.java" + "'", str28, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "foo/java/lang/Strix.java" + "'", str29, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/Strix.java" + "'", str30, "foo/java/lang/Strix.java");
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = null;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter3;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        java.lang.String str8 = serializedObjectSupporter6.deserializeObjectString2();
        java.lang.String str9 = serializedObjectSupporter6.deserializeObjectString1();
        java.lang.String str10 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = serializedObjectSupporter6.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(picoFactory7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "foo/java/lang/Strix.java" + "'", str8, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage2.languageMixin;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(languageMixin13);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory3 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        java.lang.String str4 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage8.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = javaLanguage8.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage14.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage19.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        javaLanguage19.serializedObjectSupporter = serializedObjectSupporter21;
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter21;
        java.lang.String str26 = serializedObjectSupporter21.deserializeObjectString2();
        java.lang.String str27 = serializedObjectSupporter21.deserializeObjectString1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter21.deserializeObjectObjectFactory2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter21;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        javaLanguage32.serializedObjectSupporter = serializedObjectSupporter33;
        java.lang.String str36 = serializedObjectSupporter33.deserializeObjectString1();
        java.lang.String str37 = serializedObjectSupporter33.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = serializedObjectSupporter33.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = serializedObjectSupporter33.deserializeObjectJavaLanguage2();
        javaLanguage5.serializedObjectSupporter = serializedObjectSupporter33;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = serializedObjectSupporter33.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNull(serializedObjectSupporter11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertNull(languageMixin16);
        org.junit.Assert.assertNotNull(objectFactory17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(objectFactory20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "foo/java/lang/Strix.java" + "'", str26, "foo/java/lang/Strix.java");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "foo/java/lang/String.java" + "'", str27, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage32);
        org.junit.Assert.assertNotNull(javaLanguage34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "foo/java/lang/String.java" + "'", str36, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "foo/java/lang/Strix.java" + "'", str37, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage38);
        org.junit.Assert.assertNotNull(javaLanguage39);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        javaLanguage2.addStepDefinition(stepDefinition5);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str13 = serializedObjectSupporter12.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage10.serializedObjectSupporter = serializedObjectSupporter12;
        java.lang.String str16 = serializedObjectSupporter12.deserializeObjectString1();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage2.getobjectFactory();
        javaLanguage2.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "foo/java/lang/String.java" + "'", str16, "foo/java/lang/String.java");
        org.junit.Assert.assertNull(languageMixin18);
        org.junit.Assert.assertNotNull(objectFactory19);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter8.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter8;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage8.addStepDefinition(stepDefinition10);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.java.PicoFactory picoFactory20 = serializedObjectSupporter16.deserializeObjectObjectFactory2();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter16;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter16;
        javaLanguage2.begin_scenario();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(picoFactory20);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage6.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage6.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str14 = serializedObjectSupporter13.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter13;
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter13;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = javaLanguage6.serializedObjectSupporter;
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter18;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str22 = serializedObjectSupporter21.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage23.getlanguageMixin();
        javaLanguage23.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter27.deserializeObjectObjectFactory1();
        java.lang.Class<?> wildcardClass30 = picoFactory29.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList34 = javaLanguage3.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/String.java" + "'", str14, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "foo/java/lang/String.java" + "'", str22, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage23);
        org.junit.Assert.assertNotNull(objectFactory24);
        org.junit.Assert.assertNull(languageMixin25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/String.java" + "'", str28, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage3.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage3.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(objectFactory4);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage2.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNull(serializedObjectSupporter7);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.StepDefinition stepDefinition7 = null;
        javaLanguage2.addStepDefinition(stepDefinition7);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = serializedObjectSupporter2.deserializeObjectComparator1();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String$CaseInsensitiveComparator cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        java.lang.String str6 = serializedObjectSupporter2.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList9 = javaLanguage7.step_definitions_for("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        javaLanguage7.addStepDefinition(stepDefinition9);
        java.lang.Class<?> wildcardClass11 = javaLanguage7.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass7 = javaLanguage6.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = javaLanguage2.serializedObjectSupporter;
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage2.objectFactory;
        javaLanguage2.begin_scenario();
        javaLanguage2.begin_scenario();
        javaLanguage2.end_scenario();
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter6);
        org.junit.Assert.assertNotNull(objectFactory8);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory4 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory5 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.PicoFactory picoFactory7 = serializedObjectSupporter0.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertNotNull(picoFactory4);
        org.junit.Assert.assertNotNull(picoFactory5);
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(picoFactory7);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage6.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage6.getlanguageMixin();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNull(languageMixin7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage11.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition13 = null;
        javaLanguage11.addStepDefinition(stepDefinition13);
        java.lang.Class<?> wildcardClass15 = javaLanguage11.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage2.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class20 = javaLanguage2.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNull(languageMixin17);
        org.junit.Assert.assertNull(languageMixin18);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter7.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.java.PicoFactory picoFactory14 = serializedObjectSupporter10.deserializeObjectObjectFactory2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter10;
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        javaLanguage2.addStepDefinition(stepDefinition16);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage20.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage20.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition24 = null;
        javaLanguage20.addStepDefinition(stepDefinition24);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage20.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter27 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str28 = serializedObjectSupporter27.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter27.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter27.deserializeObjectJavaLanguage2();
        javaLanguage20.serializedObjectSupporter = serializedObjectSupporter27;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter32 = javaLanguage20.serializedObjectSupporter;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter32;
        cuke4duke.internal.java.PicoFactory picoFactory34 = serializedObjectSupporter32.deserializeObjectObjectFactory1();
        java.lang.String str35 = serializedObjectSupporter32.deserializeObjectString1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(objectFactory6);
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(picoFactory14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertNull(languageMixin22);
        org.junit.Assert.assertNull(languageMixin23);
        org.junit.Assert.assertNull(languageMixin26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "foo/java/lang/String.java" + "'", str28, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertNotNull(serializedObjectSupporter32);
        org.junit.Assert.assertNotNull(picoFactory34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str2 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str5 = serializedObjectSupporter4.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter4.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage6.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter12 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter12.deserializeObjectJavaLanguage1();
        javaLanguage11.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.PicoFactory picoFactory15 = serializedObjectSupporter12.deserializeObjectObjectFactory2();
        javaLanguage6.serializedObjectSupporter = serializedObjectSupporter12;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter17 = javaLanguage6.serializedObjectSupporter;
        javaLanguage3.serializedObjectSupporter = serializedObjectSupporter17;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter19 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str20 = serializedObjectSupporter19.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter19.deserializeObjectJavaLanguage1();
        java.lang.Class<?> wildcardClass22 = serializedObjectSupporter19.getClass();
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory27 = serializedObjectSupporter24.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory28 = serializedObjectSupporter24.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory29 = serializedObjectSupporter24.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = serializedObjectSupporter24.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter31 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str32 = serializedObjectSupporter31.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = serializedObjectSupporter31.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage33.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition35 = null;
        javaLanguage33.addStepDefinition(stepDefinition35);
        cuke4duke.internal.language.StepDefinition stepDefinition37 = null;
        javaLanguage33.addStepDefinition(stepDefinition37);
        javaLanguage33.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter40 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str41 = serializedObjectSupporter40.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = serializedObjectSupporter40.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage42.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition44 = null;
        javaLanguage42.addStepDefinition(stepDefinition44);
        java.lang.Class<?> wildcardClass46 = javaLanguage42.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        javaLanguage3.begin_scenario();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "foo/java/lang/String.java" + "'", str2, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(picoFactory15);
        org.junit.Assert.assertNotNull(serializedObjectSupporter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "foo/java/lang/String.java" + "'", str20, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(picoFactory27);
        org.junit.Assert.assertNotNull(picoFactory28);
        org.junit.Assert.assertNotNull(picoFactory29);
        org.junit.Assert.assertNotNull(javaLanguage30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "foo/java/lang/String.java" + "'", str32, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage33);
        org.junit.Assert.assertNotNull(objectFactory34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "foo/java/lang/String.java" + "'", str41, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage42);
        org.junit.Assert.assertNotNull(objectFactory43);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.Class class3 = javaLanguage1.loadClass("foo/java/lang/String.java");
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter5 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str6 = serializedObjectSupporter5.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter5.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage7.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str15 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter14;
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.String str19 = serializedObjectSupporter14.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        java.lang.String str23 = serializedObjectSupporter14.deserializeObjectString1();
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter14.deserializeObjectObjectFactory1();
        java.lang.String str25 = serializedObjectSupporter14.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter14.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter14;
        java.lang.reflect.Method method28 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage1.registerAfterMaybe(method28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(class3);
        org.junit.Assert.assertNotNull(objectFactory4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/String.java" + "'", str6, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "foo/java/lang/String.java" + "'", str15, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/Strix.java" + "'", str19, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(javaLanguage21);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "foo/java/lang/String.java" + "'", str23, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/Strix.java" + "'", str25, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage2.addStepDefinition(stepDefinition10);
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        javaLanguage2.addStepDefinition(stepDefinition12);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNull(languageMixin6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage2.getlanguageMixin();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = javaLanguage2.serializedObjectSupporter;
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNull(serializedObjectSupporter10);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter10;
        java.lang.String str13 = serializedObjectSupporter10.deserializeObjectString1();
        java.lang.String str14 = serializedObjectSupporter10.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter10.deserializeObjectJavaLanguage2();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "foo/java/lang/String.java" + "'", str13, "foo/java/lang/String.java");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter2 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = serializedObjectSupporter2.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter2;
        java.lang.String str5 = serializedObjectSupporter2.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = serializedObjectSupporter2.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage6.getobjectFactory();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage6.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(javaLanguage3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "foo/java/lang/String.java" + "'", str5, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage6);
        org.junit.Assert.assertNotNull(objectFactory7);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method11 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(serializedObjectSupporter9);
        org.junit.Assert.assertNotNull(objectFactory10);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.PicoFactory picoFactory2 = serializedObjectSupporter0.deserializeObjectObjectFactory1();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/Strix.java" + "'", str1, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(picoFactory2);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition22 = null;
        javaLanguage20.addStepDefinition(stepDefinition22);
        cuke4duke.internal.language.StepDefinition stepDefinition24 = null;
        javaLanguage20.addStepDefinition(stepDefinition24);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage27.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage27.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = javaLanguage27.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter34.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage36.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage36.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage40.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter42 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str43 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        javaLanguage40.serializedObjectSupporter = serializedObjectSupporter42;
        java.lang.Class<?> wildcardClass46 = serializedObjectSupporter42.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter54 = javaLanguage17.serializedObjectSupporter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class56 = javaLanguage17.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(objectFactory28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(objectFactory37);
        org.junit.Assert.assertNull(languageMixin38);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(objectFactory41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foo/java/lang/String.java" + "'", str43, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(serializedObjectSupporter54);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.lang.String str3 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.String str6 = serializedObjectSupporter0.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter0.deserializeObjectJavaLanguage2();
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage7.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "foo/java/lang/Strix.java" + "'", str3, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage4);
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "foo/java/lang/Strix.java" + "'", str6, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage7);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter7 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str9 = serializedObjectSupporter8.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage10.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage10.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter16;
        java.lang.Class<?> wildcardClass20 = serializedObjectSupporter16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        java.lang.Class<?> wildcardClass26 = javaLanguage1.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertNotNull(serializedObjectSupporter7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "foo/java/lang/String.java" + "'", str9, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage10);
        org.junit.Assert.assertNotNull(objectFactory11);
        org.junit.Assert.assertNull(languageMixin12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter8 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = serializedObjectSupporter8.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage9.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter11 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str12 = serializedObjectSupporter11.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = serializedObjectSupporter11.deserializeObjectJavaLanguage1();
        javaLanguage9.serializedObjectSupporter = serializedObjectSupporter11;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter15 = javaLanguage9.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage18.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter21 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = serializedObjectSupporter21.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage22.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter24 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str25 = serializedObjectSupporter24.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = serializedObjectSupporter24.deserializeObjectJavaLanguage1();
        javaLanguage22.serializedObjectSupporter = serializedObjectSupporter24;
        java.lang.Class<?> wildcardClass28 = serializedObjectSupporter24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage2.objectFactory;
        java.lang.reflect.Method method36 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerBeforeMaybe(method36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNotNull(javaLanguage9);
        org.junit.Assert.assertNotNull(objectFactory10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "foo/java/lang/String.java" + "'", str12, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage13);
        org.junit.Assert.assertNotNull(serializedObjectSupporter15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(objectFactory19);
        org.junit.Assert.assertNull(languageMixin20);
        org.junit.Assert.assertNotNull(javaLanguage22);
        org.junit.Assert.assertNotNull(objectFactory23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "foo/java/lang/String.java" + "'", str25, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(objectFactory35);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList3 = javaLanguage1.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter4 = javaLanguage1.serializedObjectSupporter;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage1.objectFactory;
        java.lang.Class<?> wildcardClass6 = objectFactory5.getClass();
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(stepDefinitionList3);
        org.junit.Assert.assertNull(serializedObjectSupporter4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        javaLanguage2.addStepDefinition(stepDefinition8);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter10 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str11 = serializedObjectSupporter10.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter10.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage12.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = javaLanguage12.languageMixin;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        javaLanguage17.serializedObjectSupporter = serializedObjectSupporter18;
        cuke4duke.internal.java.PicoFactory picoFactory21 = serializedObjectSupporter18.deserializeObjectObjectFactory2();
        javaLanguage12.serializedObjectSupporter = serializedObjectSupporter18;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter18;
        cuke4duke.internal.java.PicoFactory picoFactory24 = serializedObjectSupporter18.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.PicoFactory picoFactory25 = serializedObjectSupporter18.deserializeObjectObjectFactory2();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "foo/java/lang/String.java" + "'", str11, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage12);
        org.junit.Assert.assertNotNull(objectFactory13);
        org.junit.Assert.assertNotNull(objectFactory14);
        org.junit.Assert.assertNull(languageMixin15);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertNotNull(javaLanguage19);
        org.junit.Assert.assertNotNull(picoFactory21);
        org.junit.Assert.assertNotNull(picoFactory24);
        org.junit.Assert.assertNotNull(picoFactory25);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        javaLanguage2.begin_scenario();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage8.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition10 = null;
        javaLanguage8.addStepDefinition(stepDefinition10);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter13 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = serializedObjectSupporter13.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage14.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter16 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str17 = serializedObjectSupporter16.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = serializedObjectSupporter16.deserializeObjectJavaLanguage1();
        javaLanguage14.serializedObjectSupporter = serializedObjectSupporter16;
        cuke4duke.internal.java.PicoFactory picoFactory20 = serializedObjectSupporter16.deserializeObjectObjectFactory2();
        javaLanguage8.serializedObjectSupporter = serializedObjectSupporter16;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter16;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class24 = javaLanguage2.loadClass("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(objectFactory9);
        org.junit.Assert.assertNotNull(objectFactory12);
        org.junit.Assert.assertNotNull(javaLanguage14);
        org.junit.Assert.assertNotNull(objectFactory15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "foo/java/lang/String.java" + "'", str17, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage18);
        org.junit.Assert.assertNotNull(picoFactory20);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage2.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        javaLanguage2.addStepDefinition(stepDefinition6);
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage2.languageMixin;
        java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList12 = javaLanguage2.step_definitions_for("foo/java/lang/String.java");
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage2.languageMixin;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerAfterMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNull(languageMixin5);
        org.junit.Assert.assertNull(languageMixin8);
        org.junit.Assert.assertNull(languageMixin9);
        org.junit.Assert.assertNull(languageMixin10);
        org.junit.Assert.assertNotNull(stepDefinitionList12);
        org.junit.Assert.assertNull(languageMixin13);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition4 = null;
        javaLanguage2.addStepDefinition(stepDefinition4);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str7 = serializedObjectSupporter6.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.PicoFactory picoFactory9 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory10 = serializedObjectSupporter6.deserializeObjectObjectFactory1();
        cuke4duke.internal.java.PicoFactory picoFactory11 = serializedObjectSupporter6.deserializeObjectObjectFactory2();
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = serializedObjectSupporter6.deserializeObjectJavaLanguage2();
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter6;
        java.lang.reflect.Method method14 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage2.registerStepDefinitionMaybe(method14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNotNull(picoFactory9);
        org.junit.Assert.assertNotNull(picoFactory10);
        org.junit.Assert.assertNotNull(picoFactory11);
        org.junit.Assert.assertNotNull(javaLanguage12);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage1.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter3 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str4 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        javaLanguage1.serializedObjectSupporter = serializedObjectSupporter3;
        java.lang.String str7 = serializedObjectSupporter3.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = serializedObjectSupporter3.deserializeObjectJavaLanguage1();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage8.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage8.load("foo/java/lang/Strix.java");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: Couldn't determine class from file: foo/java/lang/Strix.java");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(javaLanguage1);
        org.junit.Assert.assertNotNull(objectFactory2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "foo/java/lang/String.java" + "'", str4, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "foo/java/lang/String.java" + "'", str7, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage8);
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter14 = javaLanguage2.serializedObjectSupporter;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter14.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage15.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage15.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage15.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertNotNull(serializedObjectSupporter14);
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(objectFactory16);
        org.junit.Assert.assertNotNull(objectFactory17);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter0 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str1 = serializedObjectSupporter0.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = serializedObjectSupporter0.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage2.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage2.getlanguageMixin();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage2.objectFactory;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter6 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = serializedObjectSupporter6.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage7.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter9 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str10 = serializedObjectSupporter9.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        javaLanguage7.serializedObjectSupporter = serializedObjectSupporter9;
        javaLanguage2.serializedObjectSupporter = serializedObjectSupporter9;
        java.lang.String str14 = serializedObjectSupporter9.deserializeObjectString2();
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = serializedObjectSupporter9.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = serializedObjectSupporter9.deserializeObjectJavaLanguage2();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter18 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str19 = serializedObjectSupporter18.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = serializedObjectSupporter18.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.getobjectFactory();
        cuke4duke.internal.language.StepDefinition stepDefinition22 = null;
        javaLanguage20.addStepDefinition(stepDefinition22);
        cuke4duke.internal.language.StepDefinition stepDefinition24 = null;
        javaLanguage20.addStepDefinition(stepDefinition24);
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter26 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = serializedObjectSupporter26.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage27.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter29 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str30 = serializedObjectSupporter29.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = serializedObjectSupporter29.deserializeObjectJavaLanguage1();
        javaLanguage27.serializedObjectSupporter = serializedObjectSupporter29;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter33 = javaLanguage27.serializedObjectSupporter;
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter34 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str35 = serializedObjectSupporter34.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = serializedObjectSupporter34.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage36.getobjectFactory();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage36.getlanguageMixin();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter39 = new cuke4duke.internal.java.SerializedObjectSupporter();
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = serializedObjectSupporter39.deserializeObjectJavaLanguage1();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage40.getobjectFactory();
        cuke4duke.internal.java.SerializedObjectSupporter serializedObjectSupporter42 = new cuke4duke.internal.java.SerializedObjectSupporter();
        java.lang.String str43 = serializedObjectSupporter42.deserializeObjectString1();
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = serializedObjectSupporter42.deserializeObjectJavaLanguage1();
        javaLanguage40.serializedObjectSupporter = serializedObjectSupporter42;
        java.lang.Class<?> wildcardClass46 = serializedObjectSupporter42.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        cuke4duke.internal.language.LanguageMixin languageMixin54 = javaLanguage17.getlanguageMixin();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass55 = languageMixin54.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "foo/java/lang/String.java" + "'", str1, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage2);
        org.junit.Assert.assertNotNull(objectFactory3);
        org.junit.Assert.assertNull(languageMixin4);
        org.junit.Assert.assertNotNull(objectFactory5);
        org.junit.Assert.assertNotNull(javaLanguage7);
        org.junit.Assert.assertNotNull(objectFactory8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "foo/java/lang/String.java" + "'", str10, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "foo/java/lang/Strix.java" + "'", str14, "foo/java/lang/Strix.java");
        org.junit.Assert.assertNotNull(javaLanguage15);
        org.junit.Assert.assertNotNull(javaLanguage16);
        org.junit.Assert.assertNotNull(javaLanguage17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "foo/java/lang/String.java" + "'", str19, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage20);
        org.junit.Assert.assertNotNull(objectFactory21);
        org.junit.Assert.assertNotNull(javaLanguage27);
        org.junit.Assert.assertNotNull(objectFactory28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "foo/java/lang/String.java" + "'", str30, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage31);
        org.junit.Assert.assertNotNull(serializedObjectSupporter33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "foo/java/lang/String.java" + "'", str35, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage36);
        org.junit.Assert.assertNotNull(objectFactory37);
        org.junit.Assert.assertNull(languageMixin38);
        org.junit.Assert.assertNotNull(javaLanguage40);
        org.junit.Assert.assertNotNull(objectFactory41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "foo/java/lang/String.java" + "'", str43, "foo/java/lang/String.java");
        org.junit.Assert.assertNotNull(javaLanguage44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(languageMixin54);
    }
}

