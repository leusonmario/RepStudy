/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 03 10:04:51 GMT 2021
 */

package com.thinkaurelius.titan.graphdb.database.serialize;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.thinkaurelius.titan.graphdb.database.serialize.Serializer;
import com.thinkaurelius.titan.graphdb.database.serialize.SerializerInitialization;
import com.thinkaurelius.titan.graphdb.database.serialize.kryo.KryoSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SerializerInitialization_ESTest extends SerializerInitialization_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      boolean boolean0 = true;
      KryoSerializer kryoSerializer0 = new KryoSerializer(boolean0);
      assertNotNull(kryoSerializer0);
      
      // Undeclared exception!
      try { 
        SerializerInitialization.initialize(kryoSerializer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // ID has already been registered: 41
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      SerializerInitialization serializerInitialization0 = new SerializerInitialization();
      assertEquals(40, SerializerInitialization.KRYO_OFFSET);
      assertEquals(256, SerializerInitialization.RESERVED_ID_OFFSET);
      assertNotNull(serializerInitialization0);
      
      SerializerInitialization.RESERVED_ID_OFFSET = serializerInitialization0.KRYO_OFFSET;
      boolean boolean0 = false;
      KryoSerializer kryoSerializer0 = null;
      try {
        kryoSerializer0 = new KryoSerializer(boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // ID allocation overflow!
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      boolean boolean0 = false;
      KryoSerializer kryoSerializer0 = new KryoSerializer(boolean0);
      assertNotNull(kryoSerializer0);
      
      // Undeclared exception!
      try { 
        SerializerInitialization.initialize(kryoSerializer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // ID has already been registered: 41
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      Serializer serializer0 = null;
      // Undeclared exception!
      try { 
        SerializerInitialization.initialize(serializer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.thinkaurelius.titan.graphdb.database.serialize.SerializerInitialization", e);
      }
  }
}
