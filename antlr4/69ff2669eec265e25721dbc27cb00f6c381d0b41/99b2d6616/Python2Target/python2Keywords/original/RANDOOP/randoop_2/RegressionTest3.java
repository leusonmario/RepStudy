import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.getListLabel("\"tset_tset_hi\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getElementName("___tseContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset_tset_hi\"" + "'", str8, "\"tset_tset_hi\"");
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        boolean boolean9 = python2Target1.supportsOverloadedMethods();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("\\1");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\1Context" + "'", str11, "\\1Context");
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_tset_hi!");
        java.lang.String str12 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset_hi!\"" + "'", str10, "\"_tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "d" + "'", str12, "d");
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        boolean boolean7 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("____tset");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("\\\"\\\\\\\"ython\\\\\\\"\\\"");
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "____tsetContext" + "'", str9, "____tsetContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str11, "\"\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        boolean boolean22 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet23 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python2Target1.getElementListName("tset\\\\\\\"\\\\\\\"__tset\\\\\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_tset\"@\"");
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        boolean boolean13 = python2Target1.supportsOverloadedMethods();
        int int14 = python2Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getElementName("\"_tset_tset_hi!\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"@\"Context" + "'", str11, "_tset\"@\"Context");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.lang.String str12 = python2Target9.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target9.getTemplates();
        int int14 = python2Target9.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String str19 = python2Target17.getAltLabelContextStructName("\\0");
        boolean boolean20 = python2Target17.wantsBaseListener();
        java.lang.String str22 = python2Target17.getImplicitRuleLabel("___tset");
        java.lang.String str24 = python2Target17.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet25 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        boolean boolean29 = python2Target28.supportsOverloadedMethods();
        boolean boolean30 = python2Target28.wantsBaseListener();
        boolean boolean31 = python2Target28.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target28.getTemplates();
        boolean boolean33 = python2Target28.templatesExist();
        java.lang.String str35 = python2Target28.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python2Target28.getCodeGenerator();
        boolean boolean37 = python2Target28.templatesExist();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        boolean boolean41 = python2Target40.supportsOverloadedMethods();
        boolean boolean42 = python2Target40.wantsBaseListener();
        boolean boolean43 = python2Target40.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python2Target40.getTokenTypesAsTargetLabels(grammar44, intArray45);
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python2Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "hi!", true);
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        boolean boolean54 = python2Target53.supportsOverloadedMethods();
        boolean boolean55 = python2Target53.wantsBaseListener();
        boolean boolean56 = python2Target53.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python2Target53.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python2Target40.getTokenTypesAsTargetLabels(grammar51, intArray58);
        java.lang.String[] strArray61 = python2Target28.getTokenTypesAsTargetLabels(grammar38, intArray58);
        java.lang.String[] strArray62 = python2Target17.getTokenTypesAsTargetLabels(grammar26, intArray58);
        java.lang.String[] strArray63 = python2Target9.getTokenTypesAsTargetLabels(grammar15, intArray58);
        java.lang.String[] strArray64 = python2Target1.getTokenTypesAsTargetLabels(grammar7, intArray58);
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = python2Target1.getCodeGenerator();
        java.lang.String str67 = python2Target1.getTargetStringLiteralFromString("d");
        org.antlr.v4.tool.ast.GrammarAST grammarAST68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = python2Target1.getLoopLabel(grammarAST68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\0Context" + "'", str19, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "____tset" + "'", str22, "____tset");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"@\"" + "'", str24, "\"@\"");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"_tsetContext\"" + "'", str35, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"i\"" + "'", str50, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNull(codeGenerator65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"d\"" + "'", str67, "\"d\"");
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("_tset_tset__\"__tset\"");
        java.lang.String str8 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_tset_tset__\\\"__tset\\\"\"" + "'", str7, "\"_tset_tset__\\\"__tset\\\"\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getVersion();
        int int10 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String str16 = python2Target13.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target13.getTemplates();
        int int18 = python2Target13.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.lang.String str23 = python2Target21.getAltLabelContextStructName("\\0");
        boolean boolean24 = python2Target21.wantsBaseListener();
        java.lang.String str26 = python2Target21.getImplicitRuleLabel("___tset");
        java.lang.String str28 = python2Target21.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet29 = python2Target21.getBadWords();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        boolean boolean33 = python2Target32.supportsOverloadedMethods();
        boolean boolean34 = python2Target32.wantsBaseListener();
        boolean boolean35 = python2Target32.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target32.getTemplates();
        boolean boolean37 = python2Target32.templatesExist();
        java.lang.String str39 = python2Target32.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python2Target32.getCodeGenerator();
        boolean boolean41 = python2Target32.templatesExist();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target44 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator43);
        boolean boolean45 = python2Target44.supportsOverloadedMethods();
        boolean boolean46 = python2Target44.wantsBaseListener();
        boolean boolean47 = python2Target44.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar48 = null;
        int[] intArray49 = new int[] {};
        java.lang.String[] strArray50 = python2Target44.getTokenTypesAsTargetLabels(grammar48, intArray49);
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python2Target44.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "hi!", true);
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target57 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator56);
        boolean boolean58 = python2Target57.supportsOverloadedMethods();
        boolean boolean59 = python2Target57.wantsBaseListener();
        boolean boolean60 = python2Target57.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python2Target57.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python2Target44.getTokenTypesAsTargetLabels(grammar55, intArray62);
        java.lang.String[] strArray65 = python2Target32.getTokenTypesAsTargetLabels(grammar42, intArray62);
        java.lang.String[] strArray66 = python2Target21.getTokenTypesAsTargetLabels(grammar30, intArray62);
        java.lang.String[] strArray67 = python2Target13.getTokenTypesAsTargetLabels(grammar19, intArray62);
        java.lang.String[] strArray68 = python2Target1.getTokenTypesAsTargetLabels(grammar11, intArray62);
        java.util.Set<java.lang.String> strSet69 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = python2Target1.getImplicitTokenLabel("_\"\\\".5.2.\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\0Context" + "'", str23, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "____tset" + "'", str26, "____tset");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"@\"" + "'", str28, "\"@\"");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"_tsetContext\"" + "'", str39, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"i\"" + "'", str54, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strSet69);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        boolean boolean7 = python2Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getImplicitTokenLabel("\"_tset\\\"_tset_hi!\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        java.lang.String str7 = python2Target1.getAltLabelContextStructName("\"hi!\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getRuleFunctionContextStructName(ruleFunction8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"hi!\"Context" + "'", str7, "\"hi!\"Context");
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_hi!");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("d");
        boolean boolean15 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromString("\"__tset_tset\\\\0Context\"", true);
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        boolean boolean23 = python2Target22.supportsOverloadedMethods();
        boolean boolean24 = python2Target22.wantsBaseListener();
        boolean boolean25 = python2Target22.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target22.getTemplates();
        boolean boolean27 = python2Target22.templatesExist();
        java.lang.String str29 = python2Target22.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = python2Target22.getCodeGenerator();
        boolean boolean31 = python2Target22.templatesExist();
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        boolean boolean35 = python2Target34.supportsOverloadedMethods();
        boolean boolean36 = python2Target34.wantsBaseListener();
        boolean boolean37 = python2Target34.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar38 = null;
        int[] intArray39 = new int[] {};
        java.lang.String[] strArray40 = python2Target34.getTokenTypesAsTargetLabels(grammar38, intArray39);
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        java.lang.String str44 = python2Target34.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator41, "hi!", true);
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        boolean boolean48 = python2Target47.supportsOverloadedMethods();
        boolean boolean49 = python2Target47.wantsBaseListener();
        boolean boolean50 = python2Target47.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar51 = null;
        int[] intArray52 = new int[] {};
        java.lang.String[] strArray53 = python2Target47.getTokenTypesAsTargetLabels(grammar51, intArray52);
        java.lang.String[] strArray54 = python2Target34.getTokenTypesAsTargetLabels(grammar45, intArray52);
        java.lang.String[] strArray55 = python2Target22.getTokenTypesAsTargetLabels(grammar32, intArray52);
        java.lang.String[] strArray56 = python2Target1.getTokenTypesAsTargetLabels(grammar20, intArray52);
        int int57 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_hi!" + "'", str12, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_d" + "'", str14, "_d");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"__tset_tset\\\\\\\\0Context\\\"\"" + "'", str19, "\"\\\"__tset_tset\\\\\\\\0Context\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"_tsetContext\"" + "'", str29, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "\"i\"" + "'", str44, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 64 + "'", int57 == 64);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getVersion();
        boolean boolean8 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__\"_tset_hi!\"", true);
        java.lang.String str14 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"_tset_hi!\"" + "'", str13, "\"_\\\"_tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.lang.String str12 = python2Target9.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target9.getTemplates();
        int int14 = python2Target9.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String str19 = python2Target17.getAltLabelContextStructName("\\0");
        boolean boolean20 = python2Target17.wantsBaseListener();
        java.lang.String str22 = python2Target17.getImplicitRuleLabel("___tset");
        java.lang.String str24 = python2Target17.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet25 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        boolean boolean29 = python2Target28.supportsOverloadedMethods();
        boolean boolean30 = python2Target28.wantsBaseListener();
        boolean boolean31 = python2Target28.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target28.getTemplates();
        boolean boolean33 = python2Target28.templatesExist();
        java.lang.String str35 = python2Target28.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python2Target28.getCodeGenerator();
        boolean boolean37 = python2Target28.templatesExist();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        boolean boolean41 = python2Target40.supportsOverloadedMethods();
        boolean boolean42 = python2Target40.wantsBaseListener();
        boolean boolean43 = python2Target40.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python2Target40.getTokenTypesAsTargetLabels(grammar44, intArray45);
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python2Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "hi!", true);
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        boolean boolean54 = python2Target53.supportsOverloadedMethods();
        boolean boolean55 = python2Target53.wantsBaseListener();
        boolean boolean56 = python2Target53.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python2Target53.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python2Target40.getTokenTypesAsTargetLabels(grammar51, intArray58);
        java.lang.String[] strArray61 = python2Target28.getTokenTypesAsTargetLabels(grammar38, intArray58);
        java.lang.String[] strArray62 = python2Target17.getTokenTypesAsTargetLabels(grammar26, intArray58);
        java.lang.String[] strArray63 = python2Target9.getTokenTypesAsTargetLabels(grammar15, intArray58);
        java.lang.String[] strArray64 = python2Target1.getTokenTypesAsTargetLabels(grammar7, intArray58);
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = python2Target1.getCodeGenerator();
        java.lang.String str67 = python2Target1.getTargetStringLiteralFromString("d");
        boolean boolean68 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\0Context" + "'", str19, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "____tset" + "'", str22, "____tset");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"@\"" + "'", str24, "\"@\"");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"_tsetContext\"" + "'", str35, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"i\"" + "'", str50, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNull(codeGenerator65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"d\"" + "'", str67, "\"d\"");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getVersion();
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.getListLabel("Python2");
        java.lang.String str11 = python2Target1.getVersion();
        java.lang.String str13 = python2Target1.encodeIntAsCharEscape((int) '#');
        int int14 = python2Target1.getInlineTestSetWordSize();
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        int int16 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        boolean boolean20 = python2Target19.supportsOverloadedMethods();
        boolean boolean21 = python2Target19.wantsBaseListener();
        boolean boolean22 = python2Target19.wantsBaseListener();
        java.lang.String str24 = python2Target19.getImplicitSetLabel("\\\"@\\\"");
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        boolean boolean28 = python2Target27.supportsOverloadedMethods();
        boolean boolean29 = python2Target27.wantsBaseListener();
        boolean boolean30 = python2Target27.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup31 = python2Target27.getTemplates();
        boolean boolean32 = python2Target27.templatesExist();
        java.lang.String str35 = python2Target27.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str37 = python2Target27.getAltLabelContextStructName("@");
        java.lang.String str39 = python2Target27.getImplicitRuleLabel("_tset_tset\\0Context");
        org.stringtemplate.v4.STGroup sTGroup40 = python2Target27.getTemplates();
        java.util.Set<java.lang.String> strSet41 = python2Target27.getBadWords();
        boolean boolean42 = python2Target27.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        java.lang.String str46 = python2Target27.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator43, "_tset\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = python2Target27.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar48 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target50 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator49);
        boolean boolean51 = python2Target50.supportsOverloadedMethods();
        boolean boolean52 = python2Target50.wantsBaseListener();
        boolean boolean53 = python2Target50.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup54 = python2Target50.getTemplates();
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target57 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator56);
        boolean boolean58 = python2Target57.supportsOverloadedMethods();
        boolean boolean59 = python2Target57.wantsBaseListener();
        boolean boolean60 = python2Target57.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python2Target57.getTokenTypesAsTargetLabels(grammar61, intArray62);
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = null;
        java.lang.String str67 = python2Target57.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator64, "hi!", true);
        org.antlr.v4.tool.Grammar grammar68 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator69 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target70 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator69);
        boolean boolean71 = python2Target70.supportsOverloadedMethods();
        boolean boolean72 = python2Target70.wantsBaseListener();
        boolean boolean73 = python2Target70.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar74 = null;
        int[] intArray75 = new int[] {};
        java.lang.String[] strArray76 = python2Target70.getTokenTypesAsTargetLabels(grammar74, intArray75);
        java.lang.String[] strArray77 = python2Target57.getTokenTypesAsTargetLabels(grammar68, intArray75);
        java.lang.String[] strArray78 = python2Target50.getTokenTypesAsTargetLabels(grammar55, intArray75);
        java.lang.String[] strArray79 = python2Target27.getTokenTypesAsTargetLabels(grammar48, intArray75);
        java.lang.String[] strArray80 = python2Target19.getTokenTypesAsTargetLabels(grammar25, intArray75);
        java.lang.String[] strArray81 = python2Target1.getTokenTypesAsTargetLabels(grammar17, intArray75);
        java.lang.String str82 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#" + "'", str13, "#");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_tset\\\"@\\\"" + "'", str24, "_tset\\\"@\\\"");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(sTGroup31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str35, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "@Context" + "'", str37, "@Context");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "__tset_tset\\0Context" + "'", str39, "__tset_tset\\0Context");
        org.junit.Assert.assertNotNull(sTGroup40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tset0" + "'", str46, "tset0");
        org.junit.Assert.assertNull(codeGenerator47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(sTGroup54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\"i\"" + "'", str67, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[]");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "4.5.2.1" + "'", str82, "4.5.2.1");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getElementName("\"\\\\\\\"@\\\\\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        boolean boolean8 = python2Target7.supportsOverloadedMethods();
        boolean boolean9 = python2Target7.wantsBaseListener();
        boolean boolean10 = python2Target7.wantsBaseVisitor();
        boolean boolean11 = python2Target7.supportsOverloadedMethods();
        java.lang.String str13 = python2Target7.encodeIntAsCharEscape((int) (short) 100);
        int int14 = python2Target7.getInlineTestSetWordSize();
        java.lang.String str16 = python2Target7.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        boolean boolean20 = python2Target19.supportsOverloadedMethods();
        boolean boolean21 = python2Target19.wantsBaseListener();
        boolean boolean22 = python2Target19.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target19.getTemplates();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        boolean boolean27 = python2Target26.supportsOverloadedMethods();
        boolean boolean28 = python2Target26.wantsBaseListener();
        boolean boolean29 = python2Target26.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python2Target26.getTokenTypesAsTargetLabels(grammar30, intArray31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python2Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "hi!", true);
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        boolean boolean40 = python2Target39.supportsOverloadedMethods();
        boolean boolean41 = python2Target39.wantsBaseListener();
        boolean boolean42 = python2Target39.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python2Target39.getTokenTypesAsTargetLabels(grammar43, intArray44);
        java.lang.String[] strArray46 = python2Target26.getTokenTypesAsTargetLabels(grammar37, intArray44);
        java.lang.String[] strArray47 = python2Target19.getTokenTypesAsTargetLabels(grammar24, intArray44);
        java.lang.String[] strArray48 = python2Target7.getTokenTypesAsTargetLabels(grammar17, intArray44);
        java.lang.String[] strArray49 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray44);
        boolean boolean50 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Rule rule51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = python2Target1.getRuleFunctionContextStructName(rule51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "d" + "'", str13, "d");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\n" + "'", str16, "\\n");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"i\"" + "'", str36, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "____tset", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "___tse" + "'", str13, "___tse");
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        java.lang.String str5 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_4.5.2.1" + "'", str5, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"i\\\"\"" + "'", str8, "\"\\\"i\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        int int7 = python2Target1.getInlineTestSetWordSize();
        boolean boolean8 = python2Target1.wantsBaseListener();
        int int9 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getLoopLabel(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        java.lang.String str11 = python2Target1.getListLabel("\\1");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("\"_tsethi!\"");
        java.lang.String str15 = python2Target1.getAltLabelContextStructName("___\"\\\"____tset\\\"\"");
        boolean boolean16 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getLoopLabel(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\1" + "'", str11, "\\1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"_tsethi!\"" + "'", str13, "_\"_tsethi!\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "___\"\\\"____tset\\\"\"Context" + "'", str15, "___\"\\\"____tset\\\"\"Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        int int9 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getTargetStringLiteralFromString("\"_tset_hi!\"");
        java.lang.String str4 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\\\"_tset_hi!\\\"\"" + "'", str3, "\"\\\"_tset_hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator5);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("\"\\\".5.2.\\\"\"");
        int int10 = python2Target1.getInlineTestSetWordSize();
        int int11 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("i");
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"\\\".5.2.\\\"\"" + "'", str9, "_\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"i\"" + "'", str13, "\"i\"");
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        int int4 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("#");
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape(1);
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("Tset_tset_hiContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset#" + "'", str6, "_tset#");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_Tset_tset_hiContext" + "'", str12, "_Tset_tset_hiContext");
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.String str8 = python2Target1.getImplicitSetLabel("\"4.5.2.1\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getLoopCounter(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"@\\\"" + "'", str6, "\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"4.5.2.1\"" + "'", str8, "_tset\"4.5.2.1\"");
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_hi!");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("d");
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python2Target1.getImplicitRuleLabel("\"hi!\"");
        org.antlr.v4.tool.Rule rule18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python2Target1.getRuleFunctionContextStructName(rule18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_hi!" + "'", str12, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_d" + "'", str14, "_d");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\"hi!\"" + "'", str17, "_\"hi!\"");
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        boolean boolean8 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str5 = python2Target1.getImplicitRuleLabel("__tset");
        java.lang.String str7 = python2Target1.getImplicitSetLabel("\"\\\"__tset\\\"\"");
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "___tset" + "'", str5, "___tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\"\\\"__tset\\\"\"" + "'", str7, "_tset\"\\\"__tset\\\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) '#');
        org.antlr.v4.tool.Grammar grammar12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getTokenTypeAsTargetLabel(grammar12, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#" + "'", str11, "#");
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python2Target1.getVersion();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("\"__tset\"");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"__tset\"" + "'", str9, "_\"__tset\"");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("");
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("_tset_hi!");
        boolean boolean11 = python2Target1.wantsBaseVisitor();
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("\"tset0Contex\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset" + "'", str8, "_tset");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_hi!" + "'", str10, "__tset_hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\\"tset0Contex\\\"" + "'", str14, "\\\"tset0Contex\\\"");
        org.junit.Assert.assertNull(codeGenerator15);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str6 = python2Target1.getAltLabelContextStructName("___tset");
        java.lang.String str7 = python2Target1.getLanguage();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("_tsethi!");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "___tsetContext" + "'", str6, "___tsetContext");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"_tsethi!\"" + "'", str9, "\"_tsethi!\"");
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("@");
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape(1);
        java.lang.String str17 = python2Target1.getListLabel("\\\\0ContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@Context" + "'", str11, "@Context");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\1" + "'", str15, "\\1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\\0ContextContext" + "'", str17, "\\\\0ContextContext");
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_tset4.5.2.1ContextContex");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset\"_tsetContext\"", false);
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset4.5.2.1ContextContex" + "'", str12, "_tset_tset4.5.2.1ContextContex");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tset\\\"_tsetContext" + "'", str16, "tset\\\"_tsetContext");
        org.junit.Assert.assertNotNull(sTGroup17);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("_4.5.2.1Context");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("\"4.5.2.1\"Context");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_4.5.2.1ContextContext" + "'", str9, "_4.5.2.1ContextContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"4.5.2.1\\\"Context\"" + "'", str11, "\"\\\"4.5.2.1\\\"Context\"");
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_tset_hi!");
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        java.lang.String str12 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getTokenTypeAsTargetLabel(grammar13, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset_hi!\"" + "'", str10, "\"_tset_hi!\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        java.lang.String str7 = python2Target1.getVersion();
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_tset\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"");
        java.lang.String str12 = python2Target1.getListLabel("tset0");
        java.lang.String str13 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset\\\"\\\\\\\"_tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"Context\\\"\"" + "'", str10, "\"_tset\\\"\\\\\\\"_tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tset0" + "'", str12, "tset0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getElementName("_tset\"tset6\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_4.5.2.1Context" + "'", str11, "_4.5.2.1Context");
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        boolean boolean6 = python2Target1.wantsBaseListener();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("YthonContext", false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "YthonContext" + "'", str11, "YthonContext");
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getVersion();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Rule rule8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getRuleFunctionContextStructName(rule8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "4.5.2.1", true);
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\\0Context");
        boolean boolean13 = python2Target1.templatesExist();
        boolean boolean14 = python2Target1.templatesExist();
        java.lang.Class<?> wildcardClass15 = python2Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\".5.2.\"" + "'", str10, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\0Context" + "'", str12, "_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        int int8 = python2Target1.getInlineTestSetWordSize();
        boolean boolean9 = python2Target1.templatesExist();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        boolean boolean4 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.encodeIntAsCharEscape((int) (byte) 1);
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str8 = python2Target1.getVersion();
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("_Python2Context");
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\1" + "'", str6, "\\1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_Python2ContextContext" + "'", str10, "_Python2ContextContext");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\\\\\"_tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str12, "\"\\\\\\\"_tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("__tsetContexContext");
        java.lang.String str10 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"__tsetContexContext\"" + "'", str9, "\"__tsetContexContext\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.lang.String str6 = python2Target1.getVersion();
        boolean boolean7 = python2Target1.wantsBaseListener();
        boolean boolean8 = python2Target1.wantsBaseListener();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getVersion();
        org.antlr.v4.tool.Rule rule7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getRuleFunctionContextStructName(rule7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("@");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("_tset_tset\\0Context");
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        java.lang.String str16 = python2Target1.encodeIntAsCharEscape((int) 'a');
        boolean boolean17 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@Context" + "'", str11, "@Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__tset_tset\\0Context" + "'", str13, "__tset_tset\\0Context");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "a" + "'", str16, "a");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(codeGenerator18);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.Class<?> wildcardClass7 = python2Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"@\\\"" + "'", str6, "\\\"@\\\"");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        java.lang.String str7 = python2Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (byte) 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"hi!\"Context" + "'", str7, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset_hi!\"");
        java.lang.String str13 = python2Target1.getLanguage();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getImplicitTokenLabel("_tset_tset_tset_tset\"tset0Contex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_hi!\"Context" + "'", str12, "\"_tset_hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"ContextContext", false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\\\\\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"ContextContext" + "'", str12, "\\\\\\\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"ContextContext");
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("\"\\\".5.2.\\\"\"");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"\\\".5.2.\\\"\"" + "'", str9, "_\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("");
        java.lang.String str10 = python2Target1.getListLabel("");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset" + "'", str8, "_tset");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        int int4 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("#");
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape(1);
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) ' ');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset#" + "'", str6, "_tset#");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "4.5.2.1", true);
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\\0Context");
        boolean boolean13 = python2Target1.templatesExist();
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape((int) 'a');
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getLoopLabel(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\".5.2.\"" + "'", str10, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\0Context" + "'", str12, "_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "a" + "'", str15, "a");
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_hi!");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("d");
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("_\"\\\".5.2.\\\"\"", false);
        boolean boolean18 = python2Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_hi!" + "'", str12, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_d" + "'", str14, "_d");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\\\"\\\\\\\".5.2.\\\\\\\"\\\"" + "'", str17, "_\\\"\\\\\\\".5.2.\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("__\"__tset\"");
        java.lang.String str12 = python2Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar13 = null;
        int[] intArray14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray15 = python2Target1.getTokenTypesAsTargetLabels(grammar13, intArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset__\"__tset\"" + "'", str11, "_tset__\"__tset\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        java.lang.String str9 = python2Target1.getVersion();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_hi");
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_tset_tset\"tset0Contex\"");
        java.lang.String str14 = python2Target1.getVersion();
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__hi" + "'", str11, "__hi");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset_tset\\\"tset0Contex\\\"\"" + "'", str13, "\"_tset_tset\\\"tset0Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar8 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target10 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator9);
        java.lang.String str13 = python2Target10.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target10.getTemplates();
        boolean boolean15 = python2Target10.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar16 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target18 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator17);
        java.lang.String str20 = python2Target18.getAltLabelContextStructName("\\0");
        boolean boolean21 = python2Target18.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python2Target18.getCodeGenerator();
        java.lang.String str23 = python2Target18.getLanguage();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        java.lang.String str29 = python2Target26.getTargetStringLiteralFromString("", false);
        boolean boolean30 = python2Target26.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = python2Target33.getCodeGenerator();
        int int35 = python2Target33.getSerializedATNSegmentLimit();
        java.lang.String str36 = python2Target33.getLanguage();
        java.lang.String str38 = python2Target33.getTargetStringLiteralFromString("_tsetPython2");
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        java.lang.String str43 = python2Target41.getAltLabelContextStructName("\\0");
        boolean boolean44 = python2Target41.wantsBaseListener();
        java.lang.String str46 = python2Target41.getImplicitRuleLabel("___tset");
        java.lang.String str48 = python2Target41.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet49 = python2Target41.getBadWords();
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target52 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator51);
        boolean boolean53 = python2Target52.supportsOverloadedMethods();
        boolean boolean54 = python2Target52.wantsBaseListener();
        boolean boolean55 = python2Target52.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup56 = python2Target52.getTemplates();
        boolean boolean57 = python2Target52.templatesExist();
        java.lang.String str59 = python2Target52.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = python2Target52.getCodeGenerator();
        boolean boolean61 = python2Target52.templatesExist();
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target64 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator63);
        boolean boolean65 = python2Target64.supportsOverloadedMethods();
        boolean boolean66 = python2Target64.wantsBaseListener();
        boolean boolean67 = python2Target64.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar68 = null;
        int[] intArray69 = new int[] {};
        java.lang.String[] strArray70 = python2Target64.getTokenTypesAsTargetLabels(grammar68, intArray69);
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        java.lang.String str74 = python2Target64.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator71, "hi!", true);
        org.antlr.v4.tool.Grammar grammar75 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator76 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target77 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator76);
        boolean boolean78 = python2Target77.supportsOverloadedMethods();
        boolean boolean79 = python2Target77.wantsBaseListener();
        boolean boolean80 = python2Target77.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar81 = null;
        int[] intArray82 = new int[] {};
        java.lang.String[] strArray83 = python2Target77.getTokenTypesAsTargetLabels(grammar81, intArray82);
        java.lang.String[] strArray84 = python2Target64.getTokenTypesAsTargetLabels(grammar75, intArray82);
        java.lang.String[] strArray85 = python2Target52.getTokenTypesAsTargetLabels(grammar62, intArray82);
        java.lang.String[] strArray86 = python2Target41.getTokenTypesAsTargetLabels(grammar50, intArray82);
        java.lang.String[] strArray87 = python2Target33.getTokenTypesAsTargetLabels(grammar39, intArray82);
        java.lang.String[] strArray88 = python2Target26.getTokenTypesAsTargetLabels(grammar31, intArray82);
        java.lang.String[] strArray89 = python2Target18.getTokenTypesAsTargetLabels(grammar24, intArray82);
        java.lang.String[] strArray90 = python2Target10.getTokenTypesAsTargetLabels(grammar16, intArray82);
        java.lang.String[] strArray91 = python2Target1.getTokenTypesAsTargetLabels(grammar8, intArray82);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\\0Context" + "'", str20, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Python2" + "'", str23, "Python2");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(codeGenerator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2147483647 + "'", int35 == 2147483647);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Python2" + "'", str36, "Python2");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"_tsetPython2\"" + "'", str38, "\"_tsetPython2\"");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\\0Context" + "'", str43, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "____tset" + "'", str46, "____tset");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"@\"" + "'", str48, "\"@\"");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(sTGroup56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\"_tsetContext\"" + "'", str59, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "\"i\"" + "'", str74, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[]");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("");
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("_tset_hi!");
        boolean boolean11 = python2Target1.wantsBaseVisitor();
        boolean boolean12 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset" + "'", str8, "_tset");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset_hi!" + "'", str10, "__tset_hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_hi!");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        boolean boolean18 = python2Target14.supportsOverloadedMethods();
        java.lang.String str20 = python2Target14.encodeIntAsCharEscape((int) (short) 100);
        int int21 = python2Target14.getInlineTestSetWordSize();
        java.lang.String str23 = python2Target14.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        boolean boolean27 = python2Target26.supportsOverloadedMethods();
        boolean boolean28 = python2Target26.wantsBaseListener();
        boolean boolean29 = python2Target26.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target26.getTemplates();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        boolean boolean34 = python2Target33.supportsOverloadedMethods();
        boolean boolean35 = python2Target33.wantsBaseListener();
        boolean boolean36 = python2Target33.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar37 = null;
        int[] intArray38 = new int[] {};
        java.lang.String[] strArray39 = python2Target33.getTokenTypesAsTargetLabels(grammar37, intArray38);
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python2Target33.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "hi!", true);
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target46 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator45);
        boolean boolean47 = python2Target46.supportsOverloadedMethods();
        boolean boolean48 = python2Target46.wantsBaseListener();
        boolean boolean49 = python2Target46.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python2Target46.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python2Target33.getTokenTypesAsTargetLabels(grammar44, intArray51);
        java.lang.String[] strArray54 = python2Target26.getTokenTypesAsTargetLabels(grammar31, intArray51);
        java.lang.String[] strArray55 = python2Target14.getTokenTypesAsTargetLabels(grammar24, intArray51);
        java.lang.String[] strArray56 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray51);
        boolean boolean57 = python2Target1.templatesExist();
        int int58 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str59 = python2Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__hi!" + "'", str11, "__hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "d" + "'", str20, "d");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\n" + "'", str23, "\\n");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"i\"" + "'", str43, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Python2" + "'", str59, "Python2");
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getLanguage();
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("__hi!", false);
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__hi!" + "'", str14, "__hi!");
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        boolean boolean6 = python2Target1.wantsBaseListener();
        int int7 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("");
        java.lang.String str10 = python2Target1.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\\\"_tset_hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getElementListName("_tset\"_tsethi!\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\\"_tset_hi!" + "'", str12, "_tset\\\"_tset_hi!");
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("#");
        java.lang.String str12 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_#" + "'", str11, "_#");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertNull(codeGenerator13);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getLanguage();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("__tsethi!");
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"__tsethi!\"" + "'", str10, "\"__tsethi!\"");
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_tset_tset____tset", true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_" + "'", str8, "_");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset_tset____tset\"" + "'", str11, "\"_tset_tset____tset\"");
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("_tset\\\"@\\\"Context");
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_tsetTset\\\"_tsetContextContext");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "__tset\\\"@\\\"Context" + "'", str9, "__tset\\\"@\\\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetTset\\\"_tsetContextContextContext" + "'", str11, "_tsetTset\\\"_tsetContextContextContext");
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        boolean boolean11 = python2Target1.templatesExist();
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("_Tset_tset_hiContext", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_Tset_tset_hiContext\"" + "'", str14, "\"_Tset_tset_hiContext\"");
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.lang.String str10 = python2Target1.getLanguage();
        boolean boolean11 = python2Target1.wantsBaseVisitor();
        java.lang.String str12 = python2Target1.getLanguage();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("_tset\"\\\" \\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_tset\\\"\\\\\\\" \\\\\\\"\\\"\"" + "'", str15, "\"_tset\\\"\\\\\\\" \\\\\\\"\\\"\"");
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("_tset\\0Context");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("d");
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("_tset_tset0ContexContext");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__tset\\0Context" + "'", str8, "__tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"d\"" + "'", str10, "\"d\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset0ContexContextContext" + "'", str12, "_tset_tset0ContexContextContext");
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("");
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("_tset");
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("__tset\"4.5.2.1\"");
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("@");
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(64);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset" + "'", str8, "_tset");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset" + "'", str10, "__tset");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__tset\"4.5.2.1\"Context" + "'", str12, "__tset\"4.5.2.1\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"@\"" + "'", str14, "\"@\"");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "@" + "'", str17, "@");
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("4.5.2.1");
        boolean boolean6 = python2Target1.wantsBaseListener();
        int int7 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"4.5.2.1\"" + "'", str5, "\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_hi!");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("d");
        boolean boolean15 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        boolean boolean17 = python2Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python2Target1.getElementName("\\\"_tset_hi!\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_hi!" + "'", str12, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_d" + "'", str14, "_d");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        java.lang.String str12 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str14 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\0" + "'", str12, "\\0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\1" + "'", str14, "\\1");
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        java.lang.String str22 = python2Target1.getVersion();
        boolean boolean23 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "_4.5.2.1", false);
        org.antlr.v4.codegen.model.RuleFunction ruleFunction28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = python2Target1.getRuleFunctionContextStructName(ruleFunction28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "4.5.2." + "'", str27, "4.5.2.");
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        java.lang.String str12 = python2Target1.getVersion();
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("\\\"\\\\\\\"i\\\\\\\"\\\"");
        boolean boolean15 = python2Target1.wantsBaseListener();
        java.lang.String str16 = python2Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\\\"\\\\\\\"i\\\\\\\"\\\"" + "'", str14, "_\\\"\\\\\\\"i\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("");
        java.lang.String str10 = python2Target1.getLanguage();
        boolean boolean11 = python2Target1.wantsBaseVisitor();
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("");
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.getLanguage();
        org.antlr.v4.tool.Rule rule12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getRuleFunctionContextStructName(rule12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.String str8 = python2Target1.getListLabel("\"\\\"_tset_tset_hi!\\\"\"");
        boolean boolean9 = python2Target1.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"@\\\"" + "'", str6, "\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"_tset_tset_hi!\\\"\"" + "'", str8, "\"\\\"_tset_tset_hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str6 = python2Target1.getListLabel("Python2");
        java.lang.Class<?> wildcardClass7 = python2Target1.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.wantsBaseListener();
        boolean boolean8 = python2Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        boolean boolean12 = python2Target11.supportsOverloadedMethods();
        boolean boolean13 = python2Target11.templatesExist();
        java.util.Set<java.lang.String> strSet14 = python2Target11.getBadWords();
        java.lang.String str17 = python2Target11.getTargetStringLiteralFromString("", false);
        boolean boolean18 = python2Target11.templatesExist();
        java.lang.String str19 = python2Target11.getLanguage();
        java.lang.String str20 = python2Target11.getLanguage();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String str26 = python2Target23.getTargetStringLiteralFromString("", false);
        boolean boolean27 = python2Target23.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet28 = python2Target23.getBadWords();
        java.lang.String str29 = python2Target23.getVersion();
        int int30 = python2Target23.getInlineTestSetWordSize();
        java.lang.String str32 = python2Target23.getListLabel("Python2");
        java.lang.String str33 = python2Target23.getVersion();
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target23.getTemplates();
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        boolean boolean38 = python2Target37.supportsOverloadedMethods();
        boolean boolean39 = python2Target37.wantsBaseListener();
        boolean boolean40 = python2Target37.wantsBaseVisitor();
        java.lang.String str42 = python2Target37.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str44 = python2Target37.getListLabel("_tset_hi!");
        java.lang.String str46 = python2Target37.getListLabel("");
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target49 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator48);
        boolean boolean50 = python2Target49.supportsOverloadedMethods();
        boolean boolean51 = python2Target49.wantsBaseListener();
        boolean boolean52 = python2Target49.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar53 = null;
        int[] intArray54 = new int[] {};
        java.lang.String[] strArray55 = python2Target49.getTokenTypesAsTargetLabels(grammar53, intArray54);
        java.lang.String[] strArray56 = python2Target37.getTokenTypesAsTargetLabels(grammar47, intArray54);
        java.lang.String[] strArray57 = python2Target23.getTokenTypesAsTargetLabels(grammar35, intArray54);
        java.lang.String[] strArray58 = python2Target11.getTokenTypesAsTargetLabels(grammar21, intArray54);
        java.lang.String[] strArray59 = python2Target1.getTokenTypesAsTargetLabels(grammar9, intArray54);
        java.lang.String str61 = python2Target1.getAltLabelContextStructName("\"_tset_tset0Conte\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = python2Target1.getLoopLabel(grammarAST62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Python2" + "'", str32, "Python2");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_4.5.2.1" + "'", str42, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset_hi!" + "'", str44, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"_tset_tset0Conte\"Context" + "'", str61, "\"_tset_tset0Conte\"Context");
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) '4');
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        java.lang.String str13 = python2Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\64" + "'", str11, "\\64");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str9 = python2Target1.getImplicitSetLabel("_tset\"@\"Context");
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        boolean boolean13 = python2Target12.supportsOverloadedMethods();
        boolean boolean14 = python2Target12.wantsBaseListener();
        boolean boolean15 = python2Target12.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target12.getTemplates();
        boolean boolean17 = python2Target12.templatesExist();
        java.lang.String str20 = python2Target12.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str22 = python2Target12.getAltLabelContextStructName("@");
        java.lang.String str24 = python2Target12.getImplicitRuleLabel("_tset_tset\\0Context");
        org.stringtemplate.v4.STGroup sTGroup25 = python2Target12.getTemplates();
        java.util.Set<java.lang.String> strSet26 = python2Target12.getBadWords();
        boolean boolean27 = python2Target12.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        java.lang.String str31 = python2Target12.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator28, "_tset\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python2Target12.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        boolean boolean36 = python2Target35.supportsOverloadedMethods();
        boolean boolean37 = python2Target35.wantsBaseListener();
        boolean boolean38 = python2Target35.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup39 = python2Target35.getTemplates();
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        boolean boolean43 = python2Target42.supportsOverloadedMethods();
        boolean boolean44 = python2Target42.wantsBaseListener();
        boolean boolean45 = python2Target42.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python2Target42.getTokenTypesAsTargetLabels(grammar46, intArray47);
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = null;
        java.lang.String str52 = python2Target42.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator49, "hi!", true);
        org.antlr.v4.tool.Grammar grammar53 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator54 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target55 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator54);
        boolean boolean56 = python2Target55.supportsOverloadedMethods();
        boolean boolean57 = python2Target55.wantsBaseListener();
        boolean boolean58 = python2Target55.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar59 = null;
        int[] intArray60 = new int[] {};
        java.lang.String[] strArray61 = python2Target55.getTokenTypesAsTargetLabels(grammar59, intArray60);
        java.lang.String[] strArray62 = python2Target42.getTokenTypesAsTargetLabels(grammar53, intArray60);
        java.lang.String[] strArray63 = python2Target35.getTokenTypesAsTargetLabels(grammar40, intArray60);
        java.lang.String[] strArray64 = python2Target12.getTokenTypesAsTargetLabels(grammar33, intArray60);
        java.lang.String[] strArray65 = python2Target1.getTokenTypesAsTargetLabels(grammar10, intArray60);
        java.lang.String str67 = python2Target1.encodeIntAsCharEscape(1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_tset\"@\"Context" + "'", str9, "_tset_tset\"@\"Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str20, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "@Context" + "'", str22, "@Context");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "__tset_tset\\0Context" + "'", str24, "__tset_tset\\0Context");
        org.junit.Assert.assertNotNull(sTGroup25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tset0" + "'", str31, "tset0");
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(sTGroup39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "\"i\"" + "'", str52, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\\1" + "'", str67, "\\1");
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("__tsethi!");
        java.lang.String str10 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "___tsethi!" + "'", str9, "___tsethi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup11);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet5 = python2Target1.getBadWords();
        boolean boolean6 = python2Target1.wantsBaseListener();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\0" + "'", str9, "\\0");
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("hi!");
        boolean boolean9 = python2Target1.supportsOverloadedMethods();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_tset_tsetPython2Context");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsethi!" + "'", str8, "_tsethi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__tset_tsetPython2Context" + "'", str11, "__tset_tsetPython2Context");
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        boolean boolean4 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.encodeIntAsCharEscape((int) (byte) 1);
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str8 = python2Target1.getVersion();
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("_Python2Context");
        boolean boolean11 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\1" + "'", str6, "\\1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_Python2ContextContext" + "'", str10, "_Python2ContextContext");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.lang.String str6 = python2Target1.getVersion();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.lang.String str8 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        boolean boolean10 = python2Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\\\"@\\\"", false);
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\\\\\"@\\\\\\\"" + "'", str12, "\\\\\\\"@\\\\\\\"");
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("_tset\\\"@\\\"Context");
        java.lang.String str10 = python2Target1.getLanguage();
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "_tset_tset\"@\"Context", false);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "__tset\\\"@\\\"Context" + "'", str9, "__tset\\\"@\\\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tset_tset\\\"@\\\"Contex" + "'", str15, "tset_tset\\\"@\\\"Contex");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "d" + "'", str17, "d");
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getVersion();
        int int7 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getVersion();
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.getListLabel("Python2");
        java.lang.String str11 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        boolean boolean16 = python2Target15.supportsOverloadedMethods();
        boolean boolean17 = python2Target15.wantsBaseListener();
        boolean boolean18 = python2Target15.wantsBaseVisitor();
        java.lang.String str20 = python2Target15.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str22 = python2Target15.getListLabel("_tset_hi!");
        java.lang.String str24 = python2Target15.getListLabel("");
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        boolean boolean28 = python2Target27.supportsOverloadedMethods();
        boolean boolean29 = python2Target27.wantsBaseListener();
        boolean boolean30 = python2Target27.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python2Target27.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python2Target15.getTokenTypesAsTargetLabels(grammar25, intArray32);
        java.lang.String[] strArray35 = python2Target1.getTokenTypesAsTargetLabels(grammar13, intArray32);
        java.lang.String str36 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = python2Target1.getCodeGenerator();
        java.lang.String str38 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_4.5.2.1" + "'", str20, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tset_hi!" + "'", str22, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "4.5.2.1" + "'", str38, "4.5.2.1");
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        java.lang.String str5 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("\"_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getElementName("_tset\"\\\"__tset\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_4.5.2.1" + "'", str5, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"i\\\"\"" + "'", str8, "\"\\\"i\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\"_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\"" + "'", str12, "_\"_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\"");
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_tset_hi!");
        java.lang.String str11 = python2Target1.getVersion();
        boolean boolean12 = python2Target1.templatesExist();
        java.lang.String str13 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "_tsetPython2ContexContextContext", true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset_hi!\"" + "'", str10, "\"_tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"tsetPython2ContexContextContex\"" + "'", str17, "\"tsetPython2ContexContextContex\"");
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        boolean boolean10 = python2Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        boolean boolean14 = python2Target13.supportsOverloadedMethods();
        boolean boolean15 = python2Target13.wantsBaseListener();
        boolean boolean16 = python2Target13.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar17 = null;
        int[] intArray18 = new int[] {};
        java.lang.String[] strArray19 = python2Target13.getTokenTypesAsTargetLabels(grammar17, intArray18);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python2Target13.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "hi!", true);
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        boolean boolean27 = python2Target26.supportsOverloadedMethods();
        boolean boolean28 = python2Target26.wantsBaseListener();
        boolean boolean29 = python2Target26.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python2Target26.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python2Target13.getTokenTypesAsTargetLabels(grammar24, intArray31);
        java.lang.String[] strArray34 = python2Target1.getTokenTypesAsTargetLabels(grammar11, intArray31);
        java.lang.String str36 = python2Target1.getListLabel("_tset#");
        java.lang.String str38 = python2Target1.getImplicitRuleLabel("Tset\\\"_tsetContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"i\"" + "'", str23, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_tset#" + "'", str36, "_tset#");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "_Tset\\\"_tsetContextContext" + "'", str38, "_Tset\\\"_tsetContextContext");
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        int int12 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python2Target15.getCodeGenerator();
        int int17 = python2Target15.getSerializedATNSegmentLimit();
        java.lang.String str18 = python2Target15.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup19 = python2Target15.getTemplates();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String str25 = python2Target22.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target22.getTemplates();
        java.lang.String str28 = python2Target22.getImplicitSetLabel("hi!");
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        boolean boolean32 = python2Target31.supportsOverloadedMethods();
        boolean boolean33 = python2Target31.wantsBaseListener();
        boolean boolean34 = python2Target31.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup35 = python2Target31.getTemplates();
        org.antlr.v4.tool.Grammar grammar36 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator37 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target38 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator37);
        boolean boolean39 = python2Target38.supportsOverloadedMethods();
        boolean boolean40 = python2Target38.wantsBaseListener();
        boolean boolean41 = python2Target38.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar42 = null;
        int[] intArray43 = new int[] {};
        java.lang.String[] strArray44 = python2Target38.getTokenTypesAsTargetLabels(grammar42, intArray43);
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        java.lang.String str48 = python2Target38.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator45, "hi!", true);
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target51 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator50);
        boolean boolean52 = python2Target51.supportsOverloadedMethods();
        boolean boolean53 = python2Target51.wantsBaseListener();
        boolean boolean54 = python2Target51.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar55 = null;
        int[] intArray56 = new int[] {};
        java.lang.String[] strArray57 = python2Target51.getTokenTypesAsTargetLabels(grammar55, intArray56);
        java.lang.String[] strArray58 = python2Target38.getTokenTypesAsTargetLabels(grammar49, intArray56);
        java.lang.String[] strArray59 = python2Target31.getTokenTypesAsTargetLabels(grammar36, intArray56);
        java.lang.String[] strArray60 = python2Target22.getTokenTypesAsTargetLabels(grammar29, intArray56);
        java.lang.String[] strArray61 = python2Target15.getTokenTypesAsTargetLabels(grammar20, intArray56);
        java.lang.String[] strArray62 = python2Target1.getTokenTypesAsTargetLabels(grammar13, intArray56);
        boolean boolean63 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertNotNull(sTGroup19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "_tsethi!" + "'", str28, "_tsethi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"i\"" + "'", str48, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.lang.String str12 = python2Target9.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target9.getTemplates();
        int int14 = python2Target9.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String str19 = python2Target17.getAltLabelContextStructName("\\0");
        boolean boolean20 = python2Target17.wantsBaseListener();
        java.lang.String str22 = python2Target17.getImplicitRuleLabel("___tset");
        java.lang.String str24 = python2Target17.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet25 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        boolean boolean29 = python2Target28.supportsOverloadedMethods();
        boolean boolean30 = python2Target28.wantsBaseListener();
        boolean boolean31 = python2Target28.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target28.getTemplates();
        boolean boolean33 = python2Target28.templatesExist();
        java.lang.String str35 = python2Target28.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python2Target28.getCodeGenerator();
        boolean boolean37 = python2Target28.templatesExist();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        boolean boolean41 = python2Target40.supportsOverloadedMethods();
        boolean boolean42 = python2Target40.wantsBaseListener();
        boolean boolean43 = python2Target40.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python2Target40.getTokenTypesAsTargetLabels(grammar44, intArray45);
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python2Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "hi!", true);
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        boolean boolean54 = python2Target53.supportsOverloadedMethods();
        boolean boolean55 = python2Target53.wantsBaseListener();
        boolean boolean56 = python2Target53.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python2Target53.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python2Target40.getTokenTypesAsTargetLabels(grammar51, intArray58);
        java.lang.String[] strArray61 = python2Target28.getTokenTypesAsTargetLabels(grammar38, intArray58);
        java.lang.String[] strArray62 = python2Target17.getTokenTypesAsTargetLabels(grammar26, intArray58);
        java.lang.String[] strArray63 = python2Target9.getTokenTypesAsTargetLabels(grammar15, intArray58);
        java.lang.String[] strArray64 = python2Target1.getTokenTypesAsTargetLabels(grammar7, intArray58);
        boolean boolean65 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet66 = python2Target1.getBadWords();
        java.lang.String str67 = python2Target1.getLanguage();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\0Context" + "'", str19, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "____tset" + "'", str22, "____tset");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"@\"" + "'", str24, "\"@\"");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"_tsetContext\"" + "'", str35, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"i\"" + "'", str50, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Python2" + "'", str67, "Python2");
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python2Target1.getCodeGenerator();
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"hi!\"" + "'", str8, "\"hi!\"");
        org.junit.Assert.assertNull(codeGenerator9);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("", true);
        java.lang.String str12 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_" + "'", str8, "_");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\"" + "'", str11, "\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        int int4 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("#");
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset#" + "'", str6, "_tset#");
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("@");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("_tset_tset\\0Context");
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        boolean boolean16 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "_tset\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        boolean boolean25 = python2Target24.supportsOverloadedMethods();
        boolean boolean26 = python2Target24.wantsBaseListener();
        boolean boolean27 = python2Target24.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target24.getTemplates();
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        boolean boolean32 = python2Target31.supportsOverloadedMethods();
        boolean boolean33 = python2Target31.wantsBaseListener();
        boolean boolean34 = python2Target31.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar35 = null;
        int[] intArray36 = new int[] {};
        java.lang.String[] strArray37 = python2Target31.getTokenTypesAsTargetLabels(grammar35, intArray36);
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        java.lang.String str41 = python2Target31.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator38, "hi!", true);
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target44 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator43);
        boolean boolean45 = python2Target44.supportsOverloadedMethods();
        boolean boolean46 = python2Target44.wantsBaseListener();
        boolean boolean47 = python2Target44.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar48 = null;
        int[] intArray49 = new int[] {};
        java.lang.String[] strArray50 = python2Target44.getTokenTypesAsTargetLabels(grammar48, intArray49);
        java.lang.String[] strArray51 = python2Target31.getTokenTypesAsTargetLabels(grammar42, intArray49);
        java.lang.String[] strArray52 = python2Target24.getTokenTypesAsTargetLabels(grammar29, intArray49);
        java.lang.String[] strArray53 = python2Target1.getTokenTypesAsTargetLabels(grammar22, intArray49);
        java.lang.String str54 = python2Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = python2Target1.encodeIntAsCharEscape((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@Context" + "'", str11, "@Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__tset_tset\\0Context" + "'", str13, "__tset_tset\\0Context");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tset0" + "'", str20, "tset0");
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "\"i\"" + "'", str41, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Python2" + "'", str54, "Python2");
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.getListLabel("hi!");
        java.lang.String str10 = python2Target1.getListLabel("\"@\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getElementName("__\"_tsethi!\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"@\"" + "'", str10, "\"@\"");
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        int int3 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tsetPython2");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getListLabel("_tset\"tset0Contex\"");
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tsetPython2\"" + "'", str6, "\"_tsetPython2\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\"tset0Contex\"" + "'", str9, "_tset\"tset0Contex\"");
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        int int3 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tsetPython2");
        boolean boolean7 = python2Target1.templatesExist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getElementListName("_tset_hi!Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tsetPython2\"" + "'", str6, "\"_tsetPython2\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        java.lang.String str22 = python2Target1.getVersion();
        boolean boolean23 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet25 = python2Target1.getBadWords();
        java.lang.String str27 = python2Target1.getListLabel("\"\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\\\"\\\"\"" + "'", str27, "\"\\\"\\\"\"");
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        boolean boolean11 = python2Target1.templatesExist();
        boolean boolean12 = python2Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("@");
        int int11 = python2Target1.getInlineTestSetWordSize();
        boolean boolean12 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "@Context" + "'", str10, "@Context");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset_hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset_tset_hi!", true);
        boolean boolean17 = python2Target1.wantsBaseListener();
        java.lang.String str19 = python2Target1.getImplicitRuleLabel("\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_hi!\"Context" + "'", str12, "\"_tset_hi!\"Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"tset_tset_hi\"" + "'", str16, "\"tset_tset_hi\"");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"Context" + "'", str19, "_\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"Context");
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"\\\"_tset_tset_hi!\\\"\"", true);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getImplicitTokenLabel("__4.5.2.1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_tset_tset_hi!\\\"\"" + "'", str13, "\"\\\"_tset_tset_hi!\\\"\"");
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        java.lang.String str5 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tsetPython2");
        java.lang.String str13 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getTokenTypeAsTargetLabel(grammar14, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_4.5.2.1" + "'", str5, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"i\\\"\"" + "'", str8, "\"\\\"i\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tsetPython2" + "'", str11, "_tset_tsetPython2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "d" + "'", str13, "d");
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.getListLabel("hi!");
        java.lang.String str10 = python2Target1.getListLabel("\"@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        boolean boolean12 = python2Target1.templatesExist();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"@\"" + "'", str10, "\"@\"");
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        boolean boolean11 = python2Target1.templatesExist();
        int int12 = python2Target1.getInlineTestSetWordSize();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        java.lang.String str14 = python2Target1.getVersion();
        java.lang.String str16 = python2Target1.getListLabel("\\\"_tset_tset4.5.2.1ContextContexContext\\\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\\"_tset_tset4.5.2.1ContextContexContext\\\"" + "'", str16, "\\\"_tset_tset4.5.2.1ContextContexContext\\\"");
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        int int5 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.Class<?> wildcardClass6 = python2Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2147483647 + "'", int5 == 2147483647);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "_tset\"\\\"ython\\\"\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "_\"hi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "_\"__tset\"", true);
        java.lang.String str21 = python2Target1.encodeIntAsCharEscape(0);
        java.lang.String str23 = python2Target1.getAltLabelContextStructName("___tseContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "__hi", false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"tset\\\"\\\"ython\\\"\"" + "'", str11, "\"tset\\\"\\\"ython\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"hi!\"" + "'", str15, "\"\\\"hi!\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"__tset\"" + "'", str19, "\"\\\"__tset\"");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\\0" + "'", str21, "\\0");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "___tseContextContext" + "'", str23, "___tseContextContext");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "_h" + "'", str27, "_h");
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        int int12 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet5 = python2Target1.getBadWords();
        boolean boolean6 = python2Target1.wantsBaseListener();
        java.lang.String str8 = python2Target1.getListLabel("__tset_hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset\"_tsetPython2\"Context", true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__tset_hi!" + "'", str8, "__tset_hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset\\\"_tsetPython2\\\"Contex\"" + "'", str12, "\"tset\\\"_tsetPython2\\\"Contex\"");
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\"\\\"i\\\"\"", false);
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("__4.5.2.1ContextContext");
        java.lang.String str16 = python2Target1.getListLabel("__tset_tset0Contex");
        java.lang.String str17 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"\\\\\\\"i\\\\\\\"\\\"" + "'", str12, "\\\"\\\\\\\"i\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__4.5.2.1ContextContextContext" + "'", str14, "__4.5.2.1ContextContextContext");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "__tset_tset0Contex" + "'", str16, "__tset_tset0Contex");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("");
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.Class<?> wildcardClass11 = python2Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str6 = python2Target1.getListLabel("Python2");
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "@Context", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getTokenTypeAsTargetLabel(grammar12, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Contex\"" + "'", str11, "\"Contex\"");
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("d", false);
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.lang.String str15 = python2Target12.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target12.getTemplates();
        int int17 = python2Target12.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        java.lang.String str22 = python2Target20.getAltLabelContextStructName("\\0");
        boolean boolean23 = python2Target20.wantsBaseListener();
        java.lang.String str25 = python2Target20.getImplicitRuleLabel("___tset");
        java.lang.String str27 = python2Target20.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet28 = python2Target20.getBadWords();
        org.antlr.v4.tool.Grammar grammar29 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target31 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator30);
        boolean boolean32 = python2Target31.supportsOverloadedMethods();
        boolean boolean33 = python2Target31.wantsBaseListener();
        boolean boolean34 = python2Target31.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup35 = python2Target31.getTemplates();
        boolean boolean36 = python2Target31.templatesExist();
        java.lang.String str38 = python2Target31.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = python2Target31.getCodeGenerator();
        boolean boolean40 = python2Target31.templatesExist();
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        boolean boolean44 = python2Target43.supportsOverloadedMethods();
        boolean boolean45 = python2Target43.wantsBaseListener();
        boolean boolean46 = python2Target43.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar47 = null;
        int[] intArray48 = new int[] {};
        java.lang.String[] strArray49 = python2Target43.getTokenTypesAsTargetLabels(grammar47, intArray48);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python2Target43.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "hi!", true);
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        boolean boolean57 = python2Target56.supportsOverloadedMethods();
        boolean boolean58 = python2Target56.wantsBaseListener();
        boolean boolean59 = python2Target56.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python2Target56.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python2Target43.getTokenTypesAsTargetLabels(grammar54, intArray61);
        java.lang.String[] strArray64 = python2Target31.getTokenTypesAsTargetLabels(grammar41, intArray61);
        java.lang.String[] strArray65 = python2Target20.getTokenTypesAsTargetLabels(grammar29, intArray61);
        java.lang.String[] strArray66 = python2Target12.getTokenTypesAsTargetLabels(grammar18, intArray61);
        java.lang.String[] strArray67 = python2Target1.getTokenTypesAsTargetLabels(grammar10, intArray61);
        org.antlr.v4.codegen.CodeGenerator codeGenerator68 = python2Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = python2Target1.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "d" + "'", str6, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_4.5.2.1Context" + "'", str8, "_4.5.2.1Context");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\0Context" + "'", str22, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "____tset" + "'", str25, "____tset");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"@\"" + "'", str27, "\"@\"");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(sTGroup35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"_tsetContext\"" + "'", str38, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"i\"" + "'", str53, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNull(codeGenerator68);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python2Target1.getVersion();
        java.lang.String str9 = python2Target1.getListLabel("\"Python2\"Context");
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Python2\"Context" + "'", str9, "\"Python2\"Context");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("_d");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("tset0Contex", true);
        java.lang.String str13 = python2Target1.getAltLabelContextStructName("_tsetContextContextContext");
        java.lang.String str15 = python2Target1.getListLabel("\"\\\\\\\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__d" + "'", str8, "__d");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"tset0Contex\"" + "'", str11, "\"tset0Contex\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetContextContextContextContext" + "'", str13, "_tsetContextContextContextContext");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str15, "\"\\\\\\\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.String str8 = python2Target1.getImplicitSetLabel("\"4.5.2.1\"");
        boolean boolean9 = python2Target1.templatesExist();
        int int10 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"@\\\"" + "'", str6, "\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"4.5.2.1\"" + "'", str8, "_tset\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str5 = python2Target1.getAltLabelContextStructName("\"i\"");
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\"____tset\"", true);
        boolean boolean10 = python2Target1.templatesExist();
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"i\"Context" + "'", str5, "\"i\"Context");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"____tset\\\"\"" + "'", str9, "\"\\\"____tset\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tset\\0Context");
        java.lang.String str10 = python2Target1.getListLabel("\"_tsethi!\"");
        java.lang.String str11 = python2Target1.getLanguage();
        java.lang.String str13 = python2Target1.getImplicitSetLabel("\"__tset_hi!\"");
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape((int) (byte) 0);
        int int16 = python2Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getElementName("\"Python2\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\\\\0Context\"" + "'", str8, "\"_tset\\\\0Context\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsethi!\"" + "'", str10, "\"_tsethi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"__tset_hi!\"" + "'", str13, "_tset\"__tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("__\"__tset\"");
        java.lang.String str12 = python2Target1.getVersion();
        java.lang.String str14 = python2Target1.encodeIntAsCharEscape((int) '#');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset__\"__tset\"" + "'", str11, "_tset__\"__tset\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#" + "'", str14, "#");
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getVersion();
        boolean boolean8 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__\"_tset_hi!\"", true);
        java.lang.String str15 = python2Target1.getImplicitSetLabel("_tset__\"__tset\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "__\"\\\"____tset\\\"\"Context", true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"_tset_hi!\"" + "'", str13, "\"_\\\"_tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_tset__\"__tset\"" + "'", str15, "_tset_tset__\"__tset\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"_\\\"\\\"____tset\\\"\\\"Contex\"" + "'", str19, "\"_\\\"\\\"____tset\\\"\\\"Contex\"");
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_hi!");
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        java.lang.String str13 = python2Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__hi!" + "'", str11, "__hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        boolean boolean12 = python2Target11.supportsOverloadedMethods();
        boolean boolean13 = python2Target11.wantsBaseListener();
        boolean boolean14 = python2Target11.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar15 = null;
        int[] intArray16 = new int[] {};
        java.lang.String[] strArray17 = python2Target11.getTokenTypesAsTargetLabels(grammar15, intArray16);
        java.lang.String[] strArray18 = python2Target1.getTokenTypesAsTargetLabels(grammar9, intArray16);
        java.lang.String str20 = python2Target1.getListLabel("#");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python2Target1.getRuleFunctionContextStructName(ruleFunction21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[]");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#" + "'", str20, "#");
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        java.lang.String str11 = python2Target1.getListLabel("\\1");
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getTokenTypeAsTargetLabel(grammar13, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\1" + "'", str11, "\\1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getListLabel("\"_tsethi!\"Context");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getImplicitTokenLabel("_");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsethi!\"Context" + "'", str8, "\"_tsethi!\"Context");
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        java.lang.String str9 = python2Target1.getImplicitSetLabel("_tset\"_tsetContext\"");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_tset\"hi!\"");
        org.antlr.v4.tool.Rule rule12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getRuleFunctionContextStructName(rule12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_tset\"_tsetContext\"" + "'", str9, "_tset_tset\"_tsetContext\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset\\\"hi!\\\"\"" + "'", str11, "\"_tset\\\"hi!\\\"\"");
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python2Target1.getCodeGenerator();
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getElementName("_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\\\"Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\"_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\"Context", true);
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset\"tset6\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"" + "'", str9, "\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset\"tset6\"" + "'", str11, "_tset_tset\"tset6\"");
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"");
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = python2Target15.getCodeGenerator();
        java.lang.String str19 = python2Target15.getTargetStringLiteralFromString("Python2", true);
        int int20 = python2Target15.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet21 = python2Target15.getBadWords();
        boolean boolean22 = python2Target15.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        boolean boolean26 = python2Target25.supportsOverloadedMethods();
        boolean boolean27 = python2Target25.wantsBaseListener();
        boolean boolean28 = python2Target25.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar29 = null;
        int[] intArray30 = new int[] {};
        java.lang.String[] strArray31 = python2Target25.getTokenTypesAsTargetLabels(grammar29, intArray30);
        java.lang.String[] strArray32 = python2Target15.getTokenTypesAsTargetLabels(grammar23, intArray30);
        java.lang.String[] strArray33 = python2Target1.getTokenTypesAsTargetLabels(grammar13, intArray30);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str12, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertNull(codeGenerator16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"Python2\"" + "'", str19, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 64 + "'", int20 == 64);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_hi!");
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("_4.5.2.1", false);
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        java.lang.String str18 = python2Target1.getImplicitRuleLabel("tset_\\\"\\\".5.2.\\\"\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__hi!" + "'", str11, "__hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_4.5.2.1" + "'", str14, "_4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_tset_\\\"\\\".5.2.\\\"\\\"Contex" + "'", str18, "_tset_\\\"\\\".5.2.\\\"\\\"Contex");
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("\"\\\"__tset_tset\\\\\\\\0Context\\\"\"");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("Python2Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"__tset_tset\\\\\\\\0Context\\\"\"Context" + "'", str9, "\"\\\"__tset_tset\\\\\\\\0Context\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"Python2Context\"" + "'", str11, "\"Python2Context\"");
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        java.lang.String str7 = python2Target1.getAltLabelContextStructName("\"hi!\"");
        boolean boolean8 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getLoopCounter(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"hi!\"Context" + "'", str7, "\"hi!\"Context");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python2Target1.getLanguage();
        java.lang.String str13 = python2Target1.getListLabel("__\"_tsethi!\"");
        int int14 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__\"_tsethi!\"" + "'", str13, "__\"_tsethi!\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("Python2");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("_tset_tset4.5.2.1ContextContex");
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getTokenTypeAsTargetLabel(grammar11, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"Python2\"" + "'", str6, "\"Python2\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_tset4.5.2.1ContextContexContext" + "'", str9, "_tset_tset4.5.2.1ContextContexContext");
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = python2Target1.getElementListName("_\"_tset_hi!\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        int int4 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("#");
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape(1);
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset#" + "'", str6, "_tset#");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\\1" + "'", str9, "\\1");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_hi!");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("d");
        boolean boolean15 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromString("\"__tset_tset\\\\0Context\"", true);
        boolean boolean20 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet21 = python2Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_hi!" + "'", str12, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_d" + "'", str14, "_d");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"__tset_tset\\\\\\\\0Context\\\"\"" + "'", str19, "\"\\\"__tset_tset\\\\\\\\0Context\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = python2Target1.getImplicitTokenLabel("\"_tset\\\"__tset_hi!\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        java.lang.String str18 = python2Target14.getTargetStringLiteralFromString("hi!");
        java.lang.String str19 = python2Target14.getLanguage();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        boolean boolean23 = python2Target22.supportsOverloadedMethods();
        boolean boolean24 = python2Target22.wantsBaseListener();
        boolean boolean25 = python2Target22.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python2Target22.getTokenTypesAsTargetLabels(grammar26, intArray27);
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        java.lang.String str32 = python2Target22.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator29, "hi!", true);
        org.antlr.v4.tool.Grammar grammar33 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator34 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target35 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator34);
        boolean boolean36 = python2Target35.supportsOverloadedMethods();
        boolean boolean37 = python2Target35.wantsBaseListener();
        boolean boolean38 = python2Target35.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar39 = null;
        int[] intArray40 = new int[] {};
        java.lang.String[] strArray41 = python2Target35.getTokenTypesAsTargetLabels(grammar39, intArray40);
        java.lang.String[] strArray42 = python2Target22.getTokenTypesAsTargetLabels(grammar33, intArray40);
        java.lang.String[] strArray43 = python2Target14.getTokenTypesAsTargetLabels(grammar20, intArray40);
        java.lang.String[] strArray44 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = python2Target1.getElementName("_tset__\"__tset\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_" + "'", str11, "_");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"hi!\"" + "'", str18, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\"i\"" + "'", str32, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray44);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        int int5 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        boolean boolean9 = python2Target8.supportsOverloadedMethods();
        boolean boolean10 = python2Target8.wantsBaseListener();
        boolean boolean11 = python2Target8.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python2Target8.getTokenTypesAsTargetLabels(grammar12, intArray13);
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python2Target8.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "hi!", true);
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        boolean boolean22 = python2Target21.supportsOverloadedMethods();
        boolean boolean23 = python2Target21.wantsBaseListener();
        boolean boolean24 = python2Target21.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar25 = null;
        int[] intArray26 = new int[] {};
        java.lang.String[] strArray27 = python2Target21.getTokenTypesAsTargetLabels(grammar25, intArray26);
        java.lang.String[] strArray28 = python2Target8.getTokenTypesAsTargetLabels(grammar19, intArray26);
        java.lang.String[] strArray29 = python2Target1.getTokenTypesAsTargetLabels(grammar6, intArray26);
        java.lang.String str31 = python2Target1.getTargetStringLiteralFromString(" ");
        java.lang.String str33 = python2Target1.getImplicitSetLabel("_tset4.5.2.1ContextContex");
        boolean boolean34 = python2Target1.templatesExist();
        java.lang.String str36 = python2Target1.encodeIntAsCharEscape(10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"i\"" + "'", str18, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\" \"" + "'", str31, "\" \"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset_tset4.5.2.1ContextContex" + "'", str33, "_tset_tset4.5.2.1ContextContex");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\\n" + "'", str36, "\\n");
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getVersion();
        int int8 = python2Target1.getInlineTestSetWordSize();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("_tset\"_tsetContext\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset\"_tsetContext\"" + "'", str11, "_tset_tset\"_tsetContext\"");
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("\"\\\".5.2.\\\"\"");
        int int10 = python2Target1.getInlineTestSetWordSize();
        int int11 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("i");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getElementListName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"\\\".5.2.\\\"\"" + "'", str9, "_\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"i\"" + "'", str13, "\"i\"");
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        java.lang.String str7 = python2Target1.getAltLabelContextStructName("\\0Context");
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("\"_tset\\\"\\\\\\\" \\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\0ContextContext" + "'", str7, "\\0ContextContext");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\"_tset\\\"\\\\\\\" \\\\\\\"\\\"\"" + "'", str10, "_\"_tset\\\"\\\\\\\" \\\\\\\"\\\"\"");
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        int int11 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python2Target1.getImplicitSetLabel("4.5.2.1");
        java.lang.String str14 = python2Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset4.5.2.1" + "'", str13, "_tset4.5.2.1");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Python2" + "'", str14, "Python2");
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str6 = python2Target1.getLanguage();
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"hi!\"" + "'", str5, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getTargetStringLiteralFromString("\"_tset_hi!\"");
        java.lang.String str4 = python2Target1.getVersion();
        java.lang.String str6 = python2Target1.encodeIntAsCharEscape(100);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\\\"_tset_hi!\\\"\"" + "'", str3, "\"\\\"_tset_hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "d" + "'", str6, "d");
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.templatesExist();
        boolean boolean8 = python2Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"\\\"_tset_tset_hi!\\\"\"", true);
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"_tset_tset_hi!\\\"\"" + "'", str13, "\"\\\"_tset_tset_hi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        java.lang.String str9 = python2Target1.getVersion();
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape(100);
        java.lang.String str13 = python2Target1.getListLabel("\"tset_tset\\\"tset0Contex\"Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "d" + "'", str11, "d");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"tset_tset\\\"tset0Contex\"Context" + "'", str13, "\"tset_tset\\\"tset0Contex\"Context");
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.getListLabel("\"\\\"ython\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"ython\\\"\"" + "'", str10, "\"\\\"ython\\\"\"");
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getVersion();
        int int10 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String str16 = python2Target13.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target13.getTemplates();
        int int18 = python2Target13.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.lang.String str23 = python2Target21.getAltLabelContextStructName("\\0");
        boolean boolean24 = python2Target21.wantsBaseListener();
        java.lang.String str26 = python2Target21.getImplicitRuleLabel("___tset");
        java.lang.String str28 = python2Target21.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet29 = python2Target21.getBadWords();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        boolean boolean33 = python2Target32.supportsOverloadedMethods();
        boolean boolean34 = python2Target32.wantsBaseListener();
        boolean boolean35 = python2Target32.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target32.getTemplates();
        boolean boolean37 = python2Target32.templatesExist();
        java.lang.String str39 = python2Target32.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = python2Target32.getCodeGenerator();
        boolean boolean41 = python2Target32.templatesExist();
        org.antlr.v4.tool.Grammar grammar42 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target44 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator43);
        boolean boolean45 = python2Target44.supportsOverloadedMethods();
        boolean boolean46 = python2Target44.wantsBaseListener();
        boolean boolean47 = python2Target44.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar48 = null;
        int[] intArray49 = new int[] {};
        java.lang.String[] strArray50 = python2Target44.getTokenTypesAsTargetLabels(grammar48, intArray49);
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        java.lang.String str54 = python2Target44.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator51, "hi!", true);
        org.antlr.v4.tool.Grammar grammar55 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator56 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target57 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator56);
        boolean boolean58 = python2Target57.supportsOverloadedMethods();
        boolean boolean59 = python2Target57.wantsBaseListener();
        boolean boolean60 = python2Target57.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar61 = null;
        int[] intArray62 = new int[] {};
        java.lang.String[] strArray63 = python2Target57.getTokenTypesAsTargetLabels(grammar61, intArray62);
        java.lang.String[] strArray64 = python2Target44.getTokenTypesAsTargetLabels(grammar55, intArray62);
        java.lang.String[] strArray65 = python2Target32.getTokenTypesAsTargetLabels(grammar42, intArray62);
        java.lang.String[] strArray66 = python2Target21.getTokenTypesAsTargetLabels(grammar30, intArray62);
        java.lang.String[] strArray67 = python2Target13.getTokenTypesAsTargetLabels(grammar19, intArray62);
        java.lang.String[] strArray68 = python2Target1.getTokenTypesAsTargetLabels(grammar11, intArray62);
        java.util.Set<java.lang.String> strSet69 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str71 = python2Target1.getElementName("_tset\"4.5.2.1\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\0Context" + "'", str23, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "____tset" + "'", str26, "____tset");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "\"@\"" + "'", str28, "\"@\"");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "\"_tsetContext\"" + "'", str39, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"i\"" + "'", str54, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strSet69);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("____tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_tset__tset_hi!", false);
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        boolean boolean14 = python2Target13.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target13.getCodeGenerator();
        int int16 = python2Target13.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target13.getTemplates();
        boolean boolean18 = python2Target13.templatesExist();
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        java.lang.String str23 = python2Target21.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = python2Target21.getCodeGenerator();
        java.lang.String str26 = python2Target21.getImplicitRuleLabel("");
        boolean boolean27 = python2Target21.supportsOverloadedMethods();
        boolean boolean28 = python2Target21.wantsBaseListener();
        int int29 = python2Target21.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python2Target32.getCodeGenerator();
        java.lang.String str36 = python2Target32.getTargetStringLiteralFromString("Python2", true);
        int int37 = python2Target32.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet38 = python2Target32.getBadWords();
        boolean boolean39 = python2Target32.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar40 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target42 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator41);
        boolean boolean43 = python2Target42.supportsOverloadedMethods();
        boolean boolean44 = python2Target42.wantsBaseListener();
        boolean boolean45 = python2Target42.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar46 = null;
        int[] intArray47 = new int[] {};
        java.lang.String[] strArray48 = python2Target42.getTokenTypesAsTargetLabels(grammar46, intArray47);
        java.lang.String[] strArray49 = python2Target32.getTokenTypesAsTargetLabels(grammar40, intArray47);
        java.lang.String[] strArray50 = python2Target21.getTokenTypesAsTargetLabels(grammar30, intArray47);
        java.lang.String[] strArray51 = python2Target13.getTokenTypesAsTargetLabels(grammar19, intArray47);
        java.lang.String[] strArray52 = python2Target1.getTokenTypesAsTargetLabels(grammar11, intArray47);
        org.antlr.v4.tool.ast.GrammarAST grammarAST53 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean54 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_____tset" + "'", str7, "_____tset");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset__tset_hi!" + "'", str10, "_tset__tset_hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tsethi!" + "'", str23, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_" + "'", str26, "_");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2147483647 + "'", int29 == 2147483647);
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"Python2\"" + "'", str36, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 64 + "'", int37 == 64);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        int int9 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tset\\0Context");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("a", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target14.getTemplates();
        boolean boolean19 = python2Target14.templatesExist();
        java.lang.String str21 = python2Target14.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = python2Target14.getCodeGenerator();
        boolean boolean23 = python2Target14.templatesExist();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        boolean boolean27 = python2Target26.supportsOverloadedMethods();
        boolean boolean28 = python2Target26.wantsBaseListener();
        boolean boolean29 = python2Target26.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python2Target26.getTokenTypesAsTargetLabels(grammar30, intArray31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python2Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "hi!", true);
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        boolean boolean40 = python2Target39.supportsOverloadedMethods();
        boolean boolean41 = python2Target39.wantsBaseListener();
        boolean boolean42 = python2Target39.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python2Target39.getTokenTypesAsTargetLabels(grammar43, intArray44);
        java.lang.String[] strArray46 = python2Target26.getTokenTypesAsTargetLabels(grammar37, intArray44);
        java.lang.String[] strArray47 = python2Target14.getTokenTypesAsTargetLabels(grammar24, intArray44);
        java.lang.String[] strArray48 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray44);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\\\\0Context\"" + "'", str8, "\"_tset\\\\0Context\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"a\"" + "'", str11, "\"a\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\"_tsetContext\"" + "'", str21, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"i\"" + "'", str36, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_hi!");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("d");
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("_\"\\\".5.2.\\\"\"", false);
        java.util.Set<java.lang.String> strSet18 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_hi!" + "'", str12, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_d" + "'", str14, "_d");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\\\"\\\\\\\".5.2.\\\\\\\"\\\"" + "'", str17, "_\\\"\\\\\\\".5.2.\\\\\\\"\\\"");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(codeGenerator19);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tsethi!");
        java.lang.String str7 = python2Target1.getAltLabelContextStructName("__tset_hi!");
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getElementListName("_tset\"_tsetPython2\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"_tsethi!\"" + "'", str5, "\"_tsethi!\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "__tset_hi!Context" + "'", str7, "__tset_hi!Context");
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_tset\\0Context");
        boolean boolean13 = python2Target1.wantsBaseListener();
        java.lang.String str15 = python2Target1.getImplicitSetLabel("_tset_hi!");
        java.lang.String str16 = python2Target1.getVersion();
        java.lang.Class<?> wildcardClass17 = python2Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset\\0Context" + "'", str12, "_tset_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_tset_hi!" + "'", str15, "_tset_tset_hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.templatesExist();
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        java.lang.String str5 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        boolean boolean11 = python2Target1.templatesExist();
        boolean boolean12 = python2Target1.templatesExist();
        boolean boolean13 = python2Target1.templatesExist();
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_4.5.2.1" + "'", str5, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"i\\\"\"" + "'", str8, "\"\\\"i\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        boolean boolean8 = python2Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getImplicitTokenLabel("\\\\\\\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"ContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("d", false);
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        int int10 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getTokenTypeAsTargetLabel(grammar11, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "d" + "'", str6, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_4.5.2.1Context" + "'", str8, "_4.5.2.1Context");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        int int7 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\"tset_tset0Contex\"", false);
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        boolean boolean13 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"tset_tset0Contex\\\"" + "'", str10, "\\\"tset_tset0Contex\\\"");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("@");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("_tset_tset\\0Context");
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@Context" + "'", str11, "@Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__tset_tset\\0Context" + "'", str13, "__tset_tset\\0Context");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getVersion();
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.getListLabel("Python2");
        java.lang.String str11 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset\"\\\"__tset\\\"\"", false);
        java.lang.Class<?> wildcardClass17 = python2Target1.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tset\\\"\\\"__tset\\\"" + "'", str16, "tset\\\"\\\"__tset\\\"");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("_\"_tsethi!\"");
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__\"_tsethi!\"" + "'", str8, "__\"_tsethi!\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getVersion();
        boolean boolean8 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__\"_tset_hi!\"", true);
        java.lang.String str15 = python2Target1.getImplicitSetLabel("_tset__\"__tset\"");
        java.lang.String str16 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"_tset_hi!\"" + "'", str13, "\"_\\\"_tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_tset__\"__tset\"" + "'", str15, "_tset_tset__\"__tset\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("#");
        java.lang.String str12 = python2Target1.getLanguage();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("_tset\"@\"Context", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getElementListName("_\"_tset\\\"_tset_hi!\\\"Context\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_#" + "'", str11, "_#");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\\\"@\\\"Context" + "'", str15, "_tset\\\"@\\\"Context");
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("\"_tset\\\"@\\\"Context\"");
        org.antlr.v4.tool.Grammar grammar12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getTokenTypeAsTargetLabel(grammar12, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"_tset\\\"@\\\"Context\"" + "'", str11, "_tset\"_tset\\\"@\\\"Context\"");
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "4.5.2.1", true);
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\\0Context");
        boolean boolean13 = python2Target1.templatesExist();
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape((int) 'a');
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("", true);
        java.lang.String str19 = python2Target1.getVersion();
        org.antlr.v4.tool.ast.GrammarAST grammarAST20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = python2Target1.getLoopCounter(grammarAST20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\".5.2.\"" + "'", str10, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\0Context" + "'", str12, "_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "a" + "'", str15, "a");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"\"" + "'", str18, "\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "4.5.2.1" + "'", str19, "4.5.2.1");
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        int int5 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        boolean boolean9 = python2Target8.supportsOverloadedMethods();
        boolean boolean10 = python2Target8.wantsBaseListener();
        boolean boolean11 = python2Target8.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar12 = null;
        int[] intArray13 = new int[] {};
        java.lang.String[] strArray14 = python2Target8.getTokenTypesAsTargetLabels(grammar12, intArray13);
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        java.lang.String str18 = python2Target8.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator15, "hi!", true);
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        boolean boolean22 = python2Target21.supportsOverloadedMethods();
        boolean boolean23 = python2Target21.wantsBaseListener();
        boolean boolean24 = python2Target21.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar25 = null;
        int[] intArray26 = new int[] {};
        java.lang.String[] strArray27 = python2Target21.getTokenTypesAsTargetLabels(grammar25, intArray26);
        java.lang.String[] strArray28 = python2Target8.getTokenTypesAsTargetLabels(grammar19, intArray26);
        java.lang.String[] strArray29 = python2Target1.getTokenTypesAsTargetLabels(grammar6, intArray26);
        java.lang.String str31 = python2Target1.getTargetStringLiteralFromString(" ");
        java.lang.String str33 = python2Target1.getImplicitSetLabel("_tset4.5.2.1ContextContex");
        boolean boolean34 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"i\"" + "'", str18, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\" \"" + "'", str31, "\" \"");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "_tset_tset4.5.2.1ContextContex" + "'", str33, "_tset_tset4.5.2.1ContextContex");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(codeGenerator35);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset_hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset_tset_hi!", true);
        int int17 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Rule rule18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python2Target1.getRuleFunctionContextStructName(rule18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_hi!\"Context" + "'", str12, "\"_tset_hi!\"Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"tset_tset_hi\"" + "'", str16, "\"tset_tset_hi\"");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        java.lang.String str5 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"i\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tset_tset\\0Context", true);
        java.lang.Class<?> wildcardClass13 = python2Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_4.5.2.1" + "'", str5, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"i\\\"\"" + "'", str8, "\"\\\"i\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"tset_tset0Contex\"" + "'", str12, "\"tset_tset0Contex\"");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "_d", false);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getImplicitTokenLabel("___d");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        java.lang.String str23 = python2Target1.getImplicitRuleLabel("_\"\\\".5.2.\\\"\"");
        int int24 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str26 = python2Target1.getImplicitSetLabel("_tset#Context");
        int int27 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "__\"\\\".5.2.\\\"\"" + "'", str23, "__\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset_tset#Context" + "'", str26, "_tset_tset#Context");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483647 + "'", int27 == 2147483647);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape(64);
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str14 = python2Target1.getListLabel("\\0");
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\0" + "'", str14, "\\0");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.templatesExist();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "__tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\\\\\"Contex", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\\\\\"Conte" + "'", str14, "_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\\\\\"Conte");
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar5 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target7 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator6);
        boolean boolean8 = python2Target7.supportsOverloadedMethods();
        boolean boolean9 = python2Target7.wantsBaseListener();
        boolean boolean10 = python2Target7.wantsBaseVisitor();
        boolean boolean11 = python2Target7.supportsOverloadedMethods();
        java.lang.String str13 = python2Target7.encodeIntAsCharEscape((int) (short) 100);
        int int14 = python2Target7.getInlineTestSetWordSize();
        java.lang.String str16 = python2Target7.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        boolean boolean20 = python2Target19.supportsOverloadedMethods();
        boolean boolean21 = python2Target19.wantsBaseListener();
        boolean boolean22 = python2Target19.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup23 = python2Target19.getTemplates();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        boolean boolean27 = python2Target26.supportsOverloadedMethods();
        boolean boolean28 = python2Target26.wantsBaseListener();
        boolean boolean29 = python2Target26.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python2Target26.getTokenTypesAsTargetLabels(grammar30, intArray31);
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        java.lang.String str36 = python2Target26.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator33, "hi!", true);
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        boolean boolean40 = python2Target39.supportsOverloadedMethods();
        boolean boolean41 = python2Target39.wantsBaseListener();
        boolean boolean42 = python2Target39.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python2Target39.getTokenTypesAsTargetLabels(grammar43, intArray44);
        java.lang.String[] strArray46 = python2Target26.getTokenTypesAsTargetLabels(grammar37, intArray44);
        java.lang.String[] strArray47 = python2Target19.getTokenTypesAsTargetLabels(grammar24, intArray44);
        java.lang.String[] strArray48 = python2Target7.getTokenTypesAsTargetLabels(grammar17, intArray44);
        java.lang.String[] strArray49 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray44);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "_\"_tset_hi!\"", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = python2Target1.getLoopCounter(grammarAST54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "d" + "'", str13, "d");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\n" + "'", str16, "\\n");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(sTGroup23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"i\"" + "'", str36, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\\\"_tset_hi!" + "'", str53, "\\\"_tset_hi!");
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        boolean boolean10 = python2Target1.wantsBaseListener();
        boolean boolean11 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(sTGroup12);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("__\"__tset\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getElementListName("\\1Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset__\"__tset\"" + "'", str11, "_tset__\"__tset\"");
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "\"4.5.2.1ContextContex\"", false);
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1ContextContex" + "'", str13, "4.5.2.1ContextContex");
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        boolean boolean8 = python2Target1.wantsBaseListener();
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("\"tset\\\"\\\"ython\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"\"" + "'", str11, "\"\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"\"");
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__tset_tset0Contex", true);
        java.lang.String str15 = python2Target1.getAltLabelContextStructName("_\"_tsethi!\"");
        int int16 = python2Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet17 = python2Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset_tset0Conte\"" + "'", str13, "\"_tset_tset0Conte\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_\"_tsethi!\"Context" + "'", str15, "_\"_tsethi!\"Context");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str5 = python2Target1.getImplicitRuleLabel("__tset");
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("Python2Context");
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getLoopLabel(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "___tset" + "'", str5, "___tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_Python2Context" + "'", str7, "_Python2Context");
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        java.lang.String str13 = python2Target1.getListLabel("\".5.2.\"");
        java.lang.String str15 = python2Target1.getImplicitSetLabel("____tset");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getRuleFunctionContextStructName(ruleFunction16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\".5.2.\"" + "'", str13, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset____tset" + "'", str15, "_tset____tset");
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("");
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("\"_tset_hi!Contex\"");
        java.lang.String str12 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_" + "'", str8, "_");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"_tset_hi!Contex\"" + "'", str11, "_\"_tset_hi!Contex\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str12 = python2Target1.getListLabel("_tset_tset_hi!");
        boolean boolean13 = python2Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset_hi!" + "'", str12, "_tset_tset_hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        java.lang.String str13 = python2Target1.getListLabel("\".5.2.\"");
        java.lang.String str15 = python2Target1.getImplicitSetLabel("____tset");
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("_tset\\\"\\\\\\\"i\\\\\\\"\\\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\".5.2.\"" + "'", str13, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset____tset" + "'", str15, "_tset____tset");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_tset\\\\\\\"\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str17, "\"_tset\\\\\\\"\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("");
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getTokenTypeAsTargetLabel(grammar12, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.templatesExist();
        java.lang.String str10 = python2Target1.getLanguage();
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        int int13 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getTokenTypeAsTargetLabel(grammar14, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        int int3 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python2Target1.getLanguage();
        java.lang.String str5 = python2Target1.getVersion();
        java.lang.String str6 = python2Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getLoopLabel(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        java.lang.String str22 = python2Target1.getVersion();
        boolean boolean23 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        java.lang.String str27 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator24, "#", true);
        java.lang.String str29 = python2Target1.getAltLabelContextStructName("\\\"\\\\\\\"i\\\\\\\"\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator30 = null;
        java.lang.String str33 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator30, "__tset_tset\\\\0Context", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"\"" + "'", str27, "\"\"");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\\\"\\\\\\\"i\\\\\\\"\\\"Context" + "'", str29, "\\\"\\\\\\\"i\\\\\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\"_tset_tset\\\\0Contex\"" + "'", str33, "\"_tset_tset\\\\0Contex\"");
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset_tsetPython2", true);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("_\\\"\\\\\\\".5.2.\\\\\\\"\\\"Context");
        java.lang.String str10 = python2Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getLoopCounter(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset_tsetPython2\"" + "'", str7, "\"__tset_tsetPython2\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_\\\"\\\\\\\".5.2.\\\\\\\"\\\"Context" + "'", str9, "_tset_\\\"\\\\\\\".5.2.\\\\\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        java.lang.String str3 = python2Target1.getVersion();
        java.lang.String str4 = python2Target1.getVersion();
        java.lang.String str5 = python2Target1.getLanguage();
        boolean boolean6 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("\"_\\\\\\\"\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\"\\\\\\\"\"");
        java.lang.String str17 = python2Target1.getVersion();
        java.lang.String str19 = python2Target1.getAltLabelContextStructName("_\"_tset\\\"_tset_hi!\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"" + "'", str16, "\"\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"_tset\\\"_tset_hi!\\\"Context\"Context" + "'", str19, "_\"_tset\\\"_tset_hi!\\\"Context\"Context");
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        java.lang.String str3 = python2Target1.getVersion();
        boolean boolean4 = python2Target1.supportsOverloadedMethods();
        java.lang.Class<?> wildcardClass5 = python2Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_tset\"@\"");
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        boolean boolean13 = python2Target1.supportsOverloadedMethods();
        int int14 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str16 = python2Target1.getImplicitRuleLabel("___tsetContext");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getRuleFunctionContextStructName(ruleFunction17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"@\"Context" + "'", str11, "_tset\"@\"Context");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "____tsetContext" + "'", str16, "____tsetContext");
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("\\\"@\\\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "_tset_tset_hi!", false);
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_tset\"_tsethi!\"", true);
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset\\\"@\\\"" + "'", str6, "_tset\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tset_tset_hi" + "'", str10, "tset_tset_hi");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset\\\"_tsethi!\\\"\"" + "'", str13, "\"_tset\\\"_tsethi!\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset_hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset_tset_hi!", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "_Python2Context", false);
        java.lang.String str22 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str24 = python2Target1.getListLabel("\"__\\\"__tset\\\"\"");
        org.antlr.v4.tool.ast.GrammarAST grammarAST25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python2Target1.getLoopCounter(grammarAST25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_hi!\"Context" + "'", str12, "\"_tset_hi!\"Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"tset_tset_hi\"" + "'", str16, "\"tset_tset_hi\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2Contex" + "'", str20, "Python2Contex");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tsetContext" + "'", str22, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"__\\\"__tset\\\"\"" + "'", str24, "\"__\\\"__tset\\\"\"");
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        boolean boolean8 = python2Target1.wantsBaseListener();
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator11, "\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"ContextContext", true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"ContextContex\"" + "'", str14, "\"\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"ContextContex\"");
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\"Python2\"");
        int int13 = python2Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getElementListName("\"tset6\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"Python2\\\"\"" + "'", str12, "\"\\\"Python2\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("");
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("_tset");
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset" + "'", str8, "_tset");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset" + "'", str10, "__tset");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getVersion();
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.getListLabel("Python2");
        java.lang.String str11 = python2Target1.getVersion();
        java.lang.String str13 = python2Target1.encodeIntAsCharEscape((int) '#');
        int int14 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str15 = python2Target1.getVersion();
        java.lang.String str17 = python2Target1.getListLabel("\"\"");
        java.lang.String str19 = python2Target1.getImplicitRuleLabel("\"_tset\\\"4.5.2.1ContextContex\\\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#" + "'", str13, "#");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\"" + "'", str17, "\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_\"_tset\\\"4.5.2.1ContextContex\\\"\"" + "'", str19, "_\"_tset\\\"4.5.2.1ContextContex\\\"\"");
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("_tset\"@\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_tset\"@\"ContextContext" + "'", str9, "_tset_tset\"@\"ContextContext");
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\"\\\"i\\\"\"", false);
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("__4.5.2.1ContextContext");
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"\\\\\\\"i\\\\\\\"\\\"" + "'", str12, "\\\"\\\\\\\"i\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__4.5.2.1ContextContextContext" + "'", str14, "__4.5.2.1ContextContextContext");
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str8 = python2Target1.getListLabel("_tset_hi!");
        java.lang.String str10 = python2Target1.getListLabel("");
        int int11 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_hi!" + "'", str8, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("__tset_hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tsetPython2", false);
        java.lang.String str13 = python2Target1.getLanguage();
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"__tset_hi!\"" + "'", str8, "\"__tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tsetPython" + "'", str12, "tsetPython");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\1" + "'", str15, "\\1");
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) '#');
        int int11 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("_#", false);
        org.antlr.v4.tool.Grammar grammar15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getTokenTypeAsTargetLabel(grammar15, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#" + "'", str10, "#");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_#" + "'", str14, "_#");
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str6 = python2Target1.getListLabel("Python2");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"_tset_tset_hi!\"");
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("_4.5.2.1ContextContext");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getElementName("\"_tset_tset__\\\"__tset\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"_tset_tset_hi!\\\"\"" + "'", str8, "\"\\\"_tset_tset_hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__4.5.2.1ContextContext" + "'", str10, "__4.5.2.1ContextContext");
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        boolean boolean4 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("_\"_tsethi!\"");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str11 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__\"_tsethi!\"" + "'", str6, "__\"_tsethi!\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getImplicitSetLabel("\"_\\\"_tset_hi!\"");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.Class<?> wildcardClass7 = python2Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_tset\"_\\\"_tset_hi!\"" + "'", str5, "_tset\"_\\\"_tset_hi!\"");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape(10);
        org.antlr.v4.tool.ast.GrammarAST grammarAST9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getLoopCounter(grammarAST9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet5 = python2Target1.getBadWords();
        boolean boolean6 = python2Target1.wantsBaseListener();
        java.lang.String str8 = python2Target1.getListLabel("_\\64");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getRuleFunctionContextStructName(ruleFunction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_\\64" + "'", str8, "_\\64");
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("Python2");
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"Python2\"" + "'", str6, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape(0);
        java.lang.String str12 = python2Target1.encodeIntAsCharEscape(64);
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("\"4.5.2.1\"");
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("\"\\\\nContext\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\0" + "'", str10, "\\0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"4.5.2.1\"Context" + "'", str14, "\"4.5.2.1\"Context");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\\"\\\\\\\\nContext\\\"" + "'", str17, "\\\"\\\\\\\\nContext\\\"");
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        boolean boolean6 = python2Target1.wantsBaseListener();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"__tset\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        java.lang.String str13 = python2Target11.getAltLabelContextStructName("\\0");
        boolean boolean14 = python2Target11.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target11.getCodeGenerator();
        int int16 = python2Target11.getSerializedATNSegmentLimit();
        java.lang.String str18 = python2Target11.getImplicitRuleLabel("");
        org.antlr.v4.tool.Grammar grammar19 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target21 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator20);
        boolean boolean22 = python2Target21.supportsOverloadedMethods();
        boolean boolean23 = python2Target21.wantsBaseListener();
        boolean boolean24 = python2Target21.wantsBaseVisitor();
        boolean boolean25 = python2Target21.supportsOverloadedMethods();
        java.lang.String str27 = python2Target21.encodeIntAsCharEscape((int) (short) 100);
        int int28 = python2Target21.getInlineTestSetWordSize();
        java.lang.String str29 = python2Target21.getLanguage();
        java.lang.String str31 = python2Target21.getImplicitRuleLabel("_hi!");
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        boolean boolean35 = python2Target34.supportsOverloadedMethods();
        boolean boolean36 = python2Target34.wantsBaseListener();
        boolean boolean37 = python2Target34.wantsBaseVisitor();
        boolean boolean38 = python2Target34.supportsOverloadedMethods();
        java.lang.String str40 = python2Target34.encodeIntAsCharEscape((int) (short) 100);
        int int41 = python2Target34.getInlineTestSetWordSize();
        java.lang.String str43 = python2Target34.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target46 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator45);
        boolean boolean47 = python2Target46.supportsOverloadedMethods();
        boolean boolean48 = python2Target46.wantsBaseListener();
        boolean boolean49 = python2Target46.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup50 = python2Target46.getTemplates();
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        boolean boolean54 = python2Target53.supportsOverloadedMethods();
        boolean boolean55 = python2Target53.wantsBaseListener();
        boolean boolean56 = python2Target53.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python2Target53.getTokenTypesAsTargetLabels(grammar57, intArray58);
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        java.lang.String str63 = python2Target53.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator60, "hi!", true);
        org.antlr.v4.tool.Grammar grammar64 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target66 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator65);
        boolean boolean67 = python2Target66.supportsOverloadedMethods();
        boolean boolean68 = python2Target66.wantsBaseListener();
        boolean boolean69 = python2Target66.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar70 = null;
        int[] intArray71 = new int[] {};
        java.lang.String[] strArray72 = python2Target66.getTokenTypesAsTargetLabels(grammar70, intArray71);
        java.lang.String[] strArray73 = python2Target53.getTokenTypesAsTargetLabels(grammar64, intArray71);
        java.lang.String[] strArray74 = python2Target46.getTokenTypesAsTargetLabels(grammar51, intArray71);
        java.lang.String[] strArray75 = python2Target34.getTokenTypesAsTargetLabels(grammar44, intArray71);
        java.lang.String[] strArray76 = python2Target21.getTokenTypesAsTargetLabels(grammar32, intArray71);
        java.lang.String[] strArray77 = python2Target11.getTokenTypesAsTargetLabels(grammar19, intArray71);
        java.lang.String[] strArray78 = python2Target1.getTokenTypesAsTargetLabels(grammar9, intArray71);
        org.antlr.v4.tool.Grammar grammar79 = null;
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray81 = python2Target1.getTokenTypesAsTargetLabels(grammar79, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"__tset\\\"\"" + "'", str8, "\"\\\"__tset\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\0Context" + "'", str13, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_" + "'", str18, "_");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "d" + "'", str27, "d");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Python2" + "'", str29, "Python2");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "__hi!" + "'", str31, "__hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "d" + "'", str40, "d");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 64 + "'", int41 == 64);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\\n" + "'", str43, "\\n");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(sTGroup50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\"i\"" + "'", str63, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("\"_tset\\\"@\\\"Context\"");
        java.lang.String str11 = python2Target1.getListLabel("_tset_tset_tset_tset\"tset0Contex\"");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"_tset\\\"@\\\"Context\"" + "'", str9, "_\"_tset\\\"@\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset_tset_tset_tset\"tset0Contex\"" + "'", str11, "_tset_tset_tset_tset\"tset0Contex\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_" + "'", str13, "_");
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getElementListName("tsetPython");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\"Python2\"");
        int int13 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape((int) (short) 10);
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"Python2\\\"\"" + "'", str12, "\"\\\"Python2\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\n" + "'", str15, "\\n");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "d" + "'", str17, "d");
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("__\"__tset\"");
        java.lang.String str12 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "\"_tset\\\\0Context\"", false);
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        boolean boolean20 = python2Target19.supportsOverloadedMethods();
        boolean boolean21 = python2Target19.wantsBaseListener();
        boolean boolean22 = python2Target19.wantsBaseVisitor();
        boolean boolean23 = python2Target19.supportsOverloadedMethods();
        java.lang.String str25 = python2Target19.encodeIntAsCharEscape((int) (short) 100);
        int int26 = python2Target19.getInlineTestSetWordSize();
        java.lang.String str27 = python2Target19.getLanguage();
        int int28 = python2Target19.getInlineTestSetWordSize();
        java.lang.String str30 = python2Target19.getImplicitSetLabel("_tset\\0Context");
        boolean boolean31 = python2Target19.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        boolean boolean35 = python2Target34.supportsOverloadedMethods();
        boolean boolean36 = python2Target34.wantsBaseListener();
        boolean boolean37 = python2Target34.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar38 = null;
        int[] intArray39 = new int[] {};
        java.lang.String[] strArray40 = python2Target34.getTokenTypesAsTargetLabels(grammar38, intArray39);
        java.lang.String[] strArray41 = python2Target19.getTokenTypesAsTargetLabels(grammar32, intArray39);
        java.lang.String[] strArray42 = python2Target1.getTokenTypesAsTargetLabels(grammar17, intArray39);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset__\"__tset\"" + "'", str11, "_tset__\"__tset\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "4.5.2.1" + "'", str12, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\\\\0Context" + "'", str16, "_tset\\\\0Context");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "d" + "'", str25, "d");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 64 + "'", int26 == 64);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Python2" + "'", str27, "Python2");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 64 + "'", int28 == 64);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "_tset_tset\\0Context" + "'", str30, "_tset_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray42);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str5 = python2Target1.getVersion();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\1" + "'", str7, "\\1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\"Python2\"");
        int int13 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"Python2\\\"\"" + "'", str12, "\"\\\"Python2\\\"\"");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape(10);
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getElementListName("_\"\\\".5.2.\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = null;
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator6, "_d", false);
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) (short) 1);
        java.lang.String str13 = python2Target1.getImplicitSetLabel("_\"__tsetContex\"");
        java.lang.String str15 = python2Target1.getImplicitSetLabel("\"\\\".5.2.\\\"\\\"Contex\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getRuleFunctionContextStructName(ruleFunction16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\1" + "'", str11, "\\1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_\"__tsetContex\"" + "'", str13, "_tset_\"__tsetContex\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\"\\\".5.2.\\\"\\\"Contex\"" + "'", str15, "_tset\"\\\".5.2.\\\"\\\"Contex\"");
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.wantsBaseListener();
        boolean boolean8 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\"Python2\"");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("_\\\\\\\"\\\\\\\\\\\\\\\".5.2.\\\\\\\\\\\\\\\"\\\\\\\"");
        java.lang.String str16 = python2Target1.getListLabel("____tset");
        java.util.Set<java.lang.String> strSet17 = python2Target1.getBadWords();
        boolean boolean18 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"Python2\\\"\"" + "'", str12, "\"\\\"Python2\\\"\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__\\\\\\\"\\\\\\\\\\\\\\\".5.2.\\\\\\\\\\\\\\\"\\\\\\\"" + "'", str14, "__\\\\\\\"\\\\\\\\\\\\\\\".5.2.\\\\\\\\\\\\\\\"\\\\\\\"");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "____tset" + "'", str16, "____tset");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.supportsOverloadedMethods();
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_\"4.5.2.1ContextContex\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_\\\"4.5.2.1ContextContex\\\"\"" + "'", str12, "\"_\\\"4.5.2.1ContextContex\\\"\"");
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("");
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_tset\\0Context");
        boolean boolean13 = python2Target1.wantsBaseListener();
        boolean boolean14 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getLoopLabel(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset\\0Context" + "'", str12, "_tset_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        int int11 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"", false);
        int int16 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getLoopCounter(grammarAST17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"" + "'", str15, "\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("set\\\"__tset_hi");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_set\\\"__tset_hi" + "'", str13, "_set\\\"__tset_hi");
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.wantsBaseListener();
        boolean boolean8 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\"_tset\"");
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        java.lang.String str12 = python2Target1.getLanguage();
        java.lang.String str13 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"_tset\\\"\"" + "'", str10, "\"\\\"_tset\\\"\"");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        java.lang.String str5 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("\".5.2.\"");
        java.lang.String str13 = python2Target1.getImplicitSetLabel("_tset\"@\"ContextContextContext");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_4.5.2.1" + "'", str5, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"i\\\"\"" + "'", str8, "\"\\\"i\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\".5.2.\"Context" + "'", str11, "\".5.2.\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset_tset\"@\"ContextContextContext" + "'", str13, "_tset_tset\"@\"ContextContextContext");
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_tset_hi!");
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("____tset");
        int int14 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str16 = python2Target1.getImplicitSetLabel("\"\\\"__tset\\\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset_hi!\"" + "'", str10, "\"_tset_hi!\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"____tset\"" + "'", str13, "\"____tset\"");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset\"\\\"__tset\\\"\"" + "'", str16, "_tset\"\\\"__tset\\\"\"");
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        boolean boolean3 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"_tsethi!\"", true);
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        int int9 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) (byte) 0);
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_tsethi!\"" + "'", str7, "\"_tsethi!\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\0" + "'", str11, "\\0");
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) '#');
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#" + "'", str10, "#");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(sTGroup12);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "__tset_tset\\0Context", false);
        int int16 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "___d", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset_tset0Contex" + "'", str15, "_tset_tset0Contex");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "__" + "'", str20, "__");
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "_tset\"_tset_hi!Contex\"", false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tset\\\"_tset_hi!Contex" + "'", str11, "tset\\\"_tset_hi!Contex");
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.supportsOverloadedMethods();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\\0ContextContext");
        org.antlr.v4.tool.Grammar grammar13 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target15 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator14);
        java.lang.String str17 = python2Target15.getImplicitSetLabel("hi!");
        java.lang.String str19 = python2Target15.getListLabel("");
        java.util.Set<java.lang.String> strSet20 = python2Target15.getBadWords();
        boolean boolean21 = python2Target15.wantsBaseListener();
        boolean boolean22 = python2Target15.templatesExist();
        org.antlr.v4.tool.Grammar grammar23 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator24 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target25 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator24);
        boolean boolean26 = python2Target25.supportsOverloadedMethods();
        boolean boolean27 = python2Target25.templatesExist();
        java.util.Set<java.lang.String> strSet28 = python2Target25.getBadWords();
        java.lang.String str31 = python2Target25.getTargetStringLiteralFromString("", false);
        boolean boolean32 = python2Target25.templatesExist();
        java.lang.String str33 = python2Target25.getLanguage();
        java.lang.String str34 = python2Target25.getLanguage();
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        java.lang.String str40 = python2Target37.getTargetStringLiteralFromString("", false);
        boolean boolean41 = python2Target37.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet42 = python2Target37.getBadWords();
        java.lang.String str43 = python2Target37.getVersion();
        int int44 = python2Target37.getInlineTestSetWordSize();
        java.lang.String str46 = python2Target37.getListLabel("Python2");
        java.lang.String str47 = python2Target37.getVersion();
        org.stringtemplate.v4.STGroup sTGroup48 = python2Target37.getTemplates();
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target51 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator50);
        boolean boolean52 = python2Target51.supportsOverloadedMethods();
        boolean boolean53 = python2Target51.wantsBaseListener();
        boolean boolean54 = python2Target51.wantsBaseVisitor();
        java.lang.String str56 = python2Target51.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str58 = python2Target51.getListLabel("_tset_hi!");
        java.lang.String str60 = python2Target51.getListLabel("");
        org.antlr.v4.tool.Grammar grammar61 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target63 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator62);
        boolean boolean64 = python2Target63.supportsOverloadedMethods();
        boolean boolean65 = python2Target63.wantsBaseListener();
        boolean boolean66 = python2Target63.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar67 = null;
        int[] intArray68 = new int[] {};
        java.lang.String[] strArray69 = python2Target63.getTokenTypesAsTargetLabels(grammar67, intArray68);
        java.lang.String[] strArray70 = python2Target51.getTokenTypesAsTargetLabels(grammar61, intArray68);
        java.lang.String[] strArray71 = python2Target37.getTokenTypesAsTargetLabels(grammar49, intArray68);
        java.lang.String[] strArray72 = python2Target25.getTokenTypesAsTargetLabels(grammar35, intArray68);
        java.lang.String[] strArray73 = python2Target15.getTokenTypesAsTargetLabels(grammar23, intArray68);
        java.lang.String[] strArray74 = python2Target1.getTokenTypesAsTargetLabels(grammar13, intArray68);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\\0ContextContext\"" + "'", str12, "\"\\\\0ContextContext\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tsethi!" + "'", str17, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Python2" + "'", str33, "Python2");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python2" + "'", str34, "Python2");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "4.5.2.1" + "'", str43, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 64 + "'", int44 == 64);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Python2" + "'", str46, "Python2");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4.5.2.1" + "'", str47, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "_4.5.2.1" + "'", str56, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "_tset_hi!" + "'", str58, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        boolean boolean11 = python2Target1.templatesExist();
        int int12 = python2Target1.getInlineTestSetWordSize();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        java.lang.String str14 = python2Target1.getVersion();
        int int15 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        java.lang.String str11 = python2Target1.getListLabel("\\1");
        java.lang.String str13 = python2Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        org.antlr.v4.tool.Rule rule15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getRuleFunctionContextStructName(rule15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\1" + "'", str11, "\\1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\n" + "'", str13, "\\n");
        org.junit.Assert.assertNotNull(sTGroup14);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"hi!\"" + "'", str5, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar3 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target5 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator4);
        java.lang.String str8 = python2Target5.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target5.getTemplates();
        int int10 = python2Target5.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        java.lang.String str15 = python2Target13.getAltLabelContextStructName("\\0");
        boolean boolean16 = python2Target13.wantsBaseListener();
        java.lang.String str18 = python2Target13.getImplicitRuleLabel("___tset");
        java.lang.String str20 = python2Target13.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet21 = python2Target13.getBadWords();
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        boolean boolean25 = python2Target24.supportsOverloadedMethods();
        boolean boolean26 = python2Target24.wantsBaseListener();
        boolean boolean27 = python2Target24.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup28 = python2Target24.getTemplates();
        boolean boolean29 = python2Target24.templatesExist();
        java.lang.String str31 = python2Target24.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = python2Target24.getCodeGenerator();
        boolean boolean33 = python2Target24.templatesExist();
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        boolean boolean37 = python2Target36.supportsOverloadedMethods();
        boolean boolean38 = python2Target36.wantsBaseListener();
        boolean boolean39 = python2Target36.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar40 = null;
        int[] intArray41 = new int[] {};
        java.lang.String[] strArray42 = python2Target36.getTokenTypesAsTargetLabels(grammar40, intArray41);
        org.antlr.v4.codegen.CodeGenerator codeGenerator43 = null;
        java.lang.String str46 = python2Target36.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator43, "hi!", true);
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target49 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator48);
        boolean boolean50 = python2Target49.supportsOverloadedMethods();
        boolean boolean51 = python2Target49.wantsBaseListener();
        boolean boolean52 = python2Target49.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar53 = null;
        int[] intArray54 = new int[] {};
        java.lang.String[] strArray55 = python2Target49.getTokenTypesAsTargetLabels(grammar53, intArray54);
        java.lang.String[] strArray56 = python2Target36.getTokenTypesAsTargetLabels(grammar47, intArray54);
        java.lang.String[] strArray57 = python2Target24.getTokenTypesAsTargetLabels(grammar34, intArray54);
        java.lang.String[] strArray58 = python2Target13.getTokenTypesAsTargetLabels(grammar22, intArray54);
        java.lang.String[] strArray59 = python2Target5.getTokenTypesAsTargetLabels(grammar11, intArray54);
        java.lang.String[] strArray60 = python2Target1.getTokenTypesAsTargetLabels(grammar3, intArray54);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0Context" + "'", str15, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "____tset" + "'", str18, "____tset");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"@\"" + "'", str20, "\"@\"");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(sTGroup28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"_tsetContext\"" + "'", str31, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\"i\"" + "'", str46, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("d", false);
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getElementName("4.5.2.1");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "d" + "'", str6, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_4.5.2.1Context" + "'", str8, "_4.5.2.1Context");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.String str8 = python2Target1.getImplicitSetLabel("\"4.5.2.1\"");
        boolean boolean9 = python2Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getLoopCounter(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"@\\\"" + "'", str6, "\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"4.5.2.1\"" + "'", str8, "_tset\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        java.lang.String str7 = python2Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str8 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\"__tsetContex\"", false);
        boolean boolean13 = python2Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getTokenTypeAsTargetLabel(grammar14, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"hi!\"Context" + "'", str7, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__tsetContex" + "'", str12, "__tsetContex");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        java.lang.String str11 = python2Target1.getListLabel("\\1");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("\"_tsethi!\"");
        boolean boolean14 = python2Target1.templatesExist();
        int int15 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape(0);
        boolean boolean18 = python2Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\1" + "'", str11, "\\1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"_tsethi!\"" + "'", str13, "_\"_tsethi!\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\0" + "'", str17, "\\0");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        java.lang.String str3 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("tset_tset\\\"_tsetContext\\\"", true);
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"tset_tset\\\\\\\"_tsetContext\\\\\\\"\"" + "'", str7, "\"tset_tset\\\\\\\"_tsetContext\\\\\\\"\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_tset\"@\"");
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"@\"Context" + "'", str11, "_tset\"@\"Context");
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"@\"");
        org.antlr.v4.tool.Grammar grammar9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getTokenTypeAsTargetLabel(grammar9, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"hi!\"" + "'", str5, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"@\\\"\"" + "'", str8, "\"\\\"@\\\"\"");
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        java.lang.String str10 = python2Target1.getVersion();
        java.lang.String str11 = python2Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset_tsetPython2", true);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("_\\\"\\\\\\\".5.2.\\\\\\\"\\\"Context");
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.getTemplates();
        java.lang.String str12 = python2Target1.encodeIntAsCharEscape((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset_tsetPython2\"" + "'", str7, "\"__tset_tsetPython2\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_\\\"\\\\\\\".5.2.\\\\\\\"\\\"Context" + "'", str9, "_tset_\\\"\\\\\\\".5.2.\\\\\\\"\\\"Context");
        org.junit.Assert.assertNotNull(sTGroup10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\0" + "'", str12, "\\0");
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        java.lang.String str14 = python2Target1.getVersion();
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.Class<?> wildcardClass16 = python2Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.String str8 = python2Target1.getListLabel("\"\\\"_tset_tset_hi!\\\"\"");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\"\\\"i\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"@\\\"" + "'", str6, "\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"_tset_tset_hi!\\\"\"" + "'", str8, "\"\\\"_tset_tset_hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\\\\\"i\\\\\\\"\\\"\"" + "'", str10, "\"\\\"\\\\\\\"i\\\\\\\"\\\"\"");
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        java.lang.String str22 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator23);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        boolean boolean11 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str13 = python2Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.supportsOverloadedMethods();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str12 = python2Target1.getImplicitRuleLabel("__tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "___tset\\0Context" + "'", str12, "___tset\\0Context");
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        java.lang.String str10 = python2Target1.getVersion();
        boolean boolean11 = python2Target1.wantsBaseListener();
        java.lang.String str13 = python2Target1.getAltLabelContextStructName("_tset\"_tsetPython2\"");
        java.lang.String str15 = python2Target1.getListLabel("_tset\"@\"ContextContextContext");
        int int16 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"_tsetPython2\"Context" + "'", str13, "_tset\"_tsetPython2\"Context");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "_tset\"@\"ContextContextContext" + "'", str15, "_tset\"@\"ContextContextContext");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("__\"\\\"____tset\\\"\"");
        boolean boolean10 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "___\"\\\"____tset\\\"\"" + "'", str9, "___\"\\\"____tset\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.lang.String str9 = python2Target1.getVersion();
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("__4.5.2.1ContextContext");
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_4.5.2.1Context" + "'", str11, "_4.5.2.1Context");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"__4.5.2.1ContextContext\"" + "'", str15, "\"__4.5.2.1ContextContext\"");
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getImplicitSetLabel("_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\\\\\"Contex");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\\\\\"Contex" + "'", str8, "_tset_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\\\\\"Contex");
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("");
        java.lang.String str10 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getTokenTypeAsTargetLabel(grammar11, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset_tsetPython2", true);
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("tset\\\\\\\"\\\\\\\"__tset\\\\\\\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset_tsetPython2\"" + "'", str7, "\"__tset_tsetPython2\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "d" + "'", str9, "d");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"__tset\\\\\\\\\\\\\\\"\"" + "'", str11, "\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"__tset\\\\\\\\\\\\\\\"\"");
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_hi!");
        boolean boolean12 = python2Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getLoopCounter(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__hi!" + "'", str11, "__hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        boolean boolean10 = python2Target9.supportsOverloadedMethods();
        boolean boolean11 = python2Target9.wantsBaseListener();
        boolean boolean12 = python2Target9.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar13 = null;
        int[] intArray14 = new int[] {};
        java.lang.String[] strArray15 = python2Target9.getTokenTypesAsTargetLabels(grammar13, intArray14);
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        java.lang.String str19 = python2Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator16, "hi!", true);
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        boolean boolean23 = python2Target22.supportsOverloadedMethods();
        boolean boolean24 = python2Target22.wantsBaseListener();
        boolean boolean25 = python2Target22.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar26 = null;
        int[] intArray27 = new int[] {};
        java.lang.String[] strArray28 = python2Target22.getTokenTypesAsTargetLabels(grammar26, intArray27);
        java.lang.String[] strArray29 = python2Target9.getTokenTypesAsTargetLabels(grammar20, intArray27);
        java.lang.String str30 = python2Target9.getVersion();
        boolean boolean31 = python2Target9.wantsBaseListener();
        java.util.Set<java.lang.String> strSet32 = python2Target9.getBadWords();
        boolean boolean33 = python2Target9.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        boolean boolean37 = python2Target36.supportsOverloadedMethods();
        boolean boolean38 = python2Target36.wantsBaseListener();
        boolean boolean39 = python2Target36.wantsBaseVisitor();
        java.lang.String str41 = python2Target36.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str43 = python2Target36.getListLabel("_tset_hi!");
        java.lang.String str45 = python2Target36.getListLabel("");
        org.antlr.v4.tool.Grammar grammar46 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target48 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator47);
        boolean boolean49 = python2Target48.supportsOverloadedMethods();
        boolean boolean50 = python2Target48.wantsBaseListener();
        boolean boolean51 = python2Target48.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar52 = null;
        int[] intArray53 = new int[] {};
        java.lang.String[] strArray54 = python2Target48.getTokenTypesAsTargetLabels(grammar52, intArray53);
        java.lang.String[] strArray55 = python2Target36.getTokenTypesAsTargetLabels(grammar46, intArray53);
        java.lang.String[] strArray56 = python2Target9.getTokenTypesAsTargetLabels(grammar34, intArray53);
        java.lang.String[] strArray57 = python2Target1.getTokenTypesAsTargetLabels(grammar7, intArray53);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[]");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"i\"" + "'", str19, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "4.5.2.1" + "'", str30, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "_4.5.2.1" + "'", str41, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "_tset_hi!" + "'", str43, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        int int11 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python2Target1.encodeIntAsCharEscape((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getElementName("_tset_tset____tset");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\1" + "'", str13, "\\1");
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        java.lang.String str10 = python2Target1.getVersion();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\"tset6\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getElementName("ython");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\"tset6\"" + "'", str12, "_tset\"tset6\"");
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("\\\"@\\\"");
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        boolean boolean10 = python2Target9.supportsOverloadedMethods();
        boolean boolean11 = python2Target9.wantsBaseListener();
        boolean boolean12 = python2Target9.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target9.getTemplates();
        boolean boolean14 = python2Target9.templatesExist();
        java.lang.String str17 = python2Target9.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str19 = python2Target9.getAltLabelContextStructName("@");
        java.lang.String str21 = python2Target9.getImplicitRuleLabel("_tset_tset\\0Context");
        org.stringtemplate.v4.STGroup sTGroup22 = python2Target9.getTemplates();
        java.util.Set<java.lang.String> strSet23 = python2Target9.getBadWords();
        boolean boolean24 = python2Target9.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        java.lang.String str28 = python2Target9.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator25, "_tset\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = python2Target9.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        boolean boolean33 = python2Target32.supportsOverloadedMethods();
        boolean boolean34 = python2Target32.wantsBaseListener();
        boolean boolean35 = python2Target32.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup36 = python2Target32.getTemplates();
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        boolean boolean40 = python2Target39.supportsOverloadedMethods();
        boolean boolean41 = python2Target39.wantsBaseListener();
        boolean boolean42 = python2Target39.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar43 = null;
        int[] intArray44 = new int[] {};
        java.lang.String[] strArray45 = python2Target39.getTokenTypesAsTargetLabels(grammar43, intArray44);
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        java.lang.String str49 = python2Target39.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator46, "hi!", true);
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target52 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator51);
        boolean boolean53 = python2Target52.supportsOverloadedMethods();
        boolean boolean54 = python2Target52.wantsBaseListener();
        boolean boolean55 = python2Target52.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar56 = null;
        int[] intArray57 = new int[] {};
        java.lang.String[] strArray58 = python2Target52.getTokenTypesAsTargetLabels(grammar56, intArray57);
        java.lang.String[] strArray59 = python2Target39.getTokenTypesAsTargetLabels(grammar50, intArray57);
        java.lang.String[] strArray60 = python2Target32.getTokenTypesAsTargetLabels(grammar37, intArray57);
        java.lang.String[] strArray61 = python2Target9.getTokenTypesAsTargetLabels(grammar30, intArray57);
        java.lang.String[] strArray62 = python2Target1.getTokenTypesAsTargetLabels(grammar7, intArray57);
        org.antlr.v4.tool.ast.GrammarAST grammarAST63 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean64 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset\\\"@\\\"" + "'", str6, "_tset\\\"@\\\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str17, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "@Context" + "'", str19, "@Context");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "__tset_tset\\0Context" + "'", str21, "__tset_tset\\0Context");
        org.junit.Assert.assertNotNull(sTGroup22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tset0" + "'", str28, "tset0");
        org.junit.Assert.assertNull(codeGenerator29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(sTGroup36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "\"i\"" + "'", str49, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[]");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.templatesExist();
        java.lang.String str11 = python2Target1.getListLabel("\"\\\"_tset_hi!\\\"\"");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("__\"\\\"____tset\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"\\\"_tset_hi!\\\"\"" + "'", str11, "\"\\\"_tset_hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "___\"\\\"____tset\\\"\"" + "'", str13, "___\"\\\"____tset\\\"\"");
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape(0);
        java.lang.String str12 = python2Target1.encodeIntAsCharEscape(64);
        boolean boolean13 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\0" + "'", str10, "\\0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str5 = python2Target1.getAltLabelContextStructName("\"i\"");
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"i\"Context" + "'", str5, "\"i\"Context");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "4.5.2.1", true);
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\\0Context");
        boolean boolean13 = python2Target1.wantsBaseListener();
        boolean boolean14 = python2Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\".5.2.\"" + "'", str10, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\0Context" + "'", str12, "_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        boolean boolean6 = python2Target1.wantsBaseListener();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("_tset\"@\"Context");
        boolean boolean10 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\"@\"ContextContext" + "'", str9, "_tset\"@\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        org.antlr.v4.tool.Rule rule8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getRuleFunctionContextStructName(rule8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertNotNull(sTGroup7);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("hi!");
        java.lang.String str11 = python2Target1.getLanguage();
        java.lang.String str13 = python2Target1.getListLabel("__\"_tsethi!\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getElementListName("____\"\\\"____tset\\\"\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__\"_tsethi!\"" + "'", str13, "__\"_tsethi!\"");
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python2Target1.getVersion();
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        boolean boolean11 = python2Target1.wantsBaseListener();
        java.lang.String str13 = python2Target1.getAltLabelContextStructName("a");
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("_tset_tset\"@\"ContextContext", false);
        org.antlr.v4.tool.Grammar grammar17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python2Target1.getTokenTypeAsTargetLabel(grammar17, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "AContext" + "'", str13, "AContext");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset_tset\\\"@\\\"ContextContext" + "'", str16, "_tset_tset\\\"@\\\"ContextContext");
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str7 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getTokenTypeAsTargetLabel(grammar9, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        java.lang.String str3 = python2Target1.getVersion();
        java.lang.String str4 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = null;
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator5, "_tset_tset\\0Context", true);
        java.lang.String str10 = python2Target1.getListLabel("_tset_\\\"\\\".5.2.\\\"\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset_tset0Contex\"" + "'", str8, "\"tset_tset0Contex\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset_\\\"\\\".5.2.\\\"\\\"Contex" + "'", str10, "_tset_\\\"\\\".5.2.\\\"\\\"Contex");
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        boolean boolean7 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("____tset");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_tset\"_tset_hi!\"Context");
        org.antlr.v4.tool.Rule rule12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getRuleFunctionContextStructName(rule12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "____tsetContext" + "'", str9, "____tsetContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"_tset\\\"_tset_hi!\\\"Context\"" + "'", str11, "\"_tset\\\"_tset_hi!\\\"Context\"");
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        java.lang.String str11 = python2Target1.getListLabel("\\1");
        boolean boolean12 = python2Target1.wantsBaseListener();
        java.lang.String str13 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\1" + "'", str11, "\\1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.supportsOverloadedMethods();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        java.lang.String str12 = python2Target1.getLanguage();
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("_\" \"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_\" \"Context" + "'", str14, "_\" \"Context");
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet7 = python2Target1.getBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getRuleFunctionContextStructName(ruleFunction8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getListLabel("_hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getElementListName("\"tset_tset\\\"tset0Contex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_hi!" + "'", str6, "_hi!");
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python2Target1.getVersion();
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        boolean boolean12 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("d", false);
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.getLanguage();
        int int11 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "d" + "'", str6, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_4.5.2.1Context" + "'", str8, "_4.5.2.1Context");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getListLabel("_tset\"4.5.2.1\"");
        int int8 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\"4.5.2.1\"" + "'", str7, "_tset\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2147483647 + "'", int8 == 2147483647);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        java.lang.String str5 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getLanguage();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getRuleFunctionContextStructName(ruleFunction11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_4.5.2.1" + "'", str5, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getVersion();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\"_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\"");
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_tset_hi!");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("d", true);
        boolean boolean16 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str10, "\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_hi!\"" + "'", str12, "\"_tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"d\"" + "'", str15, "\"d\"");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup10 = python2Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup10);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tset\\0Context");
        java.lang.String str10 = python2Target1.getListLabel("\"_tsethi!\"");
        java.lang.String str11 = python2Target1.getLanguage();
        java.lang.String str13 = python2Target1.getImplicitSetLabel("\"__tset_hi!\"");
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape((int) (byte) 0);
        java.lang.String str17 = python2Target1.getImplicitSetLabel("_\"\\\".5.2.\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\\\\0Context\"" + "'", str8, "\"_tset\\\\0Context\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsethi!\"" + "'", str10, "\"_tsethi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"__tset_hi!\"" + "'", str13, "_tset\"__tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset_\"\\\".5.2.\\\"\"Context" + "'", str17, "_tset_\"\\\".5.2.\\\"\"Context");
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("@");
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getElementListName("_tsetContextContextContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@Context" + "'", str11, "@Context");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("hi!");
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tsethi!" + "'", str6, "_tsethi!");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python2Target1.getVersion();
        java.lang.String str9 = python2Target1.getListLabel("\"Python2\"Context");
        boolean boolean10 = python2Target1.templatesExist();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"Python2\"Context" + "'", str9, "\"Python2\"Context");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str6 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getTokenTypeAsTargetLabel(grammar7, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_tset_hi!");
        java.lang.String str11 = python2Target1.getVersion();
        boolean boolean12 = python2Target1.templatesExist();
        java.lang.String str13 = python2Target1.getVersion();
        boolean boolean14 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset_hi!\"" + "'", str10, "\"_tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("Python2");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"__\\\"_tset_hi!\\\"\"", true);
        boolean boolean14 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"Python2\"" + "'", str6, "\"Python2\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "d" + "'", str10, "d");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"__\\\\\\\"_tset_hi!\\\\\\\"\\\"\"" + "'", str13, "\"\\\"__\\\\\\\"_tset_hi!\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("\"_tset\\\"@\\\"Context\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getImplicitTokenLabel("_tset_\"__tsetContex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"_tset\\\"@\\\"Context\"" + "'", str9, "_\"_tset\\\"@\\\"Context\"");
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        java.lang.String str9 = python2Target1.getVersion();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_hi");
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getLoopLabel(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__hi" + "'", str11, "__hi");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getVersion();
        boolean boolean8 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__\"_tset_hi!\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getLoopCounter(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"_tset_hi!\"" + "'", str13, "\"_\\\"_tset_hi!\"");
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.wantsBaseListener();
        boolean boolean8 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("d", false);
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        java.lang.String str10 = python2Target1.getListLabel("\"_tsetContext\"");
        boolean boolean11 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "d" + "'", str6, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_4.5.2.1Context" + "'", str8, "_4.5.2.1Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsetContext\"" + "'", str10, "\"_tsetContext\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.lang.String str11 = python2Target9.getAltLabelContextStructName("\\0");
        boolean boolean12 = python2Target9.wantsBaseListener();
        java.lang.String str14 = python2Target9.getImplicitRuleLabel("___tset");
        java.lang.String str16 = python2Target9.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet17 = python2Target9.getBadWords();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        boolean boolean21 = python2Target20.supportsOverloadedMethods();
        boolean boolean22 = python2Target20.wantsBaseListener();
        boolean boolean23 = python2Target20.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target20.getTemplates();
        boolean boolean25 = python2Target20.templatesExist();
        java.lang.String str27 = python2Target20.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python2Target20.getCodeGenerator();
        boolean boolean29 = python2Target20.templatesExist();
        org.antlr.v4.tool.Grammar grammar30 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator31 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target32 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator31);
        boolean boolean33 = python2Target32.supportsOverloadedMethods();
        boolean boolean34 = python2Target32.wantsBaseListener();
        boolean boolean35 = python2Target32.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar36 = null;
        int[] intArray37 = new int[] {};
        java.lang.String[] strArray38 = python2Target32.getTokenTypesAsTargetLabels(grammar36, intArray37);
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        java.lang.String str42 = python2Target32.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator39, "hi!", true);
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target45 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator44);
        boolean boolean46 = python2Target45.supportsOverloadedMethods();
        boolean boolean47 = python2Target45.wantsBaseListener();
        boolean boolean48 = python2Target45.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar49 = null;
        int[] intArray50 = new int[] {};
        java.lang.String[] strArray51 = python2Target45.getTokenTypesAsTargetLabels(grammar49, intArray50);
        java.lang.String[] strArray52 = python2Target32.getTokenTypesAsTargetLabels(grammar43, intArray50);
        java.lang.String[] strArray53 = python2Target20.getTokenTypesAsTargetLabels(grammar30, intArray50);
        java.lang.String[] strArray54 = python2Target9.getTokenTypesAsTargetLabels(grammar18, intArray50);
        java.lang.String[] strArray55 = python2Target1.getTokenTypesAsTargetLabels(grammar7, intArray50);
        java.lang.String str57 = python2Target1.getTargetStringLiteralFromString("");
        java.lang.String str59 = python2Target1.getListLabel("__tset");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\0Context" + "'", str11, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "____tset" + "'", str14, "____tset");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"@\"" + "'", str16, "\"@\"");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"_tsetContext\"" + "'", str27, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"i\"" + "'", str42, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "\"\"" + "'", str57, "\"\"");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "__tset" + "'", str59, "__tset");
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) '4');
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        boolean boolean13 = python2Target1.wantsBaseListener();
        int int14 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Rule rule15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getRuleFunctionContextStructName(rule15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\64" + "'", str11, "\\64");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape(0);
        java.lang.String str12 = python2Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.ast.GrammarAST grammarAST13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getLoopLabel(grammarAST13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\0" + "'", str10, "\\0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "@" + "'", str12, "@");
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        boolean boolean11 = python2Target1.templatesExist();
        int int12 = python2Target1.getInlineTestSetWordSize();
        int int13 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        java.lang.String str18 = python2Target16.getAltLabelContextStructName("\\0");
        boolean boolean19 = python2Target16.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String str25 = python2Target22.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup26 = python2Target22.getTemplates();
        int int27 = python2Target22.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar28 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator29 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target30 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator29);
        java.lang.String str32 = python2Target30.getAltLabelContextStructName("\\0");
        boolean boolean33 = python2Target30.wantsBaseListener();
        java.lang.String str35 = python2Target30.getImplicitRuleLabel("___tset");
        java.lang.String str37 = python2Target30.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet38 = python2Target30.getBadWords();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        boolean boolean42 = python2Target41.supportsOverloadedMethods();
        boolean boolean43 = python2Target41.wantsBaseListener();
        boolean boolean44 = python2Target41.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup45 = python2Target41.getTemplates();
        boolean boolean46 = python2Target41.templatesExist();
        java.lang.String str48 = python2Target41.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator49 = python2Target41.getCodeGenerator();
        boolean boolean50 = python2Target41.templatesExist();
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        boolean boolean54 = python2Target53.supportsOverloadedMethods();
        boolean boolean55 = python2Target53.wantsBaseListener();
        boolean boolean56 = python2Target53.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python2Target53.getTokenTypesAsTargetLabels(grammar57, intArray58);
        org.antlr.v4.codegen.CodeGenerator codeGenerator60 = null;
        java.lang.String str63 = python2Target53.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator60, "hi!", true);
        org.antlr.v4.tool.Grammar grammar64 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target66 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator65);
        boolean boolean67 = python2Target66.supportsOverloadedMethods();
        boolean boolean68 = python2Target66.wantsBaseListener();
        boolean boolean69 = python2Target66.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar70 = null;
        int[] intArray71 = new int[] {};
        java.lang.String[] strArray72 = python2Target66.getTokenTypesAsTargetLabels(grammar70, intArray71);
        java.lang.String[] strArray73 = python2Target53.getTokenTypesAsTargetLabels(grammar64, intArray71);
        java.lang.String[] strArray74 = python2Target41.getTokenTypesAsTargetLabels(grammar51, intArray71);
        java.lang.String[] strArray75 = python2Target30.getTokenTypesAsTargetLabels(grammar39, intArray71);
        java.lang.String[] strArray76 = python2Target22.getTokenTypesAsTargetLabels(grammar28, intArray71);
        java.lang.String[] strArray77 = python2Target16.getTokenTypesAsTargetLabels(grammar20, intArray71);
        java.lang.String[] strArray78 = python2Target1.getTokenTypesAsTargetLabels(grammar14, intArray71);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\0Context" + "'", str18, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(sTGroup26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2147483647 + "'", int27 == 2147483647);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "\\0Context" + "'", str32, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "____tset" + "'", str35, "____tset");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "\"@\"" + "'", str37, "\"@\"");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(sTGroup45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\"_tsetContext\"" + "'", str48, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\"i\"" + "'", str63, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[]");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.templatesExist();
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getLoopCounter(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        java.lang.String str13 = python2Target1.getListLabel("\".5.2.\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target1.getCodeGenerator();
        boolean boolean15 = python2Target1.wantsBaseListener();
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("\"_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\".5.2.\"" + "'", str13, "\".5.2.\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str17, "\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\"\\\\0Context\"", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"\\\\\\\\0Context\\\"" + "'", str10, "\\\"\\\\\\\\0Context\\\"");
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("__\"__tset\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"_tset\\\\0Context\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset__\"__tset\"" + "'", str11, "_tset__\"__tset\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_tset\\\\0Context\"" + "'", str15, "\"_tset\\\\0Context\"");
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset_hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset_tset_hi!", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "_Python2Context", false);
        java.lang.String str22 = python2Target1.encodeIntAsCharEscape(0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_hi!\"Context" + "'", str12, "\"_tset_hi!\"Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"tset_tset_hi\"" + "'", str16, "\"tset_tset_hi\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2Contex" + "'", str20, "Python2Contex");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\\0" + "'", str22, "\\0");
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("_4.5.2.1Context");
        int int10 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getRuleFunctionContextStructName(ruleFunction12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_4.5.2.1ContextContext" + "'", str9, "_4.5.2.1ContextContext");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getTargetStringLiteralFromString("\"_tset_hi!\"");
        java.lang.String str4 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape(10);
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("\"\\\\0Context\"Context");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\\\"_tset_hi!\\\"\"" + "'", str3, "\"\\\"_tset_hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "4.5.2.1" + "'", str4, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\\n" + "'", str7, "\\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"\\\\0Context\"Context" + "'", str9, "_\"\\\\0Context\"Context");
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.String str8 = python2Target1.getImplicitSetLabel("\"4.5.2.1\"");
        boolean boolean9 = python2Target1.templatesExist();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("\\\\\\\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"ContextContext");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"@\\\"" + "'", str6, "\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\"4.5.2.1\"" + "'", str8, "_tset\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\\\\\\\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"ContextContext" + "'", str11, "_\\\\\\\"tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"ContextContext");
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_tset\\0Context");
        boolean boolean13 = python2Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getImplicitTokenLabel("_tset\\\"@\\\"ContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset\\0Context" + "'", str12, "_tset_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str5 = python2Target1.getImplicitRuleLabel("__tset");
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("Python2Context");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_#", false);
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_\"\\\".5.2.\\\"\"", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getLoopLabel(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "___tset" + "'", str5, "___tset");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_Python2Context" + "'", str7, "_Python2Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_#" + "'", str10, "_#");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_\\\"\\\\\\\".5.2.\\\\\\\"\\\"\"" + "'", str13, "\"_\\\"\\\\\\\".5.2.\\\\\\\"\\\"\"");
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "__tset_tset0Contex", true);
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getElementName("\\\"Python2\\\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset_tset0Conte\"" + "'", str13, "\"_tset_tset0Conte\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "d" + "'", str15, "d");
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        boolean boolean6 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.lang.String str9 = python2Target1.getLanguage();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getElementName("\"__\\\"__tset\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        boolean boolean9 = python2Target1.templatesExist();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python2Target1.getCodeGenerator();
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("tset_tset_hi", true);
        java.lang.String str10 = python2Target1.getListLabel("___tseContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"tset_tset_hi\"" + "'", str8, "\"tset_tset_hi\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "___tseContext" + "'", str10, "___tseContext");
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "_4.5.2.1ContextContext", false);
        org.antlr.v4.tool.Grammar grammar8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getTokenTypeAsTargetLabel(grammar8, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1ContextContex" + "'", str7, "4.5.2.1ContextContex");
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getVersion();
        boolean boolean7 = python2Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getVersion();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("\"_tset\\\"_tset_hi!\\\"Context\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getElementListName("_tset_tset#Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\"_tset\\\"_tset_hi!\\\"Context\"" + "'", str11, "_\"_tset\\\"_tset_hi!\\\"Context\"");
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        java.lang.String str9 = python2Target1.getListLabel("_tset_hi!");
        java.lang.String str11 = python2Target1.getImplicitSetLabel("\"4.5.2.1\"");
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "_tset_tset\"tset0Contex\"", true);
        int int18 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.ast.GrammarAST grammarAST19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset_hi!" + "'", str9, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"4.5.2.1\"" + "'", str11, "_tset\"4.5.2.1\"");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"tset_tset\\\"tset0Contex\"" + "'", str17, "\"tset_tset\\\"tset0Contex\"");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        boolean boolean10 = python2Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        boolean boolean14 = python2Target13.supportsOverloadedMethods();
        boolean boolean15 = python2Target13.wantsBaseListener();
        boolean boolean16 = python2Target13.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar17 = null;
        int[] intArray18 = new int[] {};
        java.lang.String[] strArray19 = python2Target13.getTokenTypesAsTargetLabels(grammar17, intArray18);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python2Target13.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "hi!", true);
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        boolean boolean27 = python2Target26.supportsOverloadedMethods();
        boolean boolean28 = python2Target26.wantsBaseListener();
        boolean boolean29 = python2Target26.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar30 = null;
        int[] intArray31 = new int[] {};
        java.lang.String[] strArray32 = python2Target26.getTokenTypesAsTargetLabels(grammar30, intArray31);
        java.lang.String[] strArray33 = python2Target13.getTokenTypesAsTargetLabels(grammar24, intArray31);
        java.lang.String[] strArray34 = python2Target1.getTokenTypesAsTargetLabels(grammar11, intArray31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = python2Target1.getImplicitTokenLabel("__\"_tsethi!\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\"i\"" + "'", str23, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("d", false);
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Rule rule11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getRuleFunctionContextStructName(rule11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "d" + "'", str6, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_4.5.2.1Context" + "'", str8, "_4.5.2.1Context");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getLanguage();
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        java.lang.String str14 = python2Target1.getListLabel("__tset");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__tset" + "'", str14, "__tset");
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        boolean boolean22 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet23 = python2Target1.getBadWords();
        java.lang.String str25 = python2Target1.getListLabel("_Tset\\\"_tsetContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_Tset\\\"_tsetContextContext" + "'", str25, "_Tset\\\"_tsetContextContext");
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        java.lang.String str7 = python2Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str8 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\"__tsetContex\"", false);
        int int13 = python2Target1.getSerializedATNSegmentLimit();
        int int14 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str15 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"hi!\"Context" + "'", str7, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__tsetContex" + "'", str12, "__tsetContex");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Python2" + "'", str15, "Python2");
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape(64);
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str14 = python2Target1.getListLabel("\\0");
        boolean boolean15 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\\0" + "'", str14, "\\0");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "4.5.2.1" + "'", str16, "4.5.2.1");
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str6 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "Python2", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getLoopCounter(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"ython\"" + "'", str10, "\"ython\"");
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_tset\"@\"");
        org.stringtemplate.v4.STGroup sTGroup12 = python2Target1.getTemplates();
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("_tset\\\"@\\\"Context");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getElementName("_tset\"@\"ContextContext");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"@\"Context" + "'", str11, "_tset\"@\"Context");
        org.junit.Assert.assertNotNull(sTGroup12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_tset\\\\\\\"@\\\\\\\"Context\"" + "'", str14, "\"_tset\\\\\\\"@\\\\\\\"Context\"");
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getElementName("_\"\\\"____tset\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) (short) 10);
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("__4.5.2.1ContextContext", false);
        boolean boolean14 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\n" + "'", str10, "\\n");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__4.5.2.1ContextContext" + "'", str13, "__4.5.2.1ContextContext");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("\"_tset_hi!\"");
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("\"\\\"\\\\\\\"____tset\\\\\\\"\\\"\"");
        java.lang.String str12 = python2Target1.getListLabel("_\\\"__tset_hi!\\\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"_tset_hi!\"" + "'", str7, "_\"_tset_hi!\"");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\"\\\\\\\"____tset\\\\\\\"\\\"\"Context" + "'", str10, "\"\\\"\\\\\\\"____tset\\\\\\\"\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_\\\"__tset_hi!\\\"" + "'", str12, "_\\\"__tset_hi!\\\"");
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.lang.String str10 = python2Target1.getLanguage();
        int int11 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        boolean boolean8 = python2Target1.templatesExist();
        int int9 = python2Target1.getInlineTestSetWordSize();
        boolean boolean10 = python2Target1.templatesExist();
        java.lang.String str11 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tset_hi!");
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset_hi!\"" + "'", str8, "\"_tset_hi!\"");
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_hi!");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("d");
        boolean boolean15 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromString("\"__tset_tset\\\\0Context\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "\"ython\"", false);
        org.antlr.v4.tool.ast.GrammarAST grammarAST24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = python2Target1.getLoopLabel(grammarAST24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_hi!" + "'", str12, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_d" + "'", str14, "_d");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\"\\\"__tset_tset\\\\\\\\0Context\\\"\"" + "'", str19, "\"\\\"__tset_tset\\\\\\\\0Context\\\"\"");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ython" + "'", str23, "ython");
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.lang.String str9 = python2Target1.getVersion();
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "4.5.2.1" + "'", str9, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(codeGenerator11);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python2Target1.getCodeGenerator();
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup6 = python2Target1.getTemplates();
        int int7 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(sTGroup6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("#");
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = python2Target1.getCodeGenerator();
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("");
        int int15 = python2Target1.getInlineTestSetWordSize();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_#" + "'", str11, "_#");
        org.junit.Assert.assertNull(codeGenerator12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_" + "'", str14, "_");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet5 = python2Target1.getBadWords();
        boolean boolean6 = python2Target1.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getLoopCounter(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_tset\\0Context");
        boolean boolean13 = python2Target1.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar14 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target16 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator15);
        boolean boolean17 = python2Target16.supportsOverloadedMethods();
        boolean boolean18 = python2Target16.wantsBaseListener();
        boolean boolean19 = python2Target16.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar20 = null;
        int[] intArray21 = new int[] {};
        java.lang.String[] strArray22 = python2Target16.getTokenTypesAsTargetLabels(grammar20, intArray21);
        java.lang.String[] strArray23 = python2Target1.getTokenTypesAsTargetLabels(grammar14, intArray21);
        int int24 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str26 = python2Target1.getListLabel("\"_tset_tset____tset\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset\\0Context" + "'", str12, "_tset_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[]");
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"_tset_tset____tset\"" + "'", str26, "\"_tset_tset____tset\"");
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2");
        java.lang.String str7 = python2Target1.getAltLabelContextStructName("\"hi!\"");
        java.lang.String str8 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\"__tsetContex\"", false);
        int int13 = python2Target1.getSerializedATNSegmentLimit();
        int int14 = python2Target1.getInlineTestSetWordSize();
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"hi!\"Context" + "'", str7, "\"hi!\"Context");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__tsetContex" + "'", str12, "__tsetContex");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str7 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getTokenTypeAsTargetLabel(grammar8, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str5 = python2Target1.getVersion();
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("_tsetContextContext");
        org.antlr.v4.tool.Grammar grammar11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getTokenTypeAsTargetLabel(grammar11, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "4.5.2.1" + "'", str5, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tsetContextContextContext" + "'", str10, "_tsetContextContextContext");
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_hi!");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("d");
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python2Target1.getImplicitRuleLabel("_tset_tset_hi!");
        java.lang.String str18 = python2Target1.getLanguage();
        java.lang.String str20 = python2Target1.getImplicitRuleLabel("\\\"\\\\\\\"ython\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_hi!" + "'", str12, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_d" + "'", str14, "_d");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "__tset_tset_hi!" + "'", str17, "__tset_tset_hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Python2" + "'", str18, "Python2");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "_\\\"\\\\\\\"ython\\\\\\\"\\\"" + "'", str20, "_\\\"\\\\\\\"ython\\\\\\\"\\\"");
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("");
        boolean boolean7 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator10, "____tset", false);
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\\\"tset_tset0Contex\\\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_" + "'", str6, "_");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_" + "'", str9, "_");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "___tse" + "'", str13, "___tse");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"tset_tset0Contex\\\\\\\"\"" + "'", str15, "\"\\\\\\\"tset_tset0Contex\\\\\\\"\"");
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("\"\\\".5.2.\\\"\"");
        org.antlr.v4.tool.Grammar grammar10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getTokenTypeAsTargetLabel(grammar10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\"\\\".5.2.\\\"\"" + "'", str9, "_\"\\\".5.2.\\\"\"");
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        int int13 = python2Target1.getSerializedATNSegmentLimit();
        int int14 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2147483647 + "'", int13 == 2147483647);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("d", false);
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getRuleFunctionContextStructName(ruleFunction8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "d" + "'", str6, "d");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        java.lang.String str14 = python2Target12.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target12.getCodeGenerator();
        java.util.Set<java.lang.String> strSet16 = python2Target12.getBadWords();
        org.antlr.v4.tool.Grammar grammar17 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator18 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target19 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator18);
        java.lang.String str21 = python2Target19.getImplicitSetLabel("hi!");
        java.lang.String str23 = python2Target19.getListLabel("");
        boolean boolean24 = python2Target19.wantsBaseListener();
        java.lang.String str26 = python2Target19.getTargetStringLiteralFromString("\"__tset\"");
        org.antlr.v4.tool.Grammar grammar27 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target29 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator28);
        java.lang.String str31 = python2Target29.getAltLabelContextStructName("\\0");
        boolean boolean32 = python2Target29.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = python2Target29.getCodeGenerator();
        int int34 = python2Target29.getSerializedATNSegmentLimit();
        java.lang.String str36 = python2Target29.getImplicitRuleLabel("");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        boolean boolean40 = python2Target39.supportsOverloadedMethods();
        boolean boolean41 = python2Target39.wantsBaseListener();
        boolean boolean42 = python2Target39.wantsBaseVisitor();
        boolean boolean43 = python2Target39.supportsOverloadedMethods();
        java.lang.String str45 = python2Target39.encodeIntAsCharEscape((int) (short) 100);
        int int46 = python2Target39.getInlineTestSetWordSize();
        java.lang.String str47 = python2Target39.getLanguage();
        java.lang.String str49 = python2Target39.getImplicitRuleLabel("_hi!");
        org.antlr.v4.tool.Grammar grammar50 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator51 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target52 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator51);
        boolean boolean53 = python2Target52.supportsOverloadedMethods();
        boolean boolean54 = python2Target52.wantsBaseListener();
        boolean boolean55 = python2Target52.wantsBaseVisitor();
        boolean boolean56 = python2Target52.supportsOverloadedMethods();
        java.lang.String str58 = python2Target52.encodeIntAsCharEscape((int) (short) 100);
        int int59 = python2Target52.getInlineTestSetWordSize();
        java.lang.String str61 = python2Target52.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Grammar grammar62 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator63 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target64 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator63);
        boolean boolean65 = python2Target64.supportsOverloadedMethods();
        boolean boolean66 = python2Target64.wantsBaseListener();
        boolean boolean67 = python2Target64.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup68 = python2Target64.getTemplates();
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target71 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator70);
        boolean boolean72 = python2Target71.supportsOverloadedMethods();
        boolean boolean73 = python2Target71.wantsBaseListener();
        boolean boolean74 = python2Target71.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar75 = null;
        int[] intArray76 = new int[] {};
        java.lang.String[] strArray77 = python2Target71.getTokenTypesAsTargetLabels(grammar75, intArray76);
        org.antlr.v4.codegen.CodeGenerator codeGenerator78 = null;
        java.lang.String str81 = python2Target71.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator78, "hi!", true);
        org.antlr.v4.tool.Grammar grammar82 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator83 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target84 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator83);
        boolean boolean85 = python2Target84.supportsOverloadedMethods();
        boolean boolean86 = python2Target84.wantsBaseListener();
        boolean boolean87 = python2Target84.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar88 = null;
        int[] intArray89 = new int[] {};
        java.lang.String[] strArray90 = python2Target84.getTokenTypesAsTargetLabels(grammar88, intArray89);
        java.lang.String[] strArray91 = python2Target71.getTokenTypesAsTargetLabels(grammar82, intArray89);
        java.lang.String[] strArray92 = python2Target64.getTokenTypesAsTargetLabels(grammar69, intArray89);
        java.lang.String[] strArray93 = python2Target52.getTokenTypesAsTargetLabels(grammar62, intArray89);
        java.lang.String[] strArray94 = python2Target39.getTokenTypesAsTargetLabels(grammar50, intArray89);
        java.lang.String[] strArray95 = python2Target29.getTokenTypesAsTargetLabels(grammar37, intArray89);
        java.lang.String[] strArray96 = python2Target19.getTokenTypesAsTargetLabels(grammar27, intArray89);
        java.lang.String[] strArray97 = python2Target12.getTokenTypesAsTargetLabels(grammar17, intArray89);
        java.lang.String[] strArray98 = python2Target1.getTokenTypesAsTargetLabels(grammar10, intArray89);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_tsethi!" + "'", str14, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "_tsethi!" + "'", str21, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "\"\\\"__tset\\\"\"" + "'", str26, "\"\\\"__tset\\\"\"");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\\0Context" + "'", str31, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(codeGenerator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2147483647 + "'", int34 == 2147483647);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "_" + "'", str36, "_");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "d" + "'", str45, "d");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Python2" + "'", str47, "Python2");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "__hi!" + "'", str49, "__hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "d" + "'", str58, "d");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 64 + "'", int59 == 64);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\\n" + "'", str61, "\\n");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(sTGroup68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "\"i\"" + "'", str81, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[]");
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(strArray96);
        org.junit.Assert.assertNotNull(strArray97);
        org.junit.Assert.assertNotNull(strArray98);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getLoopLabel(grammarAST10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getVersion();
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.getListLabel("Python2");
        java.lang.String str11 = python2Target1.getVersion();
        java.lang.String str13 = python2Target1.encodeIntAsCharEscape((int) '#');
        int int14 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str15 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        java.lang.String str18 = python2Target1.getImplicitRuleLabel("____\"\\\"____tset\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#" + "'", str13, "#");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 64 + "'", int14 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "_____\"\\\"____tset\\\"\"Context" + "'", str18, "_____\"\\\"____tset\\\"\"Context");
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("@");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("_tset_tset\\0Context");
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        java.lang.String str16 = python2Target1.encodeIntAsCharEscape((int) 'a');
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "Python2Context", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@Context" + "'", str11, "@Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__tset_tset\\0Context" + "'", str13, "__tset_tset\\0Context");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "a" + "'", str16, "a");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ython2Contex" + "'", str20, "ython2Contex");
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"Contex\"");
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("\"_tsethi!\"Context");
        java.lang.String str12 = python2Target1.getImplicitSetLabel("tset_tset\\\"_tsetContext\\\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tsethi!" + "'", str6, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"Contex\\\"\"" + "'", str8, "\"\\\"Contex\\\"\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\"_tsethi!\"Context" + "'", str10, "_\"_tsethi!\"Context");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tsettset_tset\\\"_tsetContext\\\"" + "'", str12, "_tsettset_tset\\\"_tsetContext\\\"");
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getElementListName("\"tset_tset\\\"tset0Contex\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.tool.ast.GrammarAST grammarAST6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python2Target1.getLoopCounter(grammarAST6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tset\\0Context");
        java.lang.String str10 = python2Target1.getListLabel("\"_tsethi!\"");
        java.lang.String str11 = python2Target1.getLanguage();
        java.lang.String str13 = python2Target1.getImplicitSetLabel("\"__tset_hi!\"");
        java.lang.String str15 = python2Target1.encodeIntAsCharEscape((int) (byte) 0);
        int int16 = python2Target1.getInlineTestSetWordSize();
        boolean boolean17 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\\\\0Context\"" + "'", str8, "\"_tset\\\\0Context\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsethi!\"" + "'", str10, "\"_tsethi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"__tset_hi!\"" + "'", str13, "_tset\"__tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\0" + "'", str15, "\\0");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python2Target1.getCodeGenerator();
        int int4 = python2Target1.getInlineTestSetWordSize();
        int int5 = python2Target1.getInlineTestSetWordSize();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getLanguage();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("tset_tset0Contex");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "d" + "'", str9, "d");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Tset_tset0ContexContext" + "'", str11, "Tset_tset0ContexContext");
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset");
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_\"\\\\0Context\"", true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset\"" + "'", str7, "\"__tset\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_\\\"\\\\\\\\0Context\\\"\"" + "'", str12, "\"_\\\"\\\\\\\\0Context\\\"\"");
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("@");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("_tset_tset\\0Context");
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        org.antlr.v4.codegen.CodeGenerator codeGenerator15 = python2Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getElementName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@Context" + "'", str11, "@Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__tset_tset\\0Context" + "'", str13, "__tset_tset\\0Context");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNull(codeGenerator15);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("_tset\\\"@\\\"Context");
        java.lang.String str10 = python2Target1.getLanguage();
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "_tset_tset\"@\"Context", false);
        java.lang.String str17 = python2Target1.getAltLabelContextStructName("_\\\\\\\"\\\\\\\\\\\\\\\".5.2.\\\\\\\\\\\\\\\"\\\\\\\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "__tset\\\"@\\\"Context" + "'", str9, "__tset\\\"@\\\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tset_tset\\\"@\\\"Contex" + "'", str15, "tset_tset\\\"@\\\"Contex");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\\\\\\\"\\\\\\\\\\\\\\\".5.2.\\\\\\\\\\\\\\\"\\\\\\\"Context" + "'", str17, "_\\\\\\\"\\\\\\\\\\\\\\\".5.2.\\\\\\\\\\\\\\\"\\\\\\\"Context");
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        boolean boolean4 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.ast.GrammarAST grammarAST5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python2Target1.getLoopCounter(grammarAST5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str7 = python2Target1.getVersion();
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.wantsBaseListener();
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        boolean boolean11 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\"\\\"tset_tset0Contex\\\"\"", true);
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "4.5.2.1" + "'", str7, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"tset_tset0Contex\\\"\"" + "'", str15, "\"\\\"tset_tset0Contex\\\"\"");
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        int int3 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str4 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("_tsetPython2");
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("_\\\"\\\\\\\".5.2.\\\\\\\"\\\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getLoopLabel(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2147483647 + "'", int3 == 2147483647);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"_tsetPython2\"" + "'", str6, "\"_tsetPython2\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_\\\\\\\"\\\\\\\\\\\\\\\".5.2.\\\\\\\\\\\\\\\"\\\\\\\"" + "'", str9, "_\\\\\\\"\\\\\\\\\\\\\\\".5.2.\\\\\\\\\\\\\\\"\\\\\\\"");
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape(10);
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("_tset");
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target14.getTemplates();
        int int19 = python2Target14.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = null;
        java.lang.String str23 = python2Target14.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator20, "4.5.2.1", true);
        java.lang.String str25 = python2Target14.getImplicitSetLabel("\\0Context");
        boolean boolean26 = python2Target14.templatesExist();
        java.lang.String str28 = python2Target14.encodeIntAsCharEscape((int) 'a');
        java.lang.String str31 = python2Target14.getTargetStringLiteralFromString("", true);
        org.antlr.v4.tool.Grammar grammar32 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator33 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target34 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator33);
        boolean boolean35 = python2Target34.supportsOverloadedMethods();
        boolean boolean36 = python2Target34.wantsBaseListener();
        boolean boolean37 = python2Target34.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup38 = python2Target34.getTemplates();
        org.antlr.v4.tool.Grammar grammar39 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target41 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator40);
        boolean boolean42 = python2Target41.supportsOverloadedMethods();
        boolean boolean43 = python2Target41.wantsBaseListener();
        boolean boolean44 = python2Target41.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar45 = null;
        int[] intArray46 = new int[] {};
        java.lang.String[] strArray47 = python2Target41.getTokenTypesAsTargetLabels(grammar45, intArray46);
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        java.lang.String str51 = python2Target41.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator48, "hi!", true);
        org.antlr.v4.tool.Grammar grammar52 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator53 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target54 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator53);
        boolean boolean55 = python2Target54.supportsOverloadedMethods();
        boolean boolean56 = python2Target54.wantsBaseListener();
        boolean boolean57 = python2Target54.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar58 = null;
        int[] intArray59 = new int[] {};
        java.lang.String[] strArray60 = python2Target54.getTokenTypesAsTargetLabels(grammar58, intArray59);
        java.lang.String[] strArray61 = python2Target41.getTokenTypesAsTargetLabels(grammar52, intArray59);
        java.lang.String[] strArray62 = python2Target34.getTokenTypesAsTargetLabels(grammar39, intArray59);
        java.lang.String[] strArray63 = python2Target14.getTokenTypesAsTargetLabels(grammar32, intArray59);
        java.lang.String[] strArray64 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray59);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset" + "'", str10, "__tset");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\".5.2.\"" + "'", str23, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "_tset\\0Context" + "'", str25, "_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "a" + "'", str28, "a");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "\"\"" + "'", str31, "\"\"");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(sTGroup38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "\"i\"" + "'", str51, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"_tset\\\\0Context\"", false);
        int int16 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"_tset\\\\\\\\0Context\\\"" + "'", str15, "\\\"_tset\\\\\\\\0Context\\\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_hi!");
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        java.lang.String str13 = python2Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__hi!" + "'", str11, "__hi!");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "4.5.2.1" + "'", str13, "4.5.2.1");
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        java.lang.String str3 = python2Target1.getVersion();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        int int6 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Rule rule7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getRuleFunctionContextStructName(rule7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getVersion();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("__tset_hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "_tsetPython2", false);
        boolean boolean13 = python2Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"__tset_hi!\"" + "'", str8, "\"__tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tsetPython" + "'", str12, "tsetPython");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "4.5.2.1", true);
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\\0Context");
        boolean boolean13 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = null;
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator14, "__tsetContex", false);
        boolean boolean18 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\".5.2.\"" + "'", str10, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\0Context" + "'", str12, "_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tsetConte" + "'", str17, "_tsetConte");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.tool.Grammar grammar6 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target8 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator7);
        java.lang.String str10 = python2Target8.getAltLabelContextStructName("\\0");
        boolean boolean11 = python2Target8.wantsBaseListener();
        java.lang.String str13 = python2Target8.getImplicitRuleLabel("___tset");
        java.lang.String str15 = python2Target8.getTargetStringLiteralFromString("@");
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target8.getTemplates();
        int int17 = python2Target8.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar18 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target20 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator19);
        boolean boolean21 = python2Target20.supportsOverloadedMethods();
        boolean boolean22 = python2Target20.wantsBaseListener();
        boolean boolean23 = python2Target20.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup24 = python2Target20.getTemplates();
        boolean boolean25 = python2Target20.templatesExist();
        java.lang.String str27 = python2Target20.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator28 = python2Target20.getCodeGenerator();
        java.lang.String str29 = python2Target20.getVersion();
        boolean boolean30 = python2Target20.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        boolean boolean34 = python2Target33.supportsOverloadedMethods();
        boolean boolean35 = python2Target33.wantsBaseListener();
        boolean boolean36 = python2Target33.wantsBaseVisitor();
        boolean boolean37 = python2Target33.supportsOverloadedMethods();
        java.lang.String str39 = python2Target33.encodeIntAsCharEscape((int) (short) 100);
        int int40 = python2Target33.getInlineTestSetWordSize();
        java.lang.String str41 = python2Target33.getLanguage();
        java.lang.String str43 = python2Target33.getImplicitRuleLabel("_hi!");
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target46 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator45);
        boolean boolean47 = python2Target46.supportsOverloadedMethods();
        boolean boolean48 = python2Target46.wantsBaseListener();
        boolean boolean49 = python2Target46.wantsBaseVisitor();
        boolean boolean50 = python2Target46.supportsOverloadedMethods();
        java.lang.String str52 = python2Target46.encodeIntAsCharEscape((int) (short) 100);
        int int53 = python2Target46.getInlineTestSetWordSize();
        java.lang.String str55 = python2Target46.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target58 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator57);
        boolean boolean59 = python2Target58.supportsOverloadedMethods();
        boolean boolean60 = python2Target58.wantsBaseListener();
        boolean boolean61 = python2Target58.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup62 = python2Target58.getTemplates();
        org.antlr.v4.tool.Grammar grammar63 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator64 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target65 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator64);
        boolean boolean66 = python2Target65.supportsOverloadedMethods();
        boolean boolean67 = python2Target65.wantsBaseListener();
        boolean boolean68 = python2Target65.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar69 = null;
        int[] intArray70 = new int[] {};
        java.lang.String[] strArray71 = python2Target65.getTokenTypesAsTargetLabels(grammar69, intArray70);
        org.antlr.v4.codegen.CodeGenerator codeGenerator72 = null;
        java.lang.String str75 = python2Target65.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator72, "hi!", true);
        org.antlr.v4.tool.Grammar grammar76 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator77 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target78 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator77);
        boolean boolean79 = python2Target78.supportsOverloadedMethods();
        boolean boolean80 = python2Target78.wantsBaseListener();
        boolean boolean81 = python2Target78.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar82 = null;
        int[] intArray83 = new int[] {};
        java.lang.String[] strArray84 = python2Target78.getTokenTypesAsTargetLabels(grammar82, intArray83);
        java.lang.String[] strArray85 = python2Target65.getTokenTypesAsTargetLabels(grammar76, intArray83);
        java.lang.String[] strArray86 = python2Target58.getTokenTypesAsTargetLabels(grammar63, intArray83);
        java.lang.String[] strArray87 = python2Target46.getTokenTypesAsTargetLabels(grammar56, intArray83);
        java.lang.String[] strArray88 = python2Target33.getTokenTypesAsTargetLabels(grammar44, intArray83);
        java.lang.String[] strArray89 = python2Target20.getTokenTypesAsTargetLabels(grammar31, intArray83);
        java.lang.String[] strArray90 = python2Target8.getTokenTypesAsTargetLabels(grammar18, intArray83);
        java.lang.String[] strArray91 = python2Target1.getTokenTypesAsTargetLabels(grammar6, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str93 = python2Target1.getElementListName("\"__\\\"__tset\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\0Context" + "'", str10, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "____tset" + "'", str13, "____tset");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"@\"" + "'", str15, "\"@\"");
        org.junit.Assert.assertNotNull(sTGroup16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(sTGroup24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "\"_tsetContext\"" + "'", str27, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "d" + "'", str39, "d");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 64 + "'", int40 == 64);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Python2" + "'", str41, "Python2");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "__hi!" + "'", str43, "__hi!");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "d" + "'", str52, "d");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 64 + "'", int53 == 64);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\\n" + "'", str55, "\\n");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(sTGroup62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[]");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "\"i\"" + "'", str75, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strArray91);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        boolean boolean4 = python2Target1.templatesExist();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = python2Target1.getRuleFunctionContextStructName(ruleFunction6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("@");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("_tset_tset\\0Context");
        org.stringtemplate.v4.STGroup sTGroup14 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet15 = python2Target1.getBadWords();
        boolean boolean16 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "_tset\\0", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet22 = python2Target1.getBadWords();
        java.lang.String str24 = python2Target1.getTargetStringLiteralFromString("_tset\"_tset\\\"@\\\"Context\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@Context" + "'", str11, "@Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__tset_tset\\0Context" + "'", str13, "__tset_tset\\0Context");
        org.junit.Assert.assertNotNull(sTGroup14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tset0" + "'", str20, "tset0");
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"_tset\\\"_tset\\\\\\\"@\\\\\\\"Context\\\"\"" + "'", str24, "\"_tset\\\"_tset\\\\\\\"@\\\\\\\"Context\\\"\"");
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertNotNull(sTGroup8);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        java.lang.String str10 = python2Target1.getImplicitSetLabel("_tsetPython2");
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\"\\\" \\\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset\"" + "'", str7, "\"__tset\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset_tsetPython2" + "'", str10, "_tset_tsetPython2");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\"\\\" \\\"\"" + "'", str12, "_tset\"\\\" \\\"\"");
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_tset_hi!");
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        java.lang.String str12 = python2Target1.getLanguage();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("_d", true);
        java.lang.String str17 = python2Target1.getListLabel("_tset\"_tsetPython2\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python2Target1.encodeIntAsCharEscape((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot encode the specified value: -1");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset_hi!\"" + "'", str10, "\"_tset_hi!\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Python2" + "'", str12, "Python2");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"_d\"" + "'", str15, "\"_d\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset\"_tsetPython2\"" + "'", str17, "_tset\"_tsetPython2\"");
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getLanguage();
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("__hi!", false);
        java.lang.String str16 = python2Target1.getListLabel("tset_tset\\\"@\\\"Contex");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "__hi!" + "'", str14, "__hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tset_tset\\\"@\\\"Contex" + "'", str16, "tset_tset\\\"@\\\"Contex");
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str5 = python2Target1.getAltLabelContextStructName("\"i\"");
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\"____tset\"", true);
        boolean boolean10 = python2Target1.templatesExist();
        int int11 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"i\"Context" + "'", str5, "\"i\"Context");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\"____tset\\\"\"" + "'", str9, "\"\\\"____tset\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("hi!");
        org.stringtemplate.v4.STGroup sTGroup11 = python2Target1.getTemplates();
        java.lang.String str13 = python2Target1.getImplicitSetLabel("");
        java.lang.String str15 = python2Target1.getListLabel("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_4.5.2.1" + "'", str8, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Hi!Context" + "'", str10, "Hi!Context");
        org.junit.Assert.assertNotNull(sTGroup11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset" + "'", str13, "_tset");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("\"_\\\\\\\"\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\"\\\\\\\"\"");
        java.lang.String str17 = python2Target1.getVersion();
        java.lang.String str19 = python2Target1.getImplicitSetLabel("\"@\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"" + "'", str16, "\"\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "_tset\"@\"" + "'", str19, "_tset\"@\"");
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("_d");
        int int9 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__d" + "'", str8, "__d");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertNull(codeGenerator10);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        java.util.Set<java.lang.String> strSet22 = python2Target1.getBadWords();
        org.antlr.v4.codegen.model.RuleFunction ruleFunction23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = python2Target1.getRuleFunctionContextStructName(ruleFunction23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_hi!");
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("_4.5.2.1", false);
        int int15 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str17 = python2Target1.encodeIntAsCharEscape((int) (byte) 0);
        java.util.Set<java.lang.String> strSet18 = python2Target1.getBadWords();
        org.antlr.v4.codegen.CodeGenerator codeGenerator19 = null;
        java.lang.String str22 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator19, "_tset\\0Context", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__hi!" + "'", str11, "__hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_4.5.2.1" + "'", str14, "_4.5.2.1");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\\0" + "'", str17, "\\0");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tset0Contex" + "'", str22, "tset0Contex");
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\"\\\"i\\\"\"", false);
        java.lang.String str14 = python2Target1.getListLabel("___tse");
        boolean boolean15 = python2Target1.wantsBaseListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getElementName("_tset_tset\\\"_tset_hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"\\\\\\\"i\\\\\\\"\\\"" + "'", str12, "\\\"\\\\\\\"i\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "___tse" + "'", str14, "___tse");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getImplicitRuleLabel("_tset\\\"@\\\"Context");
        java.lang.String str10 = python2Target1.getLanguage();
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str13 = python2Target1.getAltLabelContextStructName("_tset");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "__tset\\\"@\\\"Context" + "'", str9, "__tset\\\"@\\\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tsetContext" + "'", str13, "_tsetContext");
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        java.lang.String str3 = python2Target1.getVersion();
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape(64);
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        java.lang.Class<?> wildcardClass7 = python2Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean11 = python2Target1.templatesExist();
        java.lang.String str13 = python2Target1.encodeIntAsCharEscape((int) (byte) 100);
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\\\\\"Python2\\\\\\\"\\\"\"", true);
        java.lang.String str19 = python2Target1.encodeIntAsCharEscape(1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "d" + "'", str13, "d");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python2\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"" + "'", str17, "\"\\\"\\\\\\\"\\\\\\\\\\\\\\\"Python2\\\\\\\\\\\\\\\"\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\1" + "'", str19, "\\1");
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        int int9 = python2Target1.getSerializedATNSegmentLimit();
        int int10 = python2Target1.getInlineTestSetWordSize();
        boolean boolean11 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2147483647 + "'", int9 == 2147483647);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("Python2", true);
        int int6 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.tool.Grammar grammar7 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target9 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator8);
        java.lang.String str12 = python2Target9.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup13 = python2Target9.getTemplates();
        int int14 = python2Target9.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        java.lang.String str19 = python2Target17.getAltLabelContextStructName("\\0");
        boolean boolean20 = python2Target17.wantsBaseListener();
        java.lang.String str22 = python2Target17.getImplicitRuleLabel("___tset");
        java.lang.String str24 = python2Target17.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet25 = python2Target17.getBadWords();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        boolean boolean29 = python2Target28.supportsOverloadedMethods();
        boolean boolean30 = python2Target28.wantsBaseListener();
        boolean boolean31 = python2Target28.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target28.getTemplates();
        boolean boolean33 = python2Target28.templatesExist();
        java.lang.String str35 = python2Target28.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = python2Target28.getCodeGenerator();
        boolean boolean37 = python2Target28.templatesExist();
        org.antlr.v4.tool.Grammar grammar38 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator39 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target40 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator39);
        boolean boolean41 = python2Target40.supportsOverloadedMethods();
        boolean boolean42 = python2Target40.wantsBaseListener();
        boolean boolean43 = python2Target40.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar44 = null;
        int[] intArray45 = new int[] {};
        java.lang.String[] strArray46 = python2Target40.getTokenTypesAsTargetLabels(grammar44, intArray45);
        org.antlr.v4.codegen.CodeGenerator codeGenerator47 = null;
        java.lang.String str50 = python2Target40.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator47, "hi!", true);
        org.antlr.v4.tool.Grammar grammar51 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target53 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator52);
        boolean boolean54 = python2Target53.supportsOverloadedMethods();
        boolean boolean55 = python2Target53.wantsBaseListener();
        boolean boolean56 = python2Target53.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar57 = null;
        int[] intArray58 = new int[] {};
        java.lang.String[] strArray59 = python2Target53.getTokenTypesAsTargetLabels(grammar57, intArray58);
        java.lang.String[] strArray60 = python2Target40.getTokenTypesAsTargetLabels(grammar51, intArray58);
        java.lang.String[] strArray61 = python2Target28.getTokenTypesAsTargetLabels(grammar38, intArray58);
        java.lang.String[] strArray62 = python2Target17.getTokenTypesAsTargetLabels(grammar26, intArray58);
        java.lang.String[] strArray63 = python2Target9.getTokenTypesAsTargetLabels(grammar15, intArray58);
        java.lang.String[] strArray64 = python2Target1.getTokenTypesAsTargetLabels(grammar7, intArray58);
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST66 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"Python2\"" + "'", str5, "\"Python2\"");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(sTGroup13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "\\0Context" + "'", str19, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "____tset" + "'", str22, "____tset");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"@\"" + "'", str24, "\"@\"");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\"_tsetContext\"" + "'", str35, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"i\"" + "'", str50, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNull(codeGenerator65);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("\\64");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = null;
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator9, "\\\\\\\"@\\\\\\\"", true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\\64" + "'", str8, "_tset\\64");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\\\\\"@\\\\\\\"\"" + "'", str12, "\"\\\\\\\"@\\\\\\\"\"");
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        java.lang.String str5 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"i\"");
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        boolean boolean11 = python2Target1.templatesExist();
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_4.5.2.1" + "'", str5, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"i\\\"\"" + "'", str8, "\"\\\"i\\\"\"");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.String str7 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"@\\\"" + "'", str6, "\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getTargetStringLiteralFromString("_tsethi!");
        java.lang.String str7 = python2Target1.getAltLabelContextStructName("__tset_hi!");
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        boolean boolean12 = python2Target11.supportsOverloadedMethods();
        boolean boolean13 = python2Target11.wantsBaseListener();
        boolean boolean14 = python2Target11.wantsBaseVisitor();
        boolean boolean15 = python2Target11.supportsOverloadedMethods();
        java.lang.String str17 = python2Target11.encodeIntAsCharEscape((int) (short) 100);
        int int18 = python2Target11.getInlineTestSetWordSize();
        java.lang.String str19 = python2Target11.getLanguage();
        java.lang.String str21 = python2Target11.getImplicitRuleLabel("_hi!");
        org.antlr.v4.tool.Grammar grammar22 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target24 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator23);
        boolean boolean25 = python2Target24.supportsOverloadedMethods();
        boolean boolean26 = python2Target24.wantsBaseListener();
        boolean boolean27 = python2Target24.wantsBaseVisitor();
        boolean boolean28 = python2Target24.supportsOverloadedMethods();
        java.lang.String str30 = python2Target24.encodeIntAsCharEscape((int) (short) 100);
        int int31 = python2Target24.getInlineTestSetWordSize();
        java.lang.String str33 = python2Target24.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        boolean boolean37 = python2Target36.supportsOverloadedMethods();
        boolean boolean38 = python2Target36.wantsBaseListener();
        boolean boolean39 = python2Target36.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup40 = python2Target36.getTemplates();
        org.antlr.v4.tool.Grammar grammar41 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator42 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target43 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator42);
        boolean boolean44 = python2Target43.supportsOverloadedMethods();
        boolean boolean45 = python2Target43.wantsBaseListener();
        boolean boolean46 = python2Target43.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar47 = null;
        int[] intArray48 = new int[] {};
        java.lang.String[] strArray49 = python2Target43.getTokenTypesAsTargetLabels(grammar47, intArray48);
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        java.lang.String str53 = python2Target43.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator50, "hi!", true);
        org.antlr.v4.tool.Grammar grammar54 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target56 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator55);
        boolean boolean57 = python2Target56.supportsOverloadedMethods();
        boolean boolean58 = python2Target56.wantsBaseListener();
        boolean boolean59 = python2Target56.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar60 = null;
        int[] intArray61 = new int[] {};
        java.lang.String[] strArray62 = python2Target56.getTokenTypesAsTargetLabels(grammar60, intArray61);
        java.lang.String[] strArray63 = python2Target43.getTokenTypesAsTargetLabels(grammar54, intArray61);
        java.lang.String[] strArray64 = python2Target36.getTokenTypesAsTargetLabels(grammar41, intArray61);
        java.lang.String[] strArray65 = python2Target24.getTokenTypesAsTargetLabels(grammar34, intArray61);
        java.lang.String[] strArray66 = python2Target11.getTokenTypesAsTargetLabels(grammar22, intArray61);
        java.lang.String[] strArray67 = python2Target1.getTokenTypesAsTargetLabels(grammar9, intArray61);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = python2Target1.getImplicitTokenLabel("_tset\"4.5.2.1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"_tsethi!\"" + "'", str5, "\"_tsethi!\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "__tset_hi!Context" + "'", str7, "__tset_hi!Context");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "d" + "'", str17, "d");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 64 + "'", int18 == 64);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "__hi!" + "'", str21, "__hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "d" + "'", str30, "d");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 64 + "'", int31 == 64);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\\n" + "'", str33, "\\n");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(sTGroup40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"i\"" + "'", str53, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape(64);
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getLoopCounter(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str9, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "@" + "'", str11, "@");
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_hi!");
        boolean boolean12 = python2Target1.supportsOverloadedMethods();
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getTokenTypeAsTargetLabel(grammar13, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__hi!" + "'", str11, "__hi!");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        java.lang.String str3 = python2Target1.getVersion();
        java.lang.String str5 = python2Target1.encodeIntAsCharEscape(64);
        int int6 = python2Target1.getInlineTestSetWordSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = python2Target1.getElementListName("\"\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"ContextContex\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "@" + "'", str5, "@");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 64 + "'", int6 == 64);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\"\\\"i\\\"\"", false);
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("\"\\\"i\\\"Context\"Context");
        int int15 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str16 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"\\\\\\\"i\\\\\\\"\\\"" + "'", str12, "\\\"\\\\\\\"i\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"i\\\"Context\"ContextContext" + "'", str14, "\"\\\"i\\\"Context\"ContextContext");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Python2" + "'", str16, "Python2");
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("_hi!");
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        boolean boolean18 = python2Target14.supportsOverloadedMethods();
        java.lang.String str20 = python2Target14.encodeIntAsCharEscape((int) (short) 100);
        int int21 = python2Target14.getInlineTestSetWordSize();
        java.lang.String str23 = python2Target14.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        boolean boolean27 = python2Target26.supportsOverloadedMethods();
        boolean boolean28 = python2Target26.wantsBaseListener();
        boolean boolean29 = python2Target26.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup30 = python2Target26.getTemplates();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        boolean boolean34 = python2Target33.supportsOverloadedMethods();
        boolean boolean35 = python2Target33.wantsBaseListener();
        boolean boolean36 = python2Target33.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar37 = null;
        int[] intArray38 = new int[] {};
        java.lang.String[] strArray39 = python2Target33.getTokenTypesAsTargetLabels(grammar37, intArray38);
        org.antlr.v4.codegen.CodeGenerator codeGenerator40 = null;
        java.lang.String str43 = python2Target33.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator40, "hi!", true);
        org.antlr.v4.tool.Grammar grammar44 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator45 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target46 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator45);
        boolean boolean47 = python2Target46.supportsOverloadedMethods();
        boolean boolean48 = python2Target46.wantsBaseListener();
        boolean boolean49 = python2Target46.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar50 = null;
        int[] intArray51 = new int[] {};
        java.lang.String[] strArray52 = python2Target46.getTokenTypesAsTargetLabels(grammar50, intArray51);
        java.lang.String[] strArray53 = python2Target33.getTokenTypesAsTargetLabels(grammar44, intArray51);
        java.lang.String[] strArray54 = python2Target26.getTokenTypesAsTargetLabels(grammar31, intArray51);
        java.lang.String[] strArray55 = python2Target14.getTokenTypesAsTargetLabels(grammar24, intArray51);
        java.lang.String[] strArray56 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray51);
        boolean boolean57 = python2Target1.templatesExist();
        boolean boolean58 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str61 = python2Target1.getTokenTypeAsTargetLabel(grammar59, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "__hi!" + "'", str11, "__hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "d" + "'", str20, "d");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "\\n" + "'", str23, "\\n");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(sTGroup30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"i\"" + "'", str43, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        java.lang.String str13 = python2Target1.getImplicitSetLabel("\"_tset\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"_tset\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"" + "'", str13, "_tset\"_tset\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"");
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("\\\"\\\\\\\"i\\\\\\\"\\\"Context");
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"\\\".5.2.\\\"\\\"Contex\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_\\\"\\\\\\\"i\\\\\\\"\\\"Context" + "'", str10, "_\\\"\\\\\\\"i\\\\\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"\\\\\\\".5.2.\\\\\\\"\\\\\\\"Contex\\\"" + "'", str13, "\\\"\\\\\\\".5.2.\\\\\\\"\\\\\\\"Contex\\\"");
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target1.getCodeGenerator();
        org.antlr.v4.tool.ast.GrammarAST grammarAST15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getLoopCounter(grammarAST15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_4.5.2.1Context" + "'", str11, "_4.5.2.1Context");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(codeGenerator14);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        int int11 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"", false);
        int int16 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("__\\\"\\\\\\\"____tset\\\\\\\"\\\"Context");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"" + "'", str15, "\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 64 + "'", int16 == 64);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\"__\\\\\\\"\\\\\\\\\\\\\\\"____tset\\\\\\\\\\\\\\\"\\\\\\\"Context\"" + "'", str18, "\"__\\\\\\\"\\\\\\\\\\\\\\\"____tset\\\\\\\\\\\\\\\"\\\\\\\"Context\"");
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape(10);
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("\\64");
        java.lang.String str13 = python2Target1.getAltLabelContextStructName("___tse");
        java.lang.String str15 = python2Target1.getImplicitRuleLabel("_tset\\\"@\\\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\\64" + "'", str11, "_\\64");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "___tseContext" + "'", str13, "___tseContext");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "__tset\\\"@\\\"" + "'", str15, "__tset\\\"@\\\"");
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        org.stringtemplate.v4.STGroup sTGroup7 = python2Target1.getTemplates();
        java.lang.String str8 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertNotNull(sTGroup7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "4.5.2.1" + "'", str8, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup9);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str5 = python2Target1.getAltLabelContextStructName("\"i\"");
        java.lang.String str6 = python2Target1.getVersion();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"i\"Context" + "'", str5, "\"i\"Context");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("@");
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        int int12 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "@Context" + "'", str10, "@Context");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 64 + "'", int12 == 64);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("__\"\\\"____tset\\\"\"");
        java.lang.String str7 = python2Target1.getLanguage();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset__\"\\\"____tset\\\"\"" + "'", str6, "_tset__\"\\\"____tset\\\"\"");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        java.util.Set<java.lang.String> strSet11 = python2Target1.getBadWords();
        java.lang.String str13 = python2Target1.getListLabel("\"tse\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"tse\"" + "'", str13, "\"tse\"");
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        boolean boolean3 = python2Target1.wantsBaseListener();
        java.lang.String str4 = python2Target1.getLanguage();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("____tset");
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Python2" + "'", str4, "Python2");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tset____tset" + "'", str6, "_tset____tset");
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = null;
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator7, "4.5.2.1", true);
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\\0Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = python2Target1.getCodeGenerator();
        boolean boolean14 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\".5.2.\"" + "'", str10, "\".5.2.\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\\0Context" + "'", str12, "_tset\\0Context");
        org.junit.Assert.assertNull(codeGenerator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("_4.5.2.1Context");
        boolean boolean10 = python2Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = python2Target1.getElementName("\"_\\\"ython\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_4.5.2.1ContextContext" + "'", str9, "_4.5.2.1ContextContext");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape(10);
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.getImplicitRuleLabel("\\64");
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("\\\"\\\\\\\"__tset_tset\\\\\\\\\\\\\\\\0Context\\\\\\\"\\\"Context");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_\\64" + "'", str11, "_\\64");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\\\"\\\\\\\"__tset_tset\\\\\\\\\\\\\\\\0Context\\\\\\\"\\\"Context" + "'", str13, "_\\\"\\\\\\\"__tset_tset\\\\\\\\\\\\\\\\0Context\\\\\\\"\\\"Context");
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getLanguage();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("tset_tset0Contex");
        boolean boolean14 = python2Target1.wantsBaseListener();
        java.lang.Class<?> wildcardClass15 = python2Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"tset_tset0Contex\"" + "'", str13, "\"tset_tset0Contex\"");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        boolean boolean5 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getTokenTypeAsTargetLabel(grammar7, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape(10);
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("_tset");
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        boolean boolean12 = python2Target1.wantsBaseVisitor();
        boolean boolean13 = python2Target1.wantsBaseListener();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"tset_tset_hi\"");
        java.lang.String str17 = python2Target1.getAltLabelContextStructName("\"_tset__tset\\\\\\\"@\\\\\\\"ContextContext\"");
        java.lang.String str19 = python2Target1.encodeIntAsCharEscape((int) 'a');
        boolean boolean20 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Rule rule21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = python2Target1.getRuleFunctionContextStructName(rule21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset" + "'", str10, "__tset");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"tset_tset_hi\\\"\"" + "'", str15, "\"\\\"tset_tset_hi\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\"_tset__tset\\\\\\\"@\\\\\\\"ContextContext\"Context" + "'", str17, "\"_tset__tset\\\\\\\"@\\\\\\\"ContextContext\"Context");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "a" + "'", str19, "a");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_hi!");
        java.lang.String str14 = python2Target1.getImplicitRuleLabel("d");
        java.lang.String str17 = python2Target1.getTargetStringLiteralFromString("_\"\\\".5.2.\\\"\"", false);
        boolean boolean18 = python2Target1.supportsOverloadedMethods();
        java.lang.String str19 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator20 = python2Target1.getCodeGenerator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_hi!" + "'", str12, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_d" + "'", str14, "_d");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_\\\"\\\\\\\".5.2.\\\\\\\"\\\"" + "'", str17, "_\\\"\\\\\\\".5.2.\\\\\\\"\\\"");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertNull(codeGenerator20);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("_tset\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getRuleFunctionContextStructName(ruleFunction13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"Context" + "'", str12, "_tset\"\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"Context\"Context");
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.wantsBaseListener();
        boolean boolean8 = python2Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        boolean boolean12 = python2Target11.supportsOverloadedMethods();
        boolean boolean13 = python2Target11.templatesExist();
        java.util.Set<java.lang.String> strSet14 = python2Target11.getBadWords();
        java.lang.String str17 = python2Target11.getTargetStringLiteralFromString("", false);
        boolean boolean18 = python2Target11.templatesExist();
        java.lang.String str19 = python2Target11.getLanguage();
        java.lang.String str20 = python2Target11.getLanguage();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String str26 = python2Target23.getTargetStringLiteralFromString("", false);
        boolean boolean27 = python2Target23.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet28 = python2Target23.getBadWords();
        java.lang.String str29 = python2Target23.getVersion();
        int int30 = python2Target23.getInlineTestSetWordSize();
        java.lang.String str32 = python2Target23.getListLabel("Python2");
        java.lang.String str33 = python2Target23.getVersion();
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target23.getTemplates();
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        boolean boolean38 = python2Target37.supportsOverloadedMethods();
        boolean boolean39 = python2Target37.wantsBaseListener();
        boolean boolean40 = python2Target37.wantsBaseVisitor();
        java.lang.String str42 = python2Target37.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str44 = python2Target37.getListLabel("_tset_hi!");
        java.lang.String str46 = python2Target37.getListLabel("");
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target49 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator48);
        boolean boolean50 = python2Target49.supportsOverloadedMethods();
        boolean boolean51 = python2Target49.wantsBaseListener();
        boolean boolean52 = python2Target49.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar53 = null;
        int[] intArray54 = new int[] {};
        java.lang.String[] strArray55 = python2Target49.getTokenTypesAsTargetLabels(grammar53, intArray54);
        java.lang.String[] strArray56 = python2Target37.getTokenTypesAsTargetLabels(grammar47, intArray54);
        java.lang.String[] strArray57 = python2Target23.getTokenTypesAsTargetLabels(grammar35, intArray54);
        java.lang.String[] strArray58 = python2Target11.getTokenTypesAsTargetLabels(grammar21, intArray54);
        java.lang.String[] strArray59 = python2Target1.getTokenTypesAsTargetLabels(grammar9, intArray54);
        boolean boolean60 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Python2" + "'", str32, "Python2");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_4.5.2.1" + "'", str42, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset_hi!" + "'", str44, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        boolean boolean3 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"_tsethi!\"", true);
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_tsethi!\"" + "'", str7, "\"_tsethi!\"");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getImplicitSetLabel("\\64");
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("_tsetContext");
        boolean boolean11 = python2Target1.wantsBaseVisitor();
        boolean boolean12 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = python2Target1.getTokenTypeAsTargetLabel(grammar13, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\\64" + "'", str8, "_tset\\64");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tsetContextContext" + "'", str10, "_tsetContextContext");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.wantsBaseListener();
        boolean boolean8 = python2Target1.templatesExist();
        org.antlr.v4.tool.Grammar grammar9 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target11 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator10);
        boolean boolean12 = python2Target11.supportsOverloadedMethods();
        boolean boolean13 = python2Target11.templatesExist();
        java.util.Set<java.lang.String> strSet14 = python2Target11.getBadWords();
        java.lang.String str17 = python2Target11.getTargetStringLiteralFromString("", false);
        boolean boolean18 = python2Target11.templatesExist();
        java.lang.String str19 = python2Target11.getLanguage();
        java.lang.String str20 = python2Target11.getLanguage();
        org.antlr.v4.tool.Grammar grammar21 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator22 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target23 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator22);
        java.lang.String str26 = python2Target23.getTargetStringLiteralFromString("", false);
        boolean boolean27 = python2Target23.wantsBaseVisitor();
        java.util.Set<java.lang.String> strSet28 = python2Target23.getBadWords();
        java.lang.String str29 = python2Target23.getVersion();
        int int30 = python2Target23.getInlineTestSetWordSize();
        java.lang.String str32 = python2Target23.getListLabel("Python2");
        java.lang.String str33 = python2Target23.getVersion();
        org.stringtemplate.v4.STGroup sTGroup34 = python2Target23.getTemplates();
        org.antlr.v4.tool.Grammar grammar35 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator36 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target37 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator36);
        boolean boolean38 = python2Target37.supportsOverloadedMethods();
        boolean boolean39 = python2Target37.wantsBaseListener();
        boolean boolean40 = python2Target37.wantsBaseVisitor();
        java.lang.String str42 = python2Target37.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str44 = python2Target37.getListLabel("_tset_hi!");
        java.lang.String str46 = python2Target37.getListLabel("");
        org.antlr.v4.tool.Grammar grammar47 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator48 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target49 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator48);
        boolean boolean50 = python2Target49.supportsOverloadedMethods();
        boolean boolean51 = python2Target49.wantsBaseListener();
        boolean boolean52 = python2Target49.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar53 = null;
        int[] intArray54 = new int[] {};
        java.lang.String[] strArray55 = python2Target49.getTokenTypesAsTargetLabels(grammar53, intArray54);
        java.lang.String[] strArray56 = python2Target37.getTokenTypesAsTargetLabels(grammar47, intArray54);
        java.lang.String[] strArray57 = python2Target23.getTokenTypesAsTargetLabels(grammar35, intArray54);
        java.lang.String[] strArray58 = python2Target11.getTokenTypesAsTargetLabels(grammar21, intArray54);
        java.lang.String[] strArray59 = python2Target1.getTokenTypesAsTargetLabels(grammar9, intArray54);
        java.lang.String str61 = python2Target1.getAltLabelContextStructName("\"_tset_tset0Conte\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator62 = null;
        java.lang.String str65 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator62, "\"\\\"_tset\\\"\"", true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Python2" + "'", str19, "Python2");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "4.5.2.1" + "'", str29, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 64 + "'", int30 == 64);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Python2" + "'", str32, "Python2");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "4.5.2.1" + "'", str33, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "_4.5.2.1" + "'", str42, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "_tset_hi!" + "'", str44, "_tset_hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "\"_tset_tset0Conte\"Context" + "'", str61, "\"_tset_tset0Conte\"Context");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "\"\\\"_tset\\\"\"" + "'", str65, "\"\\\"_tset\\\"\"");
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        java.lang.String str10 = python2Target1.getListLabel("\"_tset\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"");
        java.lang.Class<?> wildcardClass11 = python2Target1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"" + "'", str10, "\"_tset\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("\"\\\\\\\"@\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_4.5.2.1Context" + "'", str11, "_4.5.2.1Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"\\\"\\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\"\\\"\"" + "'", str13, "\"\\\"\\\\\\\\\\\\\\\"@\\\\\\\\\\\\\\\"\\\"\"");
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        boolean boolean7 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("____tset");
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) '#');
        java.lang.String str13 = python2Target1.getAltLabelContextStructName("\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"Context");
        org.antlr.v4.tool.ast.GrammarAST grammarAST14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "____tsetContext" + "'", str9, "____tsetContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#" + "'", str11, "#");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"ContextContext" + "'", str13, "\\\"tset\\\\\\\"\\\\\\\"ython\\\\\\\"\\\"ContextContext");
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        int int5 = python2Target1.getSerializedATNSegmentLimit();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        org.antlr.v4.tool.ast.GrammarAST grammarAST7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2147483647 + "'", int5 == 2147483647);
        org.junit.Assert.assertNotNull(strSet6);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("d", false);
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("_tsethi!", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "d" + "'", str6, "d");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_4.5.2.1Context" + "'", str8, "_4.5.2.1Context");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsethi!" + "'", str11, "_tsethi!");
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("hi!");
        java.lang.String str9 = python2Target1.getListLabel("_tset\\0Context");
        java.lang.String str10 = python2Target1.getVersion();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("\"tset6\"");
        java.lang.String str14 = python2Target1.encodeIntAsCharEscape((int) ' ');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_hi!" + "'", str7, "_hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "4.5.2.1" + "'", str10, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset\"tset6\"" + "'", str12, "_tset\"tset6\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + " " + "'", str14, " ");
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python2Target1.getCodeGenerator();
        int int4 = python2Target1.getInlineTestSetWordSize();
        int int5 = python2Target1.getInlineTestSetWordSize();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"hi!\"Context");
        java.lang.String str10 = python2Target1.getImplicitSetLabel("\"hi!\"");
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\\\"_tset\\\\\\\"\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
        org.antlr.v4.tool.Rule rule13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = python2Target1.getRuleFunctionContextStructName(rule13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"hi!\\\"Context\"" + "'", str8, "\"\\\"hi!\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\"hi!\"" + "'", str10, "_tset\"hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\\\\\"_tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"" + "'", str12, "\"\\\\\\\"_tset\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ython\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"\"");
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator2 = python2Target1.getCodeGenerator();
        boolean boolean3 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = null;
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator4, "\"_tsethi!\"", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        org.antlr.v4.tool.Grammar grammar10 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target12 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator11);
        boolean boolean13 = python2Target12.supportsOverloadedMethods();
        boolean boolean14 = python2Target12.wantsBaseListener();
        boolean boolean15 = python2Target12.wantsBaseVisitor();
        boolean boolean16 = python2Target12.supportsOverloadedMethods();
        java.lang.String str18 = python2Target12.encodeIntAsCharEscape((int) (short) 100);
        int int19 = python2Target12.getInlineTestSetWordSize();
        java.lang.String str20 = python2Target12.getLanguage();
        int int21 = python2Target12.getInlineTestSetWordSize();
        java.lang.String str23 = python2Target12.getImplicitSetLabel("_tset\\0Context");
        boolean boolean24 = python2Target12.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar25 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator26 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target27 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator26);
        boolean boolean28 = python2Target27.supportsOverloadedMethods();
        boolean boolean29 = python2Target27.wantsBaseListener();
        boolean boolean30 = python2Target27.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar31 = null;
        int[] intArray32 = new int[] {};
        java.lang.String[] strArray33 = python2Target27.getTokenTypesAsTargetLabels(grammar31, intArray32);
        java.lang.String[] strArray34 = python2Target12.getTokenTypesAsTargetLabels(grammar25, intArray32);
        java.lang.String[] strArray35 = python2Target1.getTokenTypesAsTargetLabels(grammar10, intArray32);
        java.lang.String str36 = python2Target1.getVersion();
        org.stringtemplate.v4.STGroup sTGroup37 = python2Target1.getTemplates();
        org.junit.Assert.assertNull(codeGenerator2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"_tsethi!\"" + "'", str7, "\"_tsethi!\"");
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "d" + "'", str18, "d");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 64 + "'", int19 == 64);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2" + "'", str20, "Python2");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 64 + "'", int21 == 64);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "_tset_tset\\0Context" + "'", str23, "_tset_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "4.5.2.1" + "'", str36, "4.5.2.1");
        org.junit.Assert.assertNotNull(sTGroup37);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        org.stringtemplate.v4.STGroup sTGroup9 = python2Target1.getTemplates();
        int int10 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar11 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target13 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator12);
        boolean boolean14 = python2Target13.supportsOverloadedMethods();
        boolean boolean15 = python2Target13.wantsBaseListener();
        boolean boolean16 = python2Target13.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup17 = python2Target13.getTemplates();
        boolean boolean18 = python2Target13.templatesExist();
        java.lang.String str20 = python2Target13.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = python2Target13.getCodeGenerator();
        java.lang.String str22 = python2Target13.getVersion();
        boolean boolean23 = python2Target13.wantsBaseListener();
        org.antlr.v4.tool.Grammar grammar24 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator25 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target26 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator25);
        boolean boolean27 = python2Target26.supportsOverloadedMethods();
        boolean boolean28 = python2Target26.wantsBaseListener();
        boolean boolean29 = python2Target26.wantsBaseVisitor();
        boolean boolean30 = python2Target26.supportsOverloadedMethods();
        java.lang.String str32 = python2Target26.encodeIntAsCharEscape((int) (short) 100);
        int int33 = python2Target26.getInlineTestSetWordSize();
        java.lang.String str34 = python2Target26.getLanguage();
        java.lang.String str36 = python2Target26.getImplicitRuleLabel("_hi!");
        org.antlr.v4.tool.Grammar grammar37 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator38 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target39 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator38);
        boolean boolean40 = python2Target39.supportsOverloadedMethods();
        boolean boolean41 = python2Target39.wantsBaseListener();
        boolean boolean42 = python2Target39.wantsBaseVisitor();
        boolean boolean43 = python2Target39.supportsOverloadedMethods();
        java.lang.String str45 = python2Target39.encodeIntAsCharEscape((int) (short) 100);
        int int46 = python2Target39.getInlineTestSetWordSize();
        java.lang.String str48 = python2Target39.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.tool.Grammar grammar49 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator50 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target51 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator50);
        boolean boolean52 = python2Target51.supportsOverloadedMethods();
        boolean boolean53 = python2Target51.wantsBaseListener();
        boolean boolean54 = python2Target51.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup55 = python2Target51.getTemplates();
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target58 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator57);
        boolean boolean59 = python2Target58.supportsOverloadedMethods();
        boolean boolean60 = python2Target58.wantsBaseListener();
        boolean boolean61 = python2Target58.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar62 = null;
        int[] intArray63 = new int[] {};
        java.lang.String[] strArray64 = python2Target58.getTokenTypesAsTargetLabels(grammar62, intArray63);
        org.antlr.v4.codegen.CodeGenerator codeGenerator65 = null;
        java.lang.String str68 = python2Target58.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator65, "hi!", true);
        org.antlr.v4.tool.Grammar grammar69 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator70 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target71 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator70);
        boolean boolean72 = python2Target71.supportsOverloadedMethods();
        boolean boolean73 = python2Target71.wantsBaseListener();
        boolean boolean74 = python2Target71.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar75 = null;
        int[] intArray76 = new int[] {};
        java.lang.String[] strArray77 = python2Target71.getTokenTypesAsTargetLabels(grammar75, intArray76);
        java.lang.String[] strArray78 = python2Target58.getTokenTypesAsTargetLabels(grammar69, intArray76);
        java.lang.String[] strArray79 = python2Target51.getTokenTypesAsTargetLabels(grammar56, intArray76);
        java.lang.String[] strArray80 = python2Target39.getTokenTypesAsTargetLabels(grammar49, intArray76);
        java.lang.String[] strArray81 = python2Target26.getTokenTypesAsTargetLabels(grammar37, intArray76);
        java.lang.String[] strArray82 = python2Target13.getTokenTypesAsTargetLabels(grammar24, intArray76);
        java.lang.String[] strArray83 = python2Target1.getTokenTypesAsTargetLabels(grammar11, intArray76);
        org.antlr.v4.tool.ast.GrammarAST grammarAST84 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean85 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(sTGroup9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2147483647 + "'", int10 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(sTGroup17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "\"_tsetContext\"" + "'", str20, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "d" + "'", str32, "d");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 64 + "'", int33 == 64);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Python2" + "'", str34, "Python2");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "__hi!" + "'", str36, "__hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "d" + "'", str45, "d");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 64 + "'", int46 == 64);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "\\n" + "'", str48, "\\n");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(sTGroup55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "\"i\"" + "'", str68, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset_hi!\"");
        java.lang.String str13 = python2Target1.getLanguage();
        java.lang.String str14 = python2Target1.getVersion();
        java.lang.String str15 = python2Target1.getVersion();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getElementName("\"_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_hi!\"Context" + "'", str12, "\"_tset_hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "4.5.2.1" + "'", str14, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "4.5.2.1" + "'", str15, "4.5.2.1");
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getImplicitRuleLabel("_tset\\0Context");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("d");
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "__tset\\0Context" + "'", str8, "__tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"d\"" + "'", str10, "\"d\"");
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.templatesExist();
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.getImplicitSetLabel("__tset\"__tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset__tset\"__tset_hi!\"" + "'", str10, "_tset__tset\"__tset_hi!\"");
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_4.5.2.1");
        java.util.Set<java.lang.String> strSet12 = python2Target1.getBadWords();
        boolean boolean13 = python2Target1.wantsBaseVisitor();
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("__4.5.2.1ContextContext");
        java.lang.String str18 = python2Target1.getTargetStringLiteralFromString("\"\\\"_\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\"\"", false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_4.5.2.1Context" + "'", str11, "_4.5.2.1Context");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"__4.5.2.1ContextContext\"" + "'", str15, "\"__4.5.2.1ContextContext\"");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\\\"\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\"\\\"" + "'", str18, "\\\"\\\\\\\"_\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.lang.String str6 = python2Target1.getVersion();
        boolean boolean7 = python2Target1.wantsBaseListener();
        boolean boolean8 = python2Target1.wantsBaseListener();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape(0);
        org.antlr.v4.codegen.CodeGenerator codeGenerator12 = null;
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator12, "\\1", true);
        java.lang.String str17 = python2Target1.getImplicitSetLabel("_tset#Context");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\0" + "'", str11, "\\0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\"" + "'", str15, "\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset_tset#Context" + "'", str17, "_tset_tset#Context");
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getImplicitRuleLabel("\"_tset_hi!\"");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_\"_tset_hi!\"" + "'", str7, "_\"_tset_hi!\"");
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str11 = python2Target1.getLanguage();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("tset_tset0Contex");
        java.lang.String str15 = python2Target1.getTargetStringLiteralFromString("\"d\"");
        java.lang.String str17 = python2Target1.getListLabel("_tset\"d\"");
        org.antlr.v4.tool.Rule rule18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = python2Target1.getRuleFunctionContextStructName(rule18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"tset_tset0Contex\"" + "'", str13, "\"tset_tset0Contex\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\"d\\\"\"" + "'", str15, "\"\\\"d\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "_tset\"d\"" + "'", str17, "_tset\"d\"");
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.tool.ast.GrammarAST grammarAST5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = python2Target1.getLoopCounter(grammarAST5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("hi!");
        boolean boolean11 = python2Target1.templatesExist();
        java.lang.String str13 = python2Target1.getTargetStringLiteralFromString("_tset\"@\"Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator14 = python2Target1.getCodeGenerator();
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("_\"ython\"");
        java.lang.String str17 = python2Target1.getVersion();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"" + "'", str10, "\"hi!\"");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\"_tset\\\"@\\\"Context\"" + "'", str13, "\"_tset\\\"@\\\"Context\"");
        org.junit.Assert.assertNull(codeGenerator14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"_\\\"ython\\\"\"" + "'", str16, "\"_\\\"ython\\\"\"");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "4.5.2.1" + "'", str17, "4.5.2.1");
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("hi!");
        java.util.Set<java.lang.String> strSet8 = python2Target1.getBadWords();
        java.lang.String str9 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) 'a');
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("\\nContext");
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromString("_tset#Context", false);
        java.lang.Class<?> wildcardClass17 = python2Target1.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tsethi!" + "'", str7, "_tsethi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "a" + "'", str11, "a");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\\nContext" + "'", str13, "_\\nContext");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "_tset#Context" + "'", str16, "_tset#Context");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str6 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str10 = python2Target1.getListLabel("_tset\"\\\"__tset\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_tset\"\\\"__tset\\\"\"" + "'", str10, "_tset\"\\\"__tset\\\"\"");
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape((int) '#');
        int int11 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("_#", false);
        java.lang.String str16 = python2Target1.encodeIntAsCharEscape((int) (byte) 10);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#" + "'", str10, "#");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "_#" + "'", str14, "_#");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\\n" + "'", str16, "\\n");
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset_hi!\"");
        java.lang.String str13 = python2Target1.getLanguage();
        java.util.Set<java.lang.String> strSet14 = python2Target1.getBadWords();
        int int15 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_hi!\"Context" + "'", str12, "\"_tset_hi!\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Python2" + "'", str13, "Python2");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.lang.String str10 = python2Target1.getLanguage();
        int int11 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python2Target1.getImplicitRuleLabel("\"__\\\"_tset_hi!\\\"\"");
        java.lang.String str15 = python2Target1.getAltLabelContextStructName("a");
        boolean boolean16 = python2Target1.supportsOverloadedMethods();
        java.lang.String str19 = python2Target1.getTargetStringLiteralFromString("____tsetContext", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"__\\\"_tset_hi!\\\"\"" + "'", str13, "_\"__\\\"_tset_hi!\\\"\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "AContext" + "'", str15, "AContext");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "____tsetContext" + "'", str19, "____tsetContext");
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        java.lang.String str5 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("");
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_4.5.2.1" + "'", str5, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "_" + "'", str10, "_");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("hi!");
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("__tset_hi!");
        java.util.Set<java.lang.String> strSet13 = python2Target1.getBadWords();
        int int14 = python2Target1.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar15 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator16 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target17 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator16);
        boolean boolean18 = python2Target17.supportsOverloadedMethods();
        boolean boolean19 = python2Target17.templatesExist();
        java.lang.String str22 = python2Target17.getTargetStringLiteralFromString("d", false);
        java.lang.String str24 = python2Target17.getAltLabelContextStructName("_4.5.2.1");
        int int25 = python2Target17.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar26 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target28 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator27);
        java.lang.String str31 = python2Target28.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup32 = python2Target28.getTemplates();
        int int33 = python2Target28.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar34 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator35 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target36 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator35);
        java.lang.String str38 = python2Target36.getAltLabelContextStructName("\\0");
        boolean boolean39 = python2Target36.wantsBaseListener();
        java.lang.String str41 = python2Target36.getImplicitRuleLabel("___tset");
        java.lang.String str43 = python2Target36.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet44 = python2Target36.getBadWords();
        org.antlr.v4.tool.Grammar grammar45 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator46 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target47 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator46);
        boolean boolean48 = python2Target47.supportsOverloadedMethods();
        boolean boolean49 = python2Target47.wantsBaseListener();
        boolean boolean50 = python2Target47.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup51 = python2Target47.getTemplates();
        boolean boolean52 = python2Target47.templatesExist();
        java.lang.String str54 = python2Target47.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator55 = python2Target47.getCodeGenerator();
        boolean boolean56 = python2Target47.templatesExist();
        org.antlr.v4.tool.Grammar grammar57 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator58 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target59 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator58);
        boolean boolean60 = python2Target59.supportsOverloadedMethods();
        boolean boolean61 = python2Target59.wantsBaseListener();
        boolean boolean62 = python2Target59.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar63 = null;
        int[] intArray64 = new int[] {};
        java.lang.String[] strArray65 = python2Target59.getTokenTypesAsTargetLabels(grammar63, intArray64);
        org.antlr.v4.codegen.CodeGenerator codeGenerator66 = null;
        java.lang.String str69 = python2Target59.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator66, "hi!", true);
        org.antlr.v4.tool.Grammar grammar70 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator71 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target72 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator71);
        boolean boolean73 = python2Target72.supportsOverloadedMethods();
        boolean boolean74 = python2Target72.wantsBaseListener();
        boolean boolean75 = python2Target72.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar76 = null;
        int[] intArray77 = new int[] {};
        java.lang.String[] strArray78 = python2Target72.getTokenTypesAsTargetLabels(grammar76, intArray77);
        java.lang.String[] strArray79 = python2Target59.getTokenTypesAsTargetLabels(grammar70, intArray77);
        java.lang.String[] strArray80 = python2Target47.getTokenTypesAsTargetLabels(grammar57, intArray77);
        java.lang.String[] strArray81 = python2Target36.getTokenTypesAsTargetLabels(grammar45, intArray77);
        java.lang.String[] strArray82 = python2Target28.getTokenTypesAsTargetLabels(grammar34, intArray77);
        java.lang.String[] strArray83 = python2Target17.getTokenTypesAsTargetLabels(grammar26, intArray77);
        java.lang.String[] strArray84 = python2Target1.getTokenTypesAsTargetLabels(grammar15, intArray77);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_4.5.2.1" + "'", str8, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Hi!Context" + "'", str10, "Hi!Context");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "__tset_hi!Context" + "'", str12, "__tset_hi!Context");
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "d" + "'", str22, "d");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "_4.5.2.1Context" + "'", str24, "_4.5.2.1Context");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2147483647 + "'", int25 == 2147483647);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(sTGroup32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483647 + "'", int33 == 2147483647);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\\0Context" + "'", str38, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "____tset" + "'", str41, "____tset");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"@\"" + "'", str43, "\"@\"");
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(sTGroup51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "\"_tsetContext\"" + "'", str54, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "\"i\"" + "'", str69, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strArray84);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        boolean boolean6 = python2Target1.wantsBaseListener();
        java.lang.String str8 = python2Target1.getListLabel("_tset\\\"@\\\"Context");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getRuleFunctionContextStructName(ruleFunction9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tset\\\"@\\\"Context" + "'", str8, "_tset\\\"@\\\"Context");
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str4 = python2Target1.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("_tset_hi!");
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"\\\"Contex\\\"\"");
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("_tset_tset\"tset0Contex\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = python2Target1.getElementListName("\"4.5.2.1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "_tsetContext" + "'", str8, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset_hi!\"" + "'", str10, "\"_tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"\\\"Contex\\\"\"Context" + "'", str12, "\"\\\"Contex\\\"\"Context");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_tset_tset\\\"tset0Contex\\\"\"" + "'", str14, "\"_tset_tset\\\"tset0Contex\\\"\"");
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator9 = python2Target1.getCodeGenerator();
        java.lang.String str11 = python2Target1.getAltLabelContextStructName("_tset\"@\"");
        java.lang.String str13 = python2Target1.getAltLabelContextStructName("__\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tsetContext\"" + "'", str8, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tset\"@\"Context" + "'", str11, "_tset\"@\"Context");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "__\"\\\".5.2.\\\"\"Context" + "'", str13, "__\"\\\".5.2.\\\"\"Context");
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python2Target1.getCodeGenerator();
        int int4 = python2Target1.getInlineTestSetWordSize();
        int int5 = python2Target1.getInlineTestSetWordSize();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"hi!\"Context");
        java.lang.String str10 = python2Target1.getAltLabelContextStructName("\"_tset_hi!\"");
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"hi!\\\"Context\"" + "'", str8, "\"\\\"hi!\\\"Context\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tset_hi!\"Context" + "'", str10, "\"_tset_hi!\"Context");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        java.lang.String str3 = python2Target1.getVersion();
        boolean boolean4 = python2Target1.supportsOverloadedMethods();
        boolean boolean5 = python2Target1.wantsBaseListener();
        boolean boolean6 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        java.lang.String str23 = python2Target1.getImplicitRuleLabel("_\"\\\".5.2.\\\"\"");
        int int24 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str26 = python2Target1.getImplicitSetLabel("_tset#Context");
        org.antlr.v4.codegen.model.RuleFunction ruleFunction27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = python2Target1.getRuleFunctionContextStructName(ruleFunction27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "__\"\\\".5.2.\\\"\"" + "'", str23, "__\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset_tset#Context" + "'", str26, "_tset_tset#Context");
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        boolean boolean15 = python2Target14.supportsOverloadedMethods();
        boolean boolean16 = python2Target14.wantsBaseListener();
        boolean boolean17 = python2Target14.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar18 = null;
        int[] intArray19 = new int[] {};
        java.lang.String[] strArray20 = python2Target14.getTokenTypesAsTargetLabels(grammar18, intArray19);
        java.lang.String[] strArray21 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray19);
        java.lang.String str22 = python2Target1.getVersion();
        org.antlr.v4.codegen.CodeGenerator codeGenerator23 = null;
        java.lang.String str26 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator23, "\"_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\"Context", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator27 = python2Target1.getCodeGenerator();
        boolean boolean28 = python2Target1.templatesExist();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[]");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4.5.2.1" + "'", str22, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\\\"Contex" + "'", str26, "_tset\\\"\\\\\\\"ython\\\\\\\"\\\"\\\"Contex");
        org.junit.Assert.assertNull(codeGenerator27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        java.lang.String str3 = python2Target1.getVersion();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        java.lang.String str7 = python2Target1.getImplicitSetLabel("\"4.5.2.1\"Context");
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\"_\\\"\\\\\\\".5.2.\\\\\\\"\\\"\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "4.5.2.1" + "'", str3, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "_tset\"4.5.2.1\"Context" + "'", str7, "_tset\"4.5.2.1\"Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\\"_\\\\\\\"\\\\\\\\\\\\\\\".5.2.\\\\\\\\\\\\\\\"\\\\\\\"\\\"" + "'", str10, "\\\"_\\\\\\\"\\\\\\\\\\\\\\\".5.2.\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\"@\"", false);
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = codeGenerator7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"@\\\"" + "'", str6, "\\\"@\\\"");
        org.junit.Assert.assertNull(codeGenerator7);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("Python2");
        org.antlr.v4.codegen.CodeGenerator codeGenerator7 = python2Target1.getCodeGenerator();
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = python2Target1.getCodeGenerator();
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromString("\"\\\"\\\\\\\"i\\\\\\\"\\\"\"", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"Python2\"" + "'", str6, "\"Python2\"");
        org.junit.Assert.assertNull(codeGenerator7);
        org.junit.Assert.assertNull(codeGenerator8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\\\"\\\\\\\"\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\"\\\\\\\"\\\"" + "'", str11, "\\\"\\\\\\\"\\\\\\\\\\\\\\\"i\\\\\\\\\\\\\\\"\\\\\\\"\\\"");
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_tset\\0Context");
        boolean boolean13 = python2Target1.wantsBaseListener();
        boolean boolean14 = python2Target1.wantsBaseVisitor();
        boolean boolean15 = python2Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = python2Target1.getElementName("__tset\"4.5.2.1\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset\\0Context" + "'", str12, "_tset_tset\\0Context");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar5 = null;
        int[] intArray6 = new int[] {};
        java.lang.String[] strArray7 = python2Target1.getTokenTypesAsTargetLabels(grammar5, intArray6);
        org.antlr.v4.codegen.CodeGenerator codeGenerator8 = null;
        java.lang.String str11 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator8, "hi!", true);
        java.lang.String str14 = python2Target1.getTargetStringLiteralFromString("_tsetContext", true);
        boolean boolean15 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet16 = python2Target1.getBadWords();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getImplicitTokenLabel("\"Python2\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\"i\"" + "'", str11, "\"i\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"_tsetContext\"" + "'", str14, "\"_tsetContext\"");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strSet16);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.templatesExist();
        org.antlr.v4.codegen.CodeGenerator codeGenerator3 = python2Target1.getCodeGenerator();
        int int4 = python2Target1.getInlineTestSetWordSize();
        int int5 = python2Target1.getInlineTestSetWordSize();
        boolean boolean6 = python2Target1.wantsBaseVisitor();
        java.lang.String str7 = python2Target1.getLanguage();
        java.lang.String str9 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        boolean boolean10 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(codeGenerator3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 64 + "'", int4 == 64);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 64 + "'", int5 == 64);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "d" + "'", str9, "d");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape(10);
        java.lang.String str10 = python2Target1.getImplicitRuleLabel("_tset");
        int int11 = python2Target1.getSerializedATNSegmentLimit();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getElementName("_set\\\"__tset_hi");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "__tset" + "'", str10, "__tset");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2147483647 + "'", int11 == 2147483647);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet9 = python2Target1.getBadWords();
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("\"\\\"i\\\"\"", false);
        java.lang.String str14 = python2Target1.getAltLabelContextStructName("\"\\\"i\\\"Context\"Context");
        int int15 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str17 = python2Target1.getImplicitRuleLabel("__tset\\\"@\\\"Context");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"@\"" + "'", str8, "\"@\"");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\\"\\\\\\\"i\\\\\\\"\\\"" + "'", str12, "\\\"\\\\\\\"i\\\\\\\"\\\"");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\"\\\"i\\\"Context\"ContextContext" + "'", str14, "\"\\\"i\\\"Context\"ContextContext");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 64 + "'", int15 == 64);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "___tset\\\"@\\\"Context" + "'", str17, "___tset\\\"@\\\"Context");
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getImplicitRuleLabel("_tset_tsetPython2");
        boolean boolean6 = python2Target1.supportsOverloadedMethods();
        int int7 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "__tset_tsetPython2" + "'", str5, "__tset_tsetPython2");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 64 + "'", int7 == 64);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("_tset_tsetPython2");
        java.lang.String str7 = python2Target1.getLanguage();
        org.stringtemplate.v4.STGroup sTGroup8 = python2Target1.getTemplates();
        boolean boolean9 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "__tset_tsetPython2" + "'", str6, "__tset_tsetPython2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertNotNull(sTGroup8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        int int4 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str6 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("\"Contex\"");
        java.lang.Class<?> wildcardClass9 = python2Target1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2147483647 + "'", int4 == 2147483647);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_tsethi!" + "'", str6, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"Contex\\\"\"" + "'", str8, "\"\\\"Contex\\\"\"");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        org.antlr.v4.codegen.CodeGenerator codeGenerator4 = python2Target1.getCodeGenerator();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        java.util.Set<java.lang.String> strSet6 = python2Target1.getBadWords();
        boolean boolean7 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\"\\\"\\\\\\\"i\\\\\\\"\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertNull(codeGenerator4);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\"\\\"\\\\\\\"i\\\\\\\"\\\"\"" + "'", str9, "_tset\"\\\"\\\\\\\"i\\\\\\\"\\\"\"");
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("_4.5.2.1Context");
        org.antlr.v4.codegen.CodeGenerator codeGenerator10 = python2Target1.getCodeGenerator();
        boolean boolean11 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_4.5.2.1ContextContext" + "'", str9, "_4.5.2.1ContextContext");
        org.junit.Assert.assertNull(codeGenerator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("_4.5.2.1Context");
        boolean boolean10 = python2Target1.templatesExist();
        org.antlr.v4.tool.ast.GrammarAST grammarAST11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = python2Target1.grammarSymbolCausesIssueInGeneratedCode(grammarAST11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_4.5.2.1ContextContext" + "'", str9, "_4.5.2.1ContextContext");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("___tset");
        boolean boolean7 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("____tset");
        java.lang.String str11 = python2Target1.encodeIntAsCharEscape((int) '#');
        java.lang.String str13 = python2Target1.getListLabel("_\"_tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "____tset" + "'", str6, "____tset");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "____tsetContext" + "'", str9, "____tsetContext");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#" + "'", str11, "#");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_\"_tset_hi!\"" + "'", str13, "_\"_tset_hi!\"");
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str5 = python2Target1.getLanguage();
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        int int7 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str9 = python2Target1.getAltLabelContextStructName("_4.5.2.1Context");
        int int10 = python2Target1.getInlineTestSetWordSize();
        org.antlr.v4.codegen.CodeGenerator codeGenerator11 = python2Target1.getCodeGenerator();
        int int12 = python2Target1.getSerializedATNSegmentLimit();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Python2" + "'", str5, "Python2");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2147483647 + "'", int7 == 2147483647);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_4.5.2.1ContextContext" + "'", str9, "_4.5.2.1ContextContext");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertNull(codeGenerator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        java.lang.String str5 = python2Target1.getListLabel("_4.5.2.1");
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = python2Target1.getElementListName("_tsethi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "_4.5.2.1" + "'", str5, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        java.lang.String str12 = python2Target1.encodeIntAsCharEscape((int) (short) 10);
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "", false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\\n" + "'", str12, "\\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        boolean boolean5 = python2Target1.supportsOverloadedMethods();
        java.lang.String str7 = python2Target1.encodeIntAsCharEscape((int) (short) 100);
        int int8 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str9 = python2Target1.getLanguage();
        int int10 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str12 = python2Target1.getImplicitSetLabel("_tset\\0Context");
        int int13 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str15 = python2Target1.getAltLabelContextStructName("\"tset6\"");
        org.stringtemplate.v4.STGroup sTGroup16 = python2Target1.getTemplates();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = python2Target1.getElementListName("_tset__tset\\\"@\\\"Context");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "d" + "'", str7, "d");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 64 + "'", int8 == 64);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 64 + "'", int10 == 64);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "_tset_tset\\0Context" + "'", str12, "_tset_tset\\0Context");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 64 + "'", int13 == 64);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"tset6\"Context" + "'", str15, "\"tset6\"Context");
        org.junit.Assert.assertNotNull(sTGroup16);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("\"@\"");
        java.lang.String str6 = python2Target1.getTargetStringLiteralFromString("\"@\"", false);
        java.lang.String str8 = python2Target1.getListLabel("\"\\\"_tset_tset_hi!\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = python2Target1.getElementName("__tset_tset0Contex");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tset\"@\"" + "'", str3, "_tset\"@\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\\\"@\\\"" + "'", str6, "\\\"@\\\"");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\\\"_tset_tset_hi!\\\"\"" + "'", str8, "\"\\\"_tset_tset_hi!\\\"\"");
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getAltLabelContextStructName("\\0");
        boolean boolean4 = python2Target1.wantsBaseListener();
        org.antlr.v4.codegen.CodeGenerator codeGenerator5 = python2Target1.getCodeGenerator();
        java.lang.String str6 = python2Target1.getLanguage();
        java.lang.String str7 = python2Target1.getLanguage();
        boolean boolean8 = python2Target1.supportsOverloadedMethods();
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\\0Context" + "'", str3, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(codeGenerator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Python2" + "'", str6, "Python2");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Python2" + "'", str7, "Python2");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        java.lang.String str9 = python2Target1.getLanguage();
        java.util.Set<java.lang.String> strSet10 = python2Target1.getBadWords();
        int int11 = python2Target1.getInlineTestSetWordSize();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Python2" + "'", str9, "Python2");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseListener();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("__tset_tsetPython2", true);
        org.antlr.v4.tool.ast.GrammarAST grammarAST8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = python2Target1.getLoopCounter(grammarAST8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"__tset_tsetPython2\"" + "'", str7, "\"__tset_tsetPython2\"");
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tset\\0Context");
        java.lang.String str10 = python2Target1.getListLabel("\"_tsethi!\"");
        java.lang.String str11 = python2Target1.getLanguage();
        java.lang.String str13 = python2Target1.getImplicitSetLabel("\"__tset_hi!\"");
        java.lang.String str15 = python2Target1.getListLabel("\"\\\\\\\"@\\\\\\\"\"");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\\\\0Context\"" + "'", str8, "\"_tset\\\\0Context\"");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"_tsethi!\"" + "'", str10, "\"_tsethi!\"");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Python2" + "'", str11, "Python2");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "_tset\"__tset_hi!\"" + "'", str13, "_tset\"__tset_hi!\"");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\"\\\\\\\"@\\\\\\\"\"" + "'", str15, "\"\\\\\\\"@\\\\\\\"\"");
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        boolean boolean8 = python2Target1.templatesExist();
        boolean boolean9 = python2Target1.templatesExist();
        java.lang.String str10 = python2Target1.getLanguage();
        java.lang.String str11 = python2Target1.getVersion();
        org.antlr.v4.tool.Grammar grammar12 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target14 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator13);
        java.lang.String str17 = python2Target14.getTargetStringLiteralFromString("", false);
        org.stringtemplate.v4.STGroup sTGroup18 = python2Target14.getTemplates();
        int int19 = python2Target14.getSerializedATNSegmentLimit();
        org.antlr.v4.tool.Grammar grammar20 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator21 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target22 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator21);
        java.lang.String str24 = python2Target22.getAltLabelContextStructName("\\0");
        boolean boolean25 = python2Target22.wantsBaseListener();
        java.lang.String str27 = python2Target22.getImplicitRuleLabel("___tset");
        java.lang.String str29 = python2Target22.getTargetStringLiteralFromString("@");
        java.util.Set<java.lang.String> strSet30 = python2Target22.getBadWords();
        org.antlr.v4.tool.Grammar grammar31 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator32 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target33 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator32);
        boolean boolean34 = python2Target33.supportsOverloadedMethods();
        boolean boolean35 = python2Target33.wantsBaseListener();
        boolean boolean36 = python2Target33.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup37 = python2Target33.getTemplates();
        boolean boolean38 = python2Target33.templatesExist();
        java.lang.String str40 = python2Target33.getTargetStringLiteralFromString("_tsetContext");
        org.antlr.v4.codegen.CodeGenerator codeGenerator41 = python2Target33.getCodeGenerator();
        boolean boolean42 = python2Target33.templatesExist();
        org.antlr.v4.tool.Grammar grammar43 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator44 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target45 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator44);
        boolean boolean46 = python2Target45.supportsOverloadedMethods();
        boolean boolean47 = python2Target45.wantsBaseListener();
        boolean boolean48 = python2Target45.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar49 = null;
        int[] intArray50 = new int[] {};
        java.lang.String[] strArray51 = python2Target45.getTokenTypesAsTargetLabels(grammar49, intArray50);
        org.antlr.v4.codegen.CodeGenerator codeGenerator52 = null;
        java.lang.String str55 = python2Target45.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator52, "hi!", true);
        org.antlr.v4.tool.Grammar grammar56 = null;
        org.antlr.v4.codegen.CodeGenerator codeGenerator57 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target58 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator57);
        boolean boolean59 = python2Target58.supportsOverloadedMethods();
        boolean boolean60 = python2Target58.wantsBaseListener();
        boolean boolean61 = python2Target58.wantsBaseVisitor();
        org.antlr.v4.tool.Grammar grammar62 = null;
        int[] intArray63 = new int[] {};
        java.lang.String[] strArray64 = python2Target58.getTokenTypesAsTargetLabels(grammar62, intArray63);
        java.lang.String[] strArray65 = python2Target45.getTokenTypesAsTargetLabels(grammar56, intArray63);
        java.lang.String[] strArray66 = python2Target33.getTokenTypesAsTargetLabels(grammar43, intArray63);
        java.lang.String[] strArray67 = python2Target22.getTokenTypesAsTargetLabels(grammar31, intArray63);
        java.lang.String[] strArray68 = python2Target14.getTokenTypesAsTargetLabels(grammar20, intArray63);
        java.lang.String[] strArray69 = python2Target1.getTokenTypesAsTargetLabels(grammar12, intArray63);
        java.lang.String str70 = python2Target1.getLanguage();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "4.5.2.1" + "'", str11, "4.5.2.1");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(sTGroup18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\\0Context" + "'", str24, "\\0Context");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "____tset" + "'", str27, "____tset");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "\"@\"" + "'", str29, "\"@\"");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(sTGroup37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "\"_tsetContext\"" + "'", str40, "\"_tsetContext\"");
        org.junit.Assert.assertNull(codeGenerator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\"i\"" + "'", str55, "\"i\"");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Python2" + "'", str70, "Python2");
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        int int6 = python2Target1.getSerializedATNSegmentLimit();
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape(10);
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        boolean boolean10 = python2Target1.wantsBaseListener();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2147483647 + "'", int6 == 2147483647);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\n" + "'", str8, "\\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.templatesExist();
        java.util.Set<java.lang.String> strSet4 = python2Target1.getBadWords();
        java.lang.String str7 = python2Target1.getTargetStringLiteralFromString("", false);
        java.lang.String str9 = python2Target1.getImplicitSetLabel("\\0Context");
        java.lang.String str10 = python2Target1.getLanguage();
        int int11 = python2Target1.getInlineTestSetWordSize();
        java.lang.String str13 = python2Target1.encodeIntAsCharEscape(1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "_tset\\0Context" + "'", str9, "_tset\\0Context");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Python2" + "'", str10, "Python2");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 64 + "'", int11 == 64);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "\\1" + "'", str13, "\\1");
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        org.stringtemplate.v4.STGroup sTGroup5 = python2Target1.getTemplates();
        boolean boolean6 = python2Target1.templatesExist();
        boolean boolean7 = python2Target1.wantsBaseVisitor();
        java.lang.String str10 = python2Target1.getTargetStringLiteralFromString("\".5.2.\"", true);
        java.lang.String str12 = python2Target1.getAltLabelContextStructName("\"_tset_hi!\"");
        org.antlr.v4.codegen.CodeGenerator codeGenerator13 = null;
        java.lang.String str16 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator13, "_tset_tset_hi!", true);
        org.antlr.v4.codegen.CodeGenerator codeGenerator17 = null;
        java.lang.String str20 = python2Target1.getTargetStringLiteralFromANTLRStringLiteral(codeGenerator17, "_Python2Context", false);
        java.lang.String str22 = python2Target1.getAltLabelContextStructName("_tset");
        java.lang.String str24 = python2Target1.getListLabel("\"__\\\"__tset\\\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = python2Target1.getElementName("_tset#");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(sTGroup5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"\\\".5.2.\\\"\"" + "'", str10, "\"\\\".5.2.\\\"\"");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset_hi!\"Context" + "'", str12, "\"_tset_hi!\"Context");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\"tset_tset_hi\"" + "'", str16, "\"tset_tset_hi\"");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Python2Contex" + "'", str20, "Python2Contex");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "_tsetContext" + "'", str22, "_tsetContext");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\"__\\\"__tset\\\"\"" + "'", str24, "\"__\\\"__tset\\\"\"");
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        org.antlr.v4.codegen.CodeGenerator codeGenerator6 = python2Target1.getCodeGenerator();
        java.lang.String str8 = python2Target1.getTargetStringLiteralFromString("_tset\\0Context");
        boolean boolean9 = python2Target1.wantsBaseVisitor();
        java.lang.String str11 = python2Target1.getImplicitSetLabel("Python2");
        org.antlr.v4.tool.ast.GrammarAST grammarAST12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = python2Target1.getLoopCounter(grammarAST12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(codeGenerator6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"_tset\\\\0Context\"" + "'", str8, "\"_tset\\\\0Context\"");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "_tsetPython2" + "'", str11, "_tsetPython2");
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        boolean boolean2 = python2Target1.supportsOverloadedMethods();
        boolean boolean3 = python2Target1.wantsBaseListener();
        boolean boolean4 = python2Target1.wantsBaseVisitor();
        java.lang.String str6 = python2Target1.getImplicitRuleLabel("4.5.2.1");
        java.lang.String str8 = python2Target1.encodeIntAsCharEscape((int) (short) 0);
        java.lang.String str10 = python2Target1.encodeIntAsCharEscape(0);
        java.lang.String str12 = python2Target1.getTargetStringLiteralFromString("_tset\"@\"ContextContext");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "_4.5.2.1" + "'", str6, "_4.5.2.1");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\\0" + "'", str8, "\\0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\\0" + "'", str10, "\\0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"_tset\\\"@\\\"ContextContext\"" + "'", str12, "\"_tset\\\"@\\\"ContextContext\"");
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        org.antlr.v4.codegen.CodeGenerator codeGenerator0 = null;
        org.antlr.v4.codegen.target.Python2Target python2Target1 = new org.antlr.v4.codegen.target.Python2Target(codeGenerator0);
        java.lang.String str3 = python2Target1.getImplicitSetLabel("hi!");
        java.lang.String str5 = python2Target1.getListLabel("");
        java.lang.String str6 = python2Target1.getVersion();
        boolean boolean7 = python2Target1.wantsBaseListener();
        java.lang.String str8 = python2Target1.getLanguage();
        int int9 = python2Target1.getInlineTestSetWordSize();
        boolean boolean10 = python2Target1.supportsOverloadedMethods();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "_tsethi!" + "'", str3, "_tsethi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "4.5.2.1" + "'", str6, "4.5.2.1");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Python2" + "'", str8, "Python2");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 64 + "'", int9 == 64);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }
}

